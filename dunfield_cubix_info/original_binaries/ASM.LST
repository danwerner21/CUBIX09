DUNFIELD 6809 ASSEMBLER: D:ASM                                        PAGE: 1

0000                         1  *
0000                         2  * SYSTEM MEMORY LOCATIONS FOR USE BY APPLICATION PROGRAMS
0000                         3  *
2000                         4  OSRAM	EQU	$2000		USER APPLICATION RAM STARTS HEDE
DBFF                         5  OSEND	EQU	$DBFF		LAST LOCATION OF USER (NON-SYSTEM) RAM
D000                         6  OSUTIL	EQU	$D000		RAM FOR UTILITY PROGRAM USAGE
0000                         7  *
0000                         9  *
0000                        10  * ASM: A resident 6809 assembler
0000                        11  *
0000                        12  * Copyright 1983-2005 Dave Dunfield
0000                        13  * All rights reserved.
0000                        14  *
4000                        15  RAM	EQU	OSRAM+8192	FREE RAM AREA
0000                        16  * STORAGE
4000                        17  	ORG	RAM		RESERVED AREA FOR ASSEMBLER
4000                        18  FILPTR	RMB	2		POINTER TO SAVED FILENAME
4002                        19  ERRORS	RMB	2		COUNT OF ASSEMBLY ERRORS
4004                        20  VAL1	RMB	2		TEMPORARY REGISTER FOR EVAL
4006                        21  TEMP	RMB	2		TEMPORARY REGISTER FOR MEMOP
4008                        22  CURPC	RMB	2		CURRENT PROGRAM COUNTER
400A                        23  CURDP	RMB	2		CURRENT DIRECT PAGE VALUE
400C                        24  SYMLOC	RMB	2		CURRENT LOCATION IN SYMBOL TABLE
400E                        25  LINUM	RMB	2		CURRENT LISTING LINE NUMBER
4010                        26  PAGE	RMB	2		CURRENT PAGE NUMBER
4012                        27  PAGLIN	RMB	1		CURRENT LINE ON PAGE
4013                        28  VALUE	RMB	2		VALUE PRODUCED AS AN OPERAND
4015                        29  EMSG	RMB	1		ERROR MESSAGE FLAGE VARIABLE
4016                        30  POST	RMB	1		POSTBYTE PRODUCED
4017                        31  INDFLG	RMB	1		INDIRECT FLAG
4018                        32  ITYPE	RMB	1		SAVED INSTRUCTION TYPE
4019                        33  TITLE	RMB	60		TITLE SPACE
4055                        34  CODE	RMB	80		SPACE FOR CODE GENERATION
40A5                        35  LINE	RMB	80		INPUT LINE
40F5                        36  	RMB	100		STACK SPACE
4159                        37  STACK	EQU	*		PLACE STACK HERE
4159                        38  INFIL	RMB	522		INPUT FILE BUFFER
4363                        39  LSTFIL	RMB	522		LIST FILE BUFFER
456D                        40  OBJFIL	RMB	522		OBJECT FILE BUFFER
4777                        41  SYMTAB	EQU	*		SYMBOL TABLE STARTS HERE
4777                        42  *
2000                        43  	ORG	OSRAM		START IT HERE
2000                        44  * PROGRAM ENTRY
2000  81 3F                 45  ASM	CMPA	#'?'		HELP REQUEST?
2002  26 37                 46  	BNE	GOASM		NO
2004  3F                    47  	SWI			SOFTWARE INTERRUPT TO DOS
2005  19                    48  	FCB	25		SYSTEM REQUEST NUMBER
2006  55 73 65 3A 20 41 +   49  	FCCZ	'Use: ASM[/ERROR/FAST/SYMBOL/TERM/QUIET] <filename>'
2039  3F                    50  	SWI			SOFTWARE INTERRUPT TO DOS
203A  00                    51  	FCB	0		SYSTEM REQUEST NUMBER
203B  86 40                 52  GOASM	LDA	#=RAM		POINT TO HIGH BYTE OF DATA AREA
203D  1F 8B                 53  	TFR	A,DP		SET UP DIRECT PAGE
203F                        54  	SETDP	=RAM		LET ASSEMBLER IN ON IT
203F  10 CE 41 59           55  	LDS	#STACK		SET UP STACK
2043  4F                    56  	CLRA			START WITH ORIGIN OF ZERO
2044  5F                    57  	CLRB			SO WE CAN START THERE
2045  DD 08                 58  	STD	CURPC		SAVE IT
2047  DD 02                 59  	STD	ERRORS		CLEAR ERROR FLAG
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 2

2049  DD 0E                 60  	STD	LINUM		SET UP FOR FIRST PASS
204B  0F 17                 61  	CLR	INDFLG		INSURE WE ARE OK
204D                        62  *
204D                        63  * TEST FOR QULAIFIER
204D                        64  *
204D  A6 A4                 65  QUAL	LDA	,Y		GET CHARACTER FROM INPUT LINE
204F  81 2F                 66  	CMPA	#'/'		QUALIFIER?
2051  26 42                 67  	BNE	MAIN		NO, QUIT
2053  8E 31 61              68  	LDX	#QTABLE		POINT TO QUALIFIER TABLE
2056  3F                    69  	SWI			SOFTWARE INTERRUPT TO DOS
2057  12                    70  	FCB	18		SYSTEM REQUEST NUMBER
2058  C1 05                 71  	CMPB	#QMAX		ARE WE OVER LIMIT?
205A  24 07                 72  	BHS	QERR		IF SO, INDICATE SO
205C  8E 31 84              73  	LDX	#TERM		POINT TO QUALIFIER TABLE
205F  6F 85                 74  	CLR	B,X		SET QUALIFIER
2061  20 EA                 75  	BRA	QUAL		KEEP LOOKING FOR QUALIFIERS
2063  3F                    76  QERR	SWI			SOFTWARE INTERRUPT TO DOS
2064  18                    77  	FCB	24		SYSTEM REQUEST NUMBER
2065  49 6E 76 61 6C 69 +   78  	FCCZ	/Invalid qualifier: '/
207A  A6 A0                 79  	LDA	,Y+		GET CHARACTER
207C  3F                    80  DSQU1	SWI			SOFTWARE INTERRUPT TO DOS
207D  21                    81  	FCB	33		SYSTEM REQUEST NUMBER
207E  A6 A0                 82  	LDA	,Y+		GET NEXT CHARACTER
2080  81 2F                 83  	CMPA	#'/'		ANOTHER QUALIFIER?
2082  27 08                 84  	BEQ	GOABO		GO ABORT
2084  81 20                 85  	CMPA	#' '		SPACE
2086  27 04                 86  	BEQ	GOABO		IF SO, EXIT AS WELL
2088  81 0D                 87  	CMPA	#$0D		LAST TERMINATOR
208A  26 F0                 88  	BNE	DSQU1		IF NOT, KEEP DISPLAYING
208C  3F                    89  GOABO	SWI			SOFTWARE INTERRUPT TO DOS
208D  19                    90  	FCB	25		SYSTEM REQUEST NUMBER
208E  27 00                 91  	FCB	$27,0		QUOTE
2090  86 01                 92  	LDA	#1		INDICATE INVALID OPERATOR
2092  16 05 E5              93  	LBRA	ABORT		AND EXIT
2095                        94  *
2095                        95  * INITIALIZATIONS
2095                        96  *
2095                        97  * GET FILENAME & SETUP TITLE
2095                        98  *
2095  34 20                 99  MAIN	PSHS	Y		SAVE FILENAME POINTER
2097  3F                   100  	SWI			SOFTWARE INTERRUPT TO DOS
2098  0B                   101  	FCB	11		SYSTEM REQUEST NUMBER
2099  10 26 05 DD          102  	LBNE	ABORT		INVALID, REPORT ERROR
209D  9F 00                103  	STX	FILPTR		SAVE FILENAME
209F  CC 41 53             104  	LDD	#'AS'		GET FIRST PORTION
20A2  ED 84                105  	STD	,X		SAVE IT
20A4  86 4D                106  	LDA	#'M'		LAST CHAR
20A6  A7 02                107  	STA	2,X		WRITE IT
20A8                       108  * SET UP DEFAULT TITLE
20A8  10 8E 40 19          109  	LDY	#TITLE		POINT TO TITLE
20AC  30 18                110  	LEAX	-8,X		BACKUP TO DIRECTORY
20AE  C6 08                111  	LDB	#8		COPY UP TO 8 CHARS
20B0  A6 80                112  CPYNAM	LDA	,X+		GET CHAR FROM DIR
20B2  27 05                113  	BEQ	CPYN1		NO MORE, QUIT
20B4  A7 A0                114  	STA	,Y+		SAVE IN TITLE
20B6  5A                   115  	DECB			REDUCE COUNT
20B7  26 F7                116  	BNE	CPYNAM		CONTINUE
20B9  86 0D                117  CPYN1	LDA	#$0D		GET CR
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 3

20BB  A7 A4                118  	STA	,Y		TERMINATE TITLE
20BD                       119  * OPEN INPUT FILE
20BD  CE 41 59             120  	LDU	#INFIL		POINT TO INPUT FCB
20C0  3F                   121  	SWI			SOFTWARE INTERRUPT TO DOS
20C1  37                   122  	FCB	55		SYSTEM REQUEST NUMBER
20C2  10 26 05 B4          123  	LBNE	ABORT		ABORT OPERATION
20C6                       124  * OPEN LISTING FILE FOR WRITE
20C6  7D 31 84             125  	TST	TERM		TEST FOR LISTING FILE
20C9  27 14                126  	BEQ	INITS		IF SO, DON'T OPEN LISTING
20CB  9E 00                127  	LDX	FILPTR		RESTORE FILE POINTER
20CD  CC 4C 53             128  	LDD	#'LS'		GET 'LS'
20D0  ED 84                129  	STD	,X		SAVE IT
20D2  86 54                130  	LDA	#'T'		GET 'T'
20D4  A7 02                131  	STA	2,X		SAVE IN NAME
20D6  CE 43 63             132  	LDU	#LSTFIL		POINT TO LIST FCB
20D9  3F                   133  	SWI			SOFTWARE INTERRUPT TO DOS
20DA  38                   134  	FCB	56		SYSTEM REQUEST NUMBER
20DB  10 26 05 9B          135  	LBNE	ABORT		ABORT OPERATION
20DF                       136  * INITIALIZE SYMBOL TABLE
20DF  8E 47 77             137  INITS	LDX	#SYMTAB		POINT TO SYMBOL TABLE
20E2  9F 0C                138  	STX	SYMLOC		POINT TO SYMBOL TABLE LOCATION
20E4  6F 84                139  	CLR	,X		INDICATE NO SYMBOLS
20E6  7D 31 88             140  	TST	QUIET		ARE WE BEING QUIET?
20E9  27 11                141  	BEQ	PASS1		DON'T SAY A WORD
20EB  3F                   142  	SWI			SOFTWARE INTERRUPT TO DOS
20EC  18                   143  	FCB	24		SYSTEM REQUEST NUMBER
20ED  46 69 72 73 74 20 +  144  	FCCZ	'First pass... '
20FC                       145  *
20FC                       146  * PASS ONE, RESOLVE SYMBOLS
20FC                       147  *
20FC  86 FF                148  PASS1	LDA	#$FF		INSURE HIGH BYTE IS NOT ZERO
20FE  97 0A                149  	STA	CURDP		SET DIRECT PAGE ADDRESING OFF
2100  10 8E 40 A5          150  PLINE	LDY	#LINE		POINT TO LINE BUFFER
2104  17 09 D2             151  L1	LBSR	RDINP		READ A CHARACTER FROM THE FILE
2107  10 26 01 6A          152  	LBNE	OPTMIZ		WE HAVE HIT THE END, PERFORM OPT. PASSES
210B  81 09                153  	CMPA	#9		IS IT TAB?
210D  26 02                154  	BNE	SAVCHR		NO, SAVE IT
210F  86 20                155  	LDA	#' '		CONVERT TO BLANK
2111  A7 A0                156  SAVCHR	STA	,Y+		SAVE CHARACTER FOR LATER REFERENCE
2113  81 0D                157  	CMPA	#$0D		END OF LINE?
2115  26 ED                158  	BNE	L1		KEEP LOOKING
2117  10 8E 40 A5          159  	LDY	#LINE		POINT TO START OF LINE
211B  0F 15                160  	CLR	EMSG		INSURE NO ERROR MESSAGE
211D                       161  * TEST FOR COMMENT LINE
211D  A6 A4                162  	LDA	,Y		GET FIREST CHARACTER FROM LINE
211F  81 2A                163  	CMPA	#'*'		COMMENT?
2121  27 DD                164  	BEQ	PLINE		SKIP TO END OF LINE
2123                       165  * TEST FOR LABLE
2123  81 20                166  	CMPA	#' '		NO LABLE?
2125  27 74                167  	BEQ	SKPLAB		IF SO, IGNORE
2127  81 0D                168  	CMPA	#$0D		NULL LINE?
2129  27 70                169  	BEQ	SKPLAB		IF SO, IGNORE
212B  17 05 88             170  	LBSR	LOCSYM		FIND THE SYMBOL
212E  96 0F                171  	LDA	LINUM+1		IS THIS AN OPTOMIZATION PASS?
2130  27 1B                172  	BEQ	INSYM		NO, PERFORM FIRST PASS INITIALIZATION
2132  9C 08                173  	CMPX	CURPC		IS THIS WHERE WE ARE
2134  27 65                174  	BEQ	SKPLAB		DON'T UPDATE
2136  17 05 43             175  	LBSR	LOCINS		LOOK UP INSTRUCTION
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 4

2139  C1 0B                176  	CMPB	#11		IS IT 'EQU'?
213B  27 61                177  	BEQ	SKPL1		IF SO, DON'T FLAG
213D  34 04                178  	PSHS	B		SAVE INSTRUCTION TYPE
213F  DC 08                179  	LDD	CURPC		GET CURRENT PROGRAM COUNTER
2141  9E 06                180  	LDX	TEMP		GET ADDRESS OF SYMBOL TABLE ENTRY
2143  ED 84                181  	STD	,X		UPDATE SYMBOL TABLE
2145  86 FF                182  	LDA	#$FF		GET SET FLAG
2147  97 0E                183  	STA	LINUM		INDICATE WE MADE CHANGES
2149  35 04                184  	PULS	B		RESTORE INSTRUCTION TYPE
214B  20 51                185  	BRA	SKPL1		CONTINUE
214D  0D 15                186  INSYM	TST	EMSG		DID WE FIND IT?
214F  26 27                187  	BNE	SYMOK		NOT FOUND, IT'S OK
2151                       188  * SYMBOL ALREADY EXISTS, INDICATE SO
2151  0A 15                189  	DEC	EMSG		INSURE WE DISPLAY IN ERROR
2153  8E 2B 33             190  	LDX	#EMSG1		POINT TO MESSAGE
2156  17 09 19             191  	LBSR	WRIMSG		DISPLAY
2159  17 09 16             192  	LBSR	WRIMSG		DISPLAY DUPLICATE SYMBOL MESSAGE,
215C  10 8E 40 A5          193  	LDY	#LINE		POINT TO LINE
2160  17 08 B4             194  OUTSYS	LBSR	TSTERM		LOOK FOR TERMINATOR
2163  27 05                195  	BEQ	SYMCR		IF SO, QUIT
2165  17 09 27             196  	LBSR	WRICHR		OUTPUT CHARACTER
2168  20 F6                197  	BRA	OUTSYS		KEEP DISPLAYING
216A  86 0D                198  SYMCR	LDA	#$0D		NEW LINE CHARACTER
216C  17 09 20             199  	LBSR	WRICHR		OUTPUT
216F  DC 02                200  	LDD	ERRORS		GET ERROR FLAG
2171  C3 00 01             201  	ADDD	#1		INCREMENT
2174  DD 02                202  	STD	ERRORS		RESAVE
2176  20 23                203  	BRA	SKPLAB		DON'T INSERT SECOND ONE
2178                       204  * INSERT SYMBOL INTO SYMBOL TABLE
2178  9E 0C                205  SYMOK	LDX	SYMLOC		GET SYMBOL TABLE POSITION
217A  10 8E 40 A5          206  	LDY	#LINE		POINT TO START OF SYMBOL
217E  17 08 96             207  SYMM	LBSR	TSTERM		GET CHARACTER
2181  27 04                208  	BEQ	FIXSYM		IF END, STOP
2183  A7 80                209  	STA	,X+		SAVE IN SYMBOL TABLE
2185  20 F7                210  	BRA	SYMM		KEEP GOING
2187  A6 1F                211  FIXSYM	LDA	-1,X		GET OLD VALUE FROM SYMBOL
2189  8A 80                212  	ORA	#$80		SET HIGH BIT
218B  A7 1F                213  	STA	-1,X		RESAVE
218D  9F 06                214  	STX	TEMP		POINT TO VALUE FOR EQUATE
218F  DC 08                215  	LDD	CURPC		GET CURRENT PROGRAM COUNTER
2191  ED 81                216  	STD	,X++		SAVE IN SYMBOL TABLE
2193  6F 84                217  	CLR	,X		INDICATE NEW END
2195  9F 0C                218  	STX	SYMLOC		SAVE NEW SYMBOL TABLE LOCATION
2197  86 FF                219  	LDA	#$FF		GET POSITIVE FLAG
2199  97 0E                220  	STA	LINUM		INDICATE WE CHANGED
219B  17 04 DE             221  SKPLAB	LBSR	LOCINS		LOOK UP INSTRUCTION
219E  5A                   222  SKPL1	DECB			CONVERT TO TYPE 0 ON
219F  58                   223  	ASLB			TIMES 2 FOR TWO BYTE ENTRIES
21A0  CE 21 AA             224  	LDU	#P1TAB		POINT TO TABLE
21A3  EC C5                225  	LDD	B,U		GET ADDRESS
21A5  34 06                226  	PSHS	A,B		SAVE ON STACK
21A7  DE 08                227  	LDU	CURPC		GET CURRENT PROGRAM COUNTER
21A9  39                   228  	RTS			EXECUTE CODE
21AA                       229  * TABLE OF INSTRUCTION HANDLERS FOR PASS 1
21AA  21 D4                230  P1TAB	FDB	P1T1
21AC  21 E1                231  	FDB	P1T2
21AE  21 EC                232  	FDB	P1T3
21B0  21 F1                233  	FDB	TYP4
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 5

21B2  21 F1                234  	FDB	TYP4
21B4  21 D8                235  	FDB	TWOBYT
21B6  21 F7                236  	FDB	P1T7
21B8  21 FB                237  	FDB	P1T8
21BA  21 D8                238  	FDB	TWOBYT
21BC  21 D8                239  	FDB	TWOBYT
21BE  21 FF                240  	FDB	P1T11
21C0  22 15                241  	FDB	P1T12
21C2  22 1D                242  	FDB	P1T13
21C4  22 24                243  	FDB	P1T14
21C6  22 3B                244  	FDB	P1T15
21C8  22 43                245  	FDB	P1T16
21CA  22 65                246  	FDB	P1T17
21CC  21 D8                247  	FDB	TWOBYT
21CE  22 6E                248  	FDB	P1T19
21D0  21 00                249  	FDB	PLINE
21D2  21 00                250  	FDB	PLINE
21D4                       251  * TYPE 1, INHERENT ADDRESSING
21D4  6D 01                252  P1T1	TST	1,X		IS IT A TWO BYTE OPCODE?
21D6  27 02                253  	BEQ	ONEBYT		ONLY ONE BYTE
21D8  33 41                254  TWOBYT	LEAU	1,U		ADVANCE PC ONE BYTE
21DA  33 41                255  ONEBYT	LEAU	1,U		ADVANCE CURRENT PROGRAM COUNTER
21DC  DF 08                256  SAVPC	STU	CURPC		SAVE CURRENT PROGRAM COUNTER
21DE  16 FF 1F             257  	LBRA	PLINE		PROCESS NEXT LINE
21E1                       258  * TYPE2, MEMORY REFERENCE, EIGHT BIT
21E1  17 05 13             259  P1T2	LBSR	MEMOP		EVALUATE MEMORY OPERAND
21E4  4D                   260  	TSTA			IS IT IMMEDIATE
21E5  26 01                261  	BNE	NPIMM		NO, DON'T ADJUST
21E7  5A                   262  	DECB			USE ONLY EIGHT BIT VALUE
21E8  33 C5                263  NPIMM	LEAU	B,U		ADVANCE PROGRAM COUNTER
21EA  20 EE                264  	BRA	ONEBYT		INLUDE OPCODE AND UPDATE PROGRAM COUNTER
21EC                       265  * TYPE3, SAME AS TYPE 2, BUT 16BIT IMMEDIATE DATA
21EC  17 05 08             266  P1T3	LBSR	MEMOP		CALCULATE LENGTH
21EF  20 F7                267  	BRA	NPIMM		CONTINUE
21F1  17 05 03             268  TYP4	LBSR	MEMOP		GET MEMORY OPERANDS
21F4  5C                   269  	INCB			ADVANCE OPERAND COUNT
21F5  20 F1                270  	BRA	NPIMM		GENERATE OPCODE
21F7                       271  * TYPE	7, LONG BRANCHES
21F7  33 43                272  P1T7	LEAU	3,U		SKIP FOR FOUR BYTES
21F9  20 DF                273  	BRA	ONEBYT		AND CALCULATE
21FB                       274  * LBRA AND LBSR
21FB  33 42                275  P1T8	LEAU	2,U		THREE BYTE INSTRUCTION
21FD  20 DB                276  	BRA	ONEBYT		CONTINUE
21FF                       277  * TYPE 11, EQUATE STATEMENT
21FF  DE 06                278  P1T11	LDU	TEMP		GET POINTER TO VALUE
2201  17 07 5A             279  	LBSR	EVAL		GET VALUE
2204  0D 0F                280  	TST	LINUM+1		IS THIS AN OPTOMIZE?
2206  27 09                281  	BEQ	SETSYM		NO, SET SYMBOL VALUE
2208  10 A3 C4             282  	CMPD	,U		IS IT THE SAME?
220B  27 04                283  	BEQ	SETSYM		IF SO, IT'S OK
220D  0A 0E                284  S1	DEC	LINUM		INSURE FLAG IS SET
220F  27 FC                285  	BEQ	S1		SPECIAL CASE
2211  ED C4                286  SETSYM	STD	,U		CHANGE VALUE OF LAST SYMBOL
2213  20 05                287  	BRA	PLI1		PROCESS NEXT LINE
2215                       288  * TYPE 12, ORG STATEMENT
2215  17 07 46             289  P1T12	LBSR	EVAL		EVALUATE NEW LOCATION
2218  DD 08                290  	STD	CURPC		SAVE NEW PC
221A  16 FE E3             291  PLI1	LBRA	PLINE		START FROM HERE
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 6

221D                       292  * 'RMB' INSTRUCTION
221D  17 07 3E             293  P1T13	LBSR	EVAL		EVALUATE OPERAND
2220  33 CB                294  	LEAU	D,U		ADVANCE THAT MANY BYTES
2222  20 B8                295  SAVP1	BRA	SAVPC		CONTINUE
2224                       296  * 'FCB' DIRECTIVE
2224  8D 04                297  P1T14	BSR	FCBLEN		CALCULATE LENGTH
2226  33 CB                298  	LEAU	D,U		ADD TO CODE LENGTH
2228  20 B2                299  	BRA	SAVPC		PROCESS
222A                       300  *
222A                       301  * CALCULATES LENGTH ON A 'FCB' TYPE OPERAND
222A                       302  *
222A  8E 00 00             303  FCBLEN	LDX	#0		START OUT WITH ZERO
222D  30 01                304  ADDFCB	LEAX	1,X		ADVANCE COUNTER
222F  17 07 2C             305  	LBSR	EVAL		EVALUATE ON OPERAND
2232  A6 3F                306  	LDA	-1,Y		GET TERMINATING CHAR
2234  81 2C                307  	CMPA	#','		IS THERE MORE?
2236  27 F5                308  	BEQ	ADDFCB		CONTINUE
2238  1F 10                309  	TFR	X,D		COPY FOR LATER
223A  39                   310  	RTS
223B                       311  * 'FDB' DIRECTIVE
223B  8D ED                312  P1T15	BSR	FCBLEN		LOOK UPLENGTH
223D  33 CB                313  	LEAU	D,U		ADD IN FOR ONE BYTE
223F  33 CB                314  	LEAU	D,U		ADD IN FOR TWO BYTES
2241  20 DF                315  	BRA	SAVP1		PROCESS
2243                       316  * 'FCC' DIRECTIVE
2243  8D 04                317  P1T16	BSR	FCCLEN		FIND OUT IT'S LENGTH
2245  33 CB                318  	LEAU	D,U		ADVANCE
2247  20 D9                319  	BRA	SAVP1		SAVE NEW ADDRESS
2249                       320  *
2249                       321  * CALCULATES THE LENGTH OF A STRING
2249                       322  *
2249  8E FF FF             323  FCCLEN	LDX	#$FFFF		START WITH -1 LENGTH
224C  17 07 C8             324  	LBSR	TSTERM		GET TERMINATOR
224F  81 0D                325  	CMPA	#$0D		TEST FOR NULL LINE
2251  27 0F                326  	BEQ	STRERR		IT'S INVALID
2253  97 06                327  	STA	TEMP		SAVE FOR LATER
2255  30 01                328  FCC1	LEAX	1,X		ADVANCE
2257  17 07 BD             329  	LBSR	TSTERM		CONTINUE
225A  81 0D                330  	CMPA	#$0D		END OF LINE
225C  27 04                331  	BEQ	STRERR		IF SO, IT'S TERRIBLE
225E  91 06                332  	CMPA	TEMP		IS IT THE SAME?
2260  26 F3                333  	BNE	FCC1		NO, IT'S NOT
2262  1F 10                334  STRERR	TFR	X,D		COPY TO ACCUMULATOR
2264  39                   335  	RTS
2265                       336  * 'FCCZ' DIRECTIVE
2265  8D E2                337  P1T17	BSR	FCCLEN		GET LENGTH
2267  C3 00 01             338  	ADDD	#1		OFFSET ONE FOR ZERO BYTE
226A  33 CB                339  	LEAU	D,U		ADD TO ADDRESS
226C  20 B4                340  	BRA	SAVP1		SAVE NEW PROGRAM COUNTER
226E                       341  * 'SETDP' DIRECTIVE
226E  17 06 ED             342  P1T19	LBSR	EVAL		GET OPERAND VALUE
2271  DD 0A                343  	STD	CURDP		SET CURRENT DIRECT PAGE VALUE
2273  20 A5                344  	BRA	PLI1
2275                       345  *
2275                       346  * OPTIMIZATION PASSES, RERUN FIRST PASS UNTIL ALL FORWARD REFERENCES
2275                       347  * ARE RESOLVED
2275                       348  *
2275  4F                   349  OPTMIZ	CLRA			GET ORIGIN ADDRESS
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 7

2276  5F                   350  	CLRB			OF ZERO
2277  DD 08                351  	STD	CURPC		SET PROGRAM COUNTER BACK
2279  CE 41 59             352  	LDU	#INFIL
227C  3F                   353  	SWI			SOFTWARE INTERRUPT TO DOS
227D  3E                   354  	FCB	62		SYSTEM REQUEST NUMBER
227E  DC 02                355  	LDD	ERRORS		ANY DUPLICATE SYMBOLS?
2280  26 21                356  	BNE	PASS2		IF SO, DON'T TRY TO OPTOMIZE
2282  B6 31 85             357  	LDA	DEBUG		ARE WE DEBUGGING?
2285  27 1C                358  	BEQ	PASS2		IF SO, DON'T PERFORM OPTOMIZE
2287  96 0E                359  	LDA	LINUM		CHANGE ANYTHING?
2289  27 18                360  	BEQ	PASS2		NO, AOK
228B  7D 31 88             361  	TST	QUIET		ARE WE BEING QUIET?
228E  27 0A                362  	BEQ	OPTA		IF SO, KEEP MUM
2290  3F                   363  	SWI			SOFTWARE INTERRUPT TO DOS
2291  18                   364  	FCB	24		SYSTEM REQUEST NUMBER
2292  4F 70 74 2E 2E 2E +  365  	FCCZ	'Opt... '
229A  86 FF                366  OPTA	LDA	#$FF		GET FLAG
229C  97 0F                367  	STA	LINUM+1		INDICATE OPTIMIZE
229E  0F 0E                368  	CLR	LINUM		RESET CHANGE FLAG
22A0  16 FE 59             369  	LBRA	PASS1		IF NOT, WE ARE OK
22A3                       370  *
22A3                       371  * PASS TWO, GENERATE CODE
22A3                       372  *
22A3  7D 31 88             373  PASS2	TST	QUIET		ARE WE BEING QUIET?
22A6  27 12                374  	BEQ	NOM1		IF SO, SHUT UP
22A8  3F                   375  	SWI			SOFTWARE INTERRUPT TO DOS
22A9  18                   376  	FCB	24		SYSTEM REQUEST NUMBER
22AA  53 65 63 6F 6E 64 +  377  	FCCZ	'Second pass... '
22BA  4F                   378  NOM1	CLRA			GET HIGH ZERO
22BB  5F                   379  	CLRB			GET LOW ZERO
22BC  DD 0E                380  	STD	LINUM		SET UP LINE NUMBER
22BE  DD 10                381  	STD	PAGE		SET CURRENT PAGE NUMBER
22C0  0F 12                382  	CLR	PAGLIN		INSURE WE WILL GENERATE TITLE
22C2  0F 15                383  	CLR	EMSG		INDICATE NO ERROR
22C4  43                   384  	COMA			GET $FF
22C5  97 0A                385  	STA	CURDP		INSURE NO DIRECT PAGE ADDRESSING
22C7                       386  * OPEN OBJECT FILE FOR WRITE
22C7  9E 00                387  	LDX	FILPTR		GET FILENAME POINTER BACK
22C9  CC 4F 42             388  	LDD	#'OB'		GET 'OB'
22CC  ED 84                389  	STD	,X		SAVE IT
22CE  86 4A                390  	LDA	#'J'		GET 'J'
22D0  A7 02                391  	STA	2,X		SAVE IN NAME
22D2  CE 45 6D             392  	LDU	#OBJFIL		POINT TO OBJECT FCB
22D5  3F                   393  	SWI			SOFTWARE INTERRUPT TO DOS
22D6  38                   394  	FCB	56		SYSTEM REQUEST NUMBER
22D7  10 26 03 9F          395  	LBNE	ABORT		ABORT OPERATION
22DB                       396  * PROCESS FOR EACH LINE
22DB  10 8E 40 A5          397  P2LIN	LDY	#LINE		POINT TO LINE BUFFER
22DF  5F                   398  	CLRB			START ON LOCATION ZERO
22E0  17 07 F6             399  P21	LBSR	RDINP		GET A CHARACTER
22E3  10 26 02 DE          400  	LBNE	QUIT		GIVE UP ON ERROR
22E7  81 09                401  	CMPA	#9		CHECK FOR TAB
22E9  26 0B                402  	BNE	NOTTAB		NO, SAVE NORMAL CHARACTER
22EB  86 20                403  	LDA	#' '		GET SPACE
22ED  A7 A0                404  STAB1	STA	,Y+		SAVE IN LINE
22EF  5C                   405  	INCB			ADVANCE SAVED CHARACTER
22F0  C5 07                406  	BITB	#7		ARE AT A TABSTOP
22F2  26 F9                407  	BNE	STAB1		NO, SKIP IT
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 8

22F4  20 EA                408  	BRA	P21		GET NEXT CHARACTER
22F6  A7 A0                409  NOTTAB	STA	,Y+		SAVE IN BUFFER
22F8  5C                   410  	INCB			ADVANCE TO NEXT
22F9  81 0D                411  	CMPA	#$0D		IS IT END OF LINE?
22FB  26 E3                412  	BNE	P21		IF NOT, KEEP GOING
22FD  10 8E 40 A5          413  	LDY	#LINE		RESTORE POSITION IN LINE
2301  A6 A4                414  	LDA	,Y		GET CHARACTER FROM START OF LINE
2303  81 2A                415  	CMPA	#'*'		IS IT A COMMENT
2305  26 07                416  	BNE	FNDSPC		NO, KEEP PROCESSING
2307  17 07 EB             417  	LBSR	DSPTTL		DISPLAY TITLE IF NESSARY
230A  9E 08                418  	LDX	CURPC		SET CURRENT PROGRAM COUNTER ADDRESS
230C  20 70                419  	BRA	GENLI1		GENERATE BLANK LINE IN LISTING
230E  A6 A0                420  FNDSPC	LDA	,Y+		EXAMINE CHARACTER FROM LINE
2310  81 0D                421  	CMPA	#$0D		END OF LINE (NO INST)?
2312  27 04                422  	BEQ	GOINS		IF SO, EXIT LOOP
2314  81 20                423  	CMPA	#' '		IS IT A SPACE (PAST LABEL)?
2316  26 F6                424  	BNE	FNDSPC		IF NOT, LOOK FOR ONE
2318  31 3F                425  GOINS	LEAY	-1,Y		BACKUP TO TERMINATOR
231A  17 03 5F             426  	LBSR	LOCINS		LOOK UP INSTRUCTION
231D  CE 23 2A             427  	LDU	#P2TAB		POINT TO TABLE
2320  5A                   428  	DECB			CONVERT TO ZERO OFFSET
2321  58                   429  	ASLB			TWO BYTES/ENTRY
2322  EC C5                430  	LDD	B,U		GET ADDRESS
2324  34 06                431  	PSHS	A,B		SAVE ON STACK
2326  CE 40 55             432  	LDU	#CODE		PLACE TO PUT THE CODE
2329  39                   433  	RTS			EXECUTE CODE
232A                       434  * TABLE OF INSTRUCTION HANDLERS FOR PASS 2
232A  23 54                435  P2TAB	FDB	P2T1
232C  24 05                436  	FDB	P2T2
232E  24 30                437  	FDB	P2T3
2330  24 35                438  	FDB	P2T4
2332  24 3B                439  	FDB	P2T5
2334  24 41                440  	FDB	P2T6
2336  24 62                441  	FDB	P2T7
2338  24 72                442  	FDB	P2T8
233A  24 82                443  	FDB	P2T9
233C  24 CA                444  	FDB	P2T10
233E  25 16                445  	FDB	P2T11
2340  25 2D                446  	FDB	P2T12
2342  25 4E                447  	FDB	P2T13
2344  25 5D                448  	FDB	P2T14
2346  25 6B                449  	FDB	P2T15
2348  25 78                450  	FDB	P2T16
234A  25 9A                451  	FDB	P2T17
234C  25 A0                452  	FDB	P2T18
234E  25 AB                453  	FDB	P2T19
2350  25 B2                454  	FDB	P2T20		PAGE DIRECTIVE
2352  25 B7                455  	FDB	P2T21		TITLE DIRECTIVE
2354                       456  * TYPE1, INHERENT ADDRESSING
2354  A6 80                457  P2T1	LDA	,X+		GET OPCODE FROM TABLE
2356  27 04                458  	BEQ	GENLIS		IF END, THEN GENERATE LISTING
2358  A7 C0                459  	STA	,U+		SAVE IN MEMORY
235A  20 F8                460  	BRA	P2T1		TEST FOR ANOTHER OPCODE BYTE
235C                       461  *
235C                       462  * GENERATE LISTING
235C                       463  *
235C  17 07 96             464  GENLIS	LBSR	DSPTTL		DISPLAY TITLE IF NESSARY
235F  9E 08                465  	LDX	CURPC		GET OUR ADDRESS
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 9

2361  1F 30                466  	TFR	U,D		COPY TO D REGISTER
2363  83 40 55             467  	SUBD	#CODE		CONVERT TO BINARY OFFSET
2366  33 8B                468  	LEAU	D,X		GET NEW ADDRESS
2368  DF 08                469  	STU	CURPC		SAVE IN MEMORY
236A  CE 40 55             470  	LDU	#CODE		POINT TO CODE SPACE
236D  A6 C4                471  	LDA	,U		GET OPCODE
236F  81 CF                472  	CMPA	#$CF		CHECK FOR INVALID ADDRESSING MODE
2371  26 0B                473  	BNE	GENLI1		ADDRESSING IS OK
2373  96 18                474  	LDA	ITYPE		GET INSTRUCTION TYPE BACK
2375  81 0B                475  	CMPA	#$B		IS IT A DIRECTIVE
2377  22 05                476  	BHI	GENLI1		DON'T GENERATE ERROR FOR DIRECTIVES
2379  86 03                477  	LDA	#3		'INVALID ADDRESSING MODE'
237B  17 06 B0             478  	LBSR	SETERR		SET ERROR MESSAGE
237E  1F 10                479  GENLI1	TFR	X,D		COPY TO D REGISTER
2380  17 06 F8             480  	LBSR	WRIBYT		OUTPUT BYTE IN HEX
2383  1F 98                481  	TFR	B,A		GET LOW BYTE
2385  17 06 F3             482  	LBSR	WRIBYT		OUTPUT
2388  17 06 DF             483  LISOUT	LBSR	SPACE		DISPLAY A SPACE
238B  17 06 DC             484  	LBSR	SPACE		AND ANOTHER
238E  C6 05                485  	LDB	#5		# LISTING BYTES TO ALLOW
2390  9C 08                486  LISO1	CMPX	CURPC		ARE WE AT LIMIT?
2392  27 12                487  	BEQ	LISO2		IF SO, DON'T DISPLAY MORE CODE
2394  30 01                488  	LEAX	1,X		ADVANCE TO NEXT
2396  A6 C0                489  	LDA	,U+		GET BYTE OF CODE
2398  17 07 47             490  	LBSR	WRIOBB		WRITE OUTPUT BYTE
239B  5A                   491  	DECB			BACKUP COUNT
239C  2B F2                492  	BMI	LISO1		DON'T OUTPUT
239E  17 06 DA             493  	LBSR	WRIBYT		OUTPUT IN HEX
23A1  17 06 C6             494  	LBSR	SPACE		PRINT A SPACE
23A4  20 EA                495  	BRA	LISO1		AND CONTINUE
23A6                       496  * IF NON-DISPLAYED CODE IS PRESENT, OUTPUT INDICATOR
23A6  86 2B                497  LISO2	LDA	#'+'		OVERFLOW INDICATOR
23A8  5D                   498  	TSTB			DID WE OVERFLOW?
23A9  2B 10                499  	BMI	LISO5		YES, OUTPUT INDICATOR
23AB                       500  * FILL LISTING WITH SPACES
23AB  5A                   501  LISO3	DECB			REDUCE COUNT
23AC  2B 0B                502  	BMI	LISO4		NO MORE SPACE
23AE  17 06 B9             503  	LBSR	SPACE		PRINT A SPACE
23B1  17 06 B6             504  	LBSR	SPACE		PRINT A SPACE
23B4  17 06 B3             505  	LBSR	SPACE		PRINT A SPACE
23B7  20 F2                506  	BRA	LISO3		BACKUP
23B9  86 20                507  LISO4	LDA	#' '		GET SPACE
23BB  17 06 D1             508  LISO5	LBSR	WRICHR		OUTPUT CHARACTER
23BE                       509  * OUTPUT LINE NUMBER
23BE  DC 0E                510  	LDD	LINUM		GET LINE NUMBER
23C0  C3 00 01             511  	ADDD	#1		INCREMENT
23C3  DD 0E                512  	STD	LINUM		REPLACE
23C5  10 83 27 10          513  	CMPD	#10000		ARE WE < 10000
23C9  24 03                514  	BHS	NS1		NO, WE ARE OK
23CB  17 06 9C             515  	LBSR	SPACE		PAD WITH SPACE
23CE  10 83 03 E8          516  NS1	CMPD	#1000		< 1000
23D2  24 03                517  	BHS	NS2		NO, WE ARE OK
23D4  17 06 93             518  	LBSR	SPACE		PAD WITH SPACE
23D7  10 83 00 64          519  NS2	CMPD	#100		< 100?
23DB  24 03                520  	BHS	NS3		NO, WE ARE OK
23DD  17 06 8A             521  	LBSR	SPACE		PAD WITH SPACE
23E0  10 83 00 0A          522  NS3	CMPD	#10		< 10
23E4  24 03                523  	BHS	NS4		NO, WE ARE OK
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 10

23E6  17 06 81             524  	LBSR	SPACE		PAD WITH SPACE
23E9  17 06 CA             525  NS4	LBSR	WRIDEC		OUTPUT DECIMAL NUMBER
23EC  17 06 7B             526  	LBSR	SPACE		DISPLAY A SPACE
23EF  17 06 78             527  	LBSR	SPACE		AND ANOTHER
23F2                       528  * OUTPUT ASSEMBLY SOURCE LINE
23F2  10 8E 40 A5          529  	LDY	#LINE		POINT TO LINE
23F6  A6 A0                530  DSPLIN	LDA	,Y+		GET CHARACTER FROM LINE
23F8  17 06 94             531  	LBSR	WRICHR		DISPLAY
23FB  81 0D                532  	CMPA	#$0D		CARRIAGE RETURN?
23FD  26 F7                533  	BNE	DSPLIN		KEEP DISPLAYING
23FF  17 06 33             534  	LBSR	DSPERR		DISPLAY ANY ERROR MESSAGE
2402  16 FE D6             535  	LBRA	P2LIN		PAGE EJECT IF NESSARY
2405                       536  * TYPE2, MEMORY REFERENCE, EIGHT BIT
2405  17 02 EF             537  P2T2	LBSR	MEMOP		EVALUATE MEMORY OPERAND
2408  4D                   538  	TSTA			IS IT IMMEDIATE
2409  26 01                539  	BNE	PNIMM		NO, DON'T ADJUST
240B  5A                   540  	DECB			USE ONLY EIGHT BIT VALUE
240C  34 02                541  PNIMM	PSHS	A		SAVE INSTRUCTON TYPE
240E  A6 86                542  	LDA	A,X		GET OPCODE
2410  A7 C0                543  	STA	,U+		SAVE OPCODE
2412  35 02                544  	PULS	A		GET TYPE BACK
2414  81 02                545  	CMPA	#2		IS IT MEMORY REFERENCE?
2416  26 05                546  	BNE	NOPOST		NO POSTBYTE
2418  96 16                547  	LDA	POST		GET POSTBYTE
241A  A7 C0                548  	STA	,U+		SAVE POSTBYTE
241C  5A                   549  	DECB			REDUCE LENGTH BY ONE FOR POSTBYTE
241D  5A                   550  NOPOST	DECB			TEST FOR ZERO OPERANDS
241E  2B 0D                551  	BMI	T2E		IF NONE, STOP
2420  96 14                552  	LDA	VALUE+1		GET LOWER BYTE OF VALUE
2422  A7 C0                553  	STA	,U+		SAVE EIGHT BIT OPERAND VALUE
2424  5A                   554  	DECB			TEST FOR ONE OPERAND BYTE
2425  2B 06                555  	BMI	T2E		IF SO, QUIT
2427  DC 13                556  	LDD	VALUE		GET ENTIRE 16 BIT VALUE
2429  ED 5F                557  	STD	-1,U		SAVE IN CODE AREA
242B  33 41                558  	LEAU	1,U		SKIP LAST BYTE
242D  16 FF 2C             559  T2E	LBRA	GENLIS		PRODUCE LISTING
2430                       560  * TYPE 3, 16 BIT DATA
2430  17 02 C4             561  P2T3	LBSR	MEMOP		EVALUATE OPERANDS
2433  20 D7                562  	BRA	PNIMM		CACULATE AND PRODUCE CODE
2435                       563  * TYPE4, SAME AS TYPE 3 BUT HAS $10 PREFIX
2435  86 10                564  P2T4	LDA	#$10		GET PREFIX
2437  A7 C0                565  	STA	,U+		SAVE IN MEMORY
2439  20 F5                566  	BRA	P2T3		CONTINUE
243B                       567  * TYPE5, SAME AS TYPE 3 BUT HAS $11 PREFIX
243B  86 11                568  P2T5	LDA	#$11		GET PREFIX
243D  A7 C0                569  	STA	,U+		SAVE IN MEMORY
243F  20 EF                570  	BRA	P2T3		CONTINUE
2441                       571  * TYPE6, SHORT BRANCHES
2441  A6 84                572  P2T6	LDA	,X		GET OPCODE
2443  A7 C0                573  	STA	,U+		SAVE IN MEMORY
2445  17 05 16             574  	LBSR	EVAL		GET OPERAND VALUE
2448  93 08                575  	SUBD	CURPC		CONVERT TO PC RELATIVE OFFSET
244A  83 00 02             576  	SUBD	#2		ADJUST FOR OFFSET OF CURRENT INSTRUCT
244D  10 83 00 80          577  	CMPD	#128		POSITIVE RANGE
2451  25 0B                578  	BLO	RANOK		IT'S OK
2453  10 83 FF 80          579  	CMPD	#-128		NEGATIVE RANGE
2457  24 05                580  	BHS	RANOK		ALSO IS WITHIN RANGE
2459  86 02                581  	LDA	#2		'ADDRESS OUT OF RANGE'
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 11

245B  17 05 D0             582  	LBSR	SETERR		INDICATE ERROR
245E  E7 C0                583  RANOK	STB	,U+		SAVE LOWER EIGHT BITS
2460  20 CB                584  	BRA	T2E		GENERATE LISTING
2462                       585  * LONG CONDITIONAL BRANCHES
2462  EC 84                586  P2T7	LDD	,X		GET PREFIX AND OPCODE
2464  ED C1                587  	STD	,U++		SAVE IN CODE
2466  17 04 F5             588  	LBSR	EVAL		EVALUATE OPERANDS
2469  93 08                589  	SUBD	CURPC		CONVERT TO OFFSET
246B  83 00 04             590  	SUBD	#4		CONVERT TO NORMAL
246E  ED C1                591  	STD	,U++		SAVE IN CODE
2470  20 BB                592  	BRA	T2E		GENERATE LISTING
2472                       593  * LONE BRANCH AND LBSR
2472  A6 84                594  P2T8	LDA	,X		GET OPCODE
2474  A7 C0                595  	STA	,U+		SAVE IN MEMORY
2476  17 04 E5             596  	LBSR	EVAL		EVALUATE OPERANDS
2479  93 08                597  	SUBD	CURPC		CALCULATE OFFSET
247B  83 00 03             598  	SUBD	#3		CONVERT TO NORMAL
247E  ED C1                599  	STD	,U++		SAVE IN CODE
2480  20 AB                600  	BRA	T2E		GENERATE LISTING
2482                       601  * TYPE 9, PSH AND PUL
2482  A6 84                602  P2T9	LDA	,X		GET OPCODE
2484  A7 C0                603  	STA	,U+		SAVE IN CODE
2486  6F C0                604  	CLR	,U+		CLEAR POSTBYTE
2488  8E 24 C2             605  FNDREG	LDX	#POTAB		POINT TO TABLE
248B  5F                   606  	CLRB			START WITH NO BITS
248C  A6 A0                607  	LDA	,Y+		GET CHARACTER FROM OPERAND
248E  81 53                608  	CMPA	#'S'		IS IT S?
2490  26 02                609  	BNE	NOTS		NO, IT'S OK
2492  86 55                610  	LDA	#'U'		CHANGE TO U
2494  1A 01                611  NOTS	ORCC	#1		SET CARRY
2496  59                   612  F1	ROLB			SHIFT IN BIT
2497  25 6D                613  	BCS	POPERR		ERROR CONDITION
2499  A1 80                614  	CMPA	,X+		IS THIS IT
249B  1C FE                615  	ANDCC	#$FE		INSURE CARRY CLEAR
249D  26 F7                616  	BNE	F1		IT'S BAD
249F  81 44                617  	CMPA	#'D'		WAS THIS 'DP'?
24A1  26 08                618  	BNE	NOADJ		NO, DON'T ADJUST
24A3  A6 A4                619  	LDA	,Y		GET OPERAND BYTE
24A5  81 50                620  	CMPA	#'P'		IS IT 'DP'
24A7  27 02                621  	BEQ	NOADJ		DON'T ADJUST
24A9  C6 06                622  	LDB	#6		CONVERT TO A+B
24AB  EA 5F                623  NOADJ	ORB	-1,U		INCLUDE OLD VALUE
24AD  E7 5F                624  	STB	-1,U		REPLACE
24AF  17 05 65             625  FNCOM	LBSR	TSTERM		LOOK FOR TERMINATOR
24B2  26 FB                626  	BNE	FNCOM		TILL WE FIND
24B4  81 2C                627  	CMPA	#','		IS IT A COMMA
24B6  27 D0                628  	BEQ	FNDREG		IF SO, IT'S OK
24B8  16 FE A1             629  T3E	LBRA	GENLIS		CONTINUE
24BB  86 07                630  TFRERR	LDA	#7		'INVALID ARGUMENT FORMAT'
24BD  17 05 6E             631  TFRE1	LBSR	SETERR		SAVE IT
24C0  20 F6                632  	BRA	T3E		AND GO GOME
24C2  43 41 42 44 58 59 +  633  POTAB	FCC	'CABDXYUP'	PUSH OPERAND TABLE
24CA                       634  * TYPE 10, TRANSFER AND EXCHANGE
24CA  A6 84                635  P2T10	LDA	,X		GET OPCODE
24CC  A7 C1                636  	STA	,U++		SAVE IN OUTPUT
24CE  8D 15                637  	BSR	FNTREG		GET REGSITER
24D0  58                   638  	ASLB			ROTATE
24D1  58                   639  	ASLB			ROTATE
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 12

24D2  58                   640  	ASLB			ROTATE
24D3  58                   641  	ASLB			ROTATE
24D4  E7 5F                642  	STB	-1,U		SAVEPOSTBYTE
24D6  17 05 3E             643  	LBSR	TSTERM		GET TERMINATOR
24D9  81 2C                644  	CMPA	#','		COMMA?
24DB  26 DE                645  	BNE	TFRERR		IF NOT, IT'S INVALID
24DD  8D 06                646  	BSR	FNTREG		GET NEXT REGISTER
24DF  EA 5F                647  	ORB	-1,U		ADD IN OLD VALUE
24E1  E7 5F                648  	STB	-1,U		RESAVE
24E3  20 D3                649  	BRA	T3E		GENERATE LISTING
24E5                       650  * CALCULATE TRANSFER & EXCHANGE REGISTER
24E5  A6 A0                651  FNTREG	LDA	,Y+		GET REGISTER NAME
24E7  8E 25 0A             652  	LDX	#TFRTAB		POINT TO TABLE
24EA  C6 FF                653  	LDB	#$FF		START WITH MINUS ONE
24EC  5C                   654  F2	INCB			ADVANCE TO NEXT
24ED  C1 0C                655  	CMPB	#12		ARE WO OVER?
24EF  24 13                656  	BHS	TOPERR		INDICATE INVALID
24F1  A1 80                657  	CMPA	,X+		IS THIS IT?
24F3  26 F7                658  	BNE	F2		NO, TRY AGAIN
24F5  81 44                659  	CMPA	#'D'		IS IT A+B?
24F7  26 0A                660  	BNE	NOATJ		DON'T ADJUST
24F9  A6 A4                661  	LDA	,Y		LOOK FOR NEXT CHARACTER
24FB  81 50                662  	CMPA	#'P'		IS IT 'DP'
24FD  26 04                663  	BNE	NOATJ		DON'T ADJUST
24FF  31 21                664  	LEAY	1,Y		ADVANCE POINTER
2501  C6 0B                665  	LDB	#$B		CONVERT TO DPR SPEC
2503  39                   666  NOATJ	RTS
2504  32 62                667  TOPERR	LEAS	2,S		SKIP CRAP
2506  86 04                668  POPERR	LDA	#4		'INVALID REGISTER'
2508  20 B3                669  	BRA	TFRE1		GENERATE ERROR MESSAGE
250A  44 58 59 55 53 50 +  670  TFRTAB	FCC	'DXYUSP..ABCD'
2516                       671  * EQUATE, EVALUATE OPERANDS FOR ERROR MESSAGES
2516  17 04 45             672  P2T11	LBSR	EVAL		EVALUATE OPERANDS FOR FUN
2519  34 06                673  WRAD1	PSHS	A,B		SAVE REGISTERS
251B  17 05 D7             674  	LBSR	DSPTTL		DISPLAY TITLE IF NESSARY
251E  35 06                675  	PULS	A,B		RESTRE REGISTERS
2520  17 05 58             676  	LBSR	WRIBYT		DISPLAY HIGH BYTE
2523  1F 98                677  	TFR	B,A		COPY LOWER BYTE
2525  17 05 53             678  	LBSR	WRIBYT		DISPLAY LOW BYTE
2528  9E 08                679  	LDX	CURPC		INSURE WE HAVE VALID ADDRESS
252A  16 FE 5B             680  	LBRA	LISOUT		GENERATE LISTING
252D                       681  * ORG STATEMENT
252D  17 04 2E             682  P2T12	LBSR	EVAL		EVLAUATE OPERANDS
2530  DD 08                683  	STD	CURPC		SET CURRENT PROGRAM COUNTER
2532  8D 04                684  	BSR	WRCADR		INDICATE WE CHANGED ADDRESS
2534  DC 08                685  	LDD	CURPC		GET ADDRESS BACK
2536  20 E1                686  	BRA	WRAD1		GO BACK
2538                       687  * WRITE AN ADDRESS CHANGE RECORD
2538  34 06                688  WRCADR	PSHS	A,B		SAVE HIGH BYTE
253A  86 CF                689  	LDA	#$CF		GET FLAG BYTE
253C  17 05 A9             690  	LBSR	WRIOBJ		OUTPUT TO OBJECT FILE
253F  86 01                691  	LDA	#$01		ADDRESS CHANGE
2541  17 05 A4             692  	LBSR	WRIOBJ		OUTPUT
2544  35 02                693  	PULS	A		GET HIGH BYTE BACK
2546  17 05 9F             694  	LBSR	WRIOBJ		OUTPUT TO FILE
2549  35 02                695  	PULS	A		GET LOW ADDRESS
254B  16 05 9A             696  	LBRA	WRIOBJ		OUTPUT
254E                       697  * 'RMB' DIRECTIVE
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 13

254E  17 04 0D             698  P2T13	LBSR	EVAL		GET OFFSET TO ADD
2551  D3 08                699  	ADDD	CURPC		CALCULATE NEW PC
2553  9E 08                700  	LDX	CURPC		GET OLD PC VALUE
2555  DD 08                701  	STD	CURPC		SET UP NEW VALUE
2557  8D DF                702  	BSR	WRCADR		INDICATE WE CHANGED ADDRESS
2559  1F 10                703  	TFR	X,D		COPY OLD VALUE OVER
255B  20 BC                704  	BRA	WRAD1		OUTPUT ADDRESS
255D                       705  * 'FCB' DIRECTIVE
255D  17 03 FE             706  P2T14	LBSR	EVAL		EVALUATE OPERAND
2560  E7 C0                707  	STB	,U+		SAVE DATA IN CODE
2562  A6 3F                708  	LDA	-1,Y		GET TERMINATING CHARACTER
2564  81 2C                709  	CMPA	#','		IS IT A COMMA
2566  27 F5                710  	BEQ	P2T14		IF SO, GENERATE MORE
2568  16 FD F1             711  T4E	LBRA	GENLIS
256B                       712  * 'FDB' DIRECTIVE
256B  17 03 F0             713  P2T15	LBSR	EVAL		EVALUATE OPERAND
256E  ED C1                714  	STD	,U++		SAVE CODE
2570  A6 3F                715  	LDA	-1,Y		GET TERMINATING CHARACTER
2572  81 2C                716  	CMPA	#','		WAS THERE MORE
2574  27 F5                717  	BEQ	P2T15		IF SO, GIVE IT TO HIM
2576  20 F0                718  	BRA	T4E
2578                       719  * 'FCC' DIRECTIVE
2578  8D 02                720  P2T16	BSR	FCCCHR		PUT IN STRING
257A  20 EC                721  	BRA	T4E		AND PRODUCE LISTING
257C                       722  * GENERATES FCC STRING
257C  17 04 98             723  FCCCHR	LBSR	TSTERM		GET TERMINATOR
257F  81 0D                724  	CMPA	#$0D		CHECK FOR END OF LINE
2581  27 11                725  	BEQ	INVSTR		STRING IS INVALID
2583  97 06                726  	STA	TEMP		SAVE FOR LATER REFERENCE
2585  17 04 8F             727  FCCM	LBSR	TSTERM		GET A CHARACTER
2588  81 0D                728  	CMPA	#$0D		END OF LINE
258A  27 08                729  	BEQ	INVSTR		STRING IS INVALID
258C  91 06                730  	CMPA	TEMP		IS THIS IT?
258E  27 09                731  	BEQ	FCCEND		IF SO, WE ARE DONE
2590  A7 C0                732  	STA	,U+		SAVE IN MEMORY
2592  20 F1                733  	BRA	FCCM		KEEP MOVING THE STRING
2594  86 08                734  INVSTR	LDA	#8		'STRING NOT PROPERLY DELIMITED'
2596  16 04 95             735  	LBRA	SETERR		SET UP ERROR MESAGE
2599  39                   736  FCCEND	RTS			GO BACK
259A                       737  * 'FCCZ' DIRECTIVE
259A  8D E0                738  P2T17	BSR	FCCCHR		CALCULATE STRING
259C  6F C0                739  	CLR	,U+		AND APPEND A ZERO
259E  20 C8                740  	BRA	T4E		AND GENERATE LISTING
25A0                       741  * SSR DIRECTIVE
25A0  A6 84                742  P2T18	LDA	,X		GET OPCODE
25A2  A7 C0                743  	STA	,U+		SAVE IN CODE SPACE
25A4  17 03 B7             744  	LBSR	EVAL		GET OPERAND
25A7  E7 C0                745  	STB	,U+		SAVE IN OUTPUT CODE
25A9  20 BD                746  	BRA	T4E		PRODUCE LISTING
25AB                       747  * 'SETDP' DIRECTIVE
25AB  17 03 B0             748  P2T19	LBSR	EVAL		GET OPERAND VALUE
25AE  DD 0A                749  	STD	CURDP		SAVE CURRENT DIRECT PAGE
25B0  20 B6                750  	BRA	T4E
25B2                       751  * 'PAGE' DIRECTIVE
25B2  0F 12                752  P2T20	CLR	PAGLIN		FORCE PAGE EJECT
25B4  16 FD 24             753  	LBRA	P2LIN		AND RETURN FOR NEXT LINE
25B7                       754  * 'TITLE' DIRECTIVE
25B7  8E 40 19             755  P2T21	LDX	#TITLE		POINT TO TITLE SPACE
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 14

25BA  A6 A0                756  TITL1	LDA	,Y+		GET CHARACTER FROM SOURCE
25BC  A7 80                757  	STA	,X+		SAVE IN MEMORY
25BE  81 0D                758  	CMPA	#$0D		END OF LINE?
25C0  26 F8                759  	BNE	TITL1		NO, KEEP GOING
25C2  16 FD 16             760  	LBRA	P2LIN		PROCESS NEXT LINE
25C5                       761  *
25C5                       762  * TERMINATION OF ASSEMBLER
25C5                       763  *
25C5  7D 31 88             764  QUIT	TST	QUIET
25C8  27 10                765  	BEQ	NOM2		DON'T SAY A WORD
25CA  DC 02                766  	LDD	ERRORS
25CC  3F                   767  	SWI			SOFTWARE INTERRUPT TO DOS
25CD  1A                   768  	FCB	26		SYSTEM REQUEST NUMBER
25CE  3F                   769  	SWI			SOFTWARE INTERRUPT TO DOS
25CF  19                   770  	FCB	25		SYSTEM REQUEST NUMBER
25D0  20 65 72 72 6F 72 +  771  	FCCZ	' error(s)'
25DA  86 0D                772  NOM2	LDA	#$0D		NEW LINE
25DC  17 04 B0             773  	LBSR	WRICHR		OUTPUT
25DF  7D 31 84             774  	TST	TERM		TERMINAL OUTPUT?
25E2  27 13                775  	BEQ	NOSUM		IF SO, DON'T GENERATE SUMMARY
25E4  8E 2B 59             776  	LDX	#ERRSUM		POINT TO MESSAGE
25E7  17 04 88             777  	LBSR	WRIMSG		OUTPUT
25EA  DC 02                778  	LDD	ERRORS		GET ERROR COUNT
25EC  17 04 C7             779  	LBSR	WRIDEC		OUTPUT
25EF  86 0D                780  	LDA	#$0D		CARRIAGE RETURN
25F1  17 04 9B             781  	LBSR	WRICHR		OUTPUT
25F4  17 04 98             782  	LBSR	WRICHR		OUTPUT
25F7                       783  * DISPLAY SYMBOL TABLE
25F7  7D 31 87             784  NOSUM	TST	SYM		DO WE DISPLAY SYMBOL TABLE?
25FA  26 60                785  	BNE	CLLST		NO, DON'T BOTHER
25FC  0F 12                786  	CLR	PAGLIN		INSURE WE GET NEW PAGE
25FE  17 04 F4             787  	LBSR	DSPTTL		DISPLAY PAGE HEADER
2601  0A 15                788  	DEC	EMSG		INSURE WE OUTPUT
2603  8E 2B 68             789  	LDX	#SYMMSG		POINT TO MESSAGE
2606  17 04 69             790  	LBSR	WRIMSG		OUTPUT
2609  8E 47 77             791  	LDX	#SYMTAB		POINT TO SYMBOL TABLE
260C  86 0D                792  NEWL	LDA	#$0D		GET CARRIAGE RETURN
260E  17 04 7E             793  	LBSR	WRICHR		OUTPUT
2611  86 08                794  	LDA	#8		DISPLAY 6/LINE
2613  7D 31 84             795  	TST	TERM		IS THIS TO TERMINAL?
2616  26 02                796  	BNE	DSPX1		NO, IT'S OK
2618  86 05                797  	LDA	#5		CHANGE TO 5/LINE
261A  97 06                798  DSPX1	STA	TEMP		SAVE COUNTER
261C  6D 84                799  DSPSY	TST	,X		END OF TABLE?
261E  27 37                800  	BEQ	ENDSY		IF SO, QUIT NOW
2620  C6 08                801  	LDB	#8		MAX OF 8 CHARS
2622  A6 84                802  OSYM	LDA	,X		GET CHARACTER
2624  84 7F                803  	ANDA	#$7F		REMOVE EXTRA BIT
2626  17 04 66             804  	LBSR	WRICHR		OUTPUT
2629  5A                   805  	DECB			REDUCE COUNT
262A  27 0C                806  	BEQ	SKRST		IF END, SKIP THE REST
262C  A6 80                807  	LDA	,X+		GET NEXT CHARACTER
262E  2A F2                808  	BPL	OSYM		KEEP GOING
2630  17 04 37             809  FILSP	LBSR	SPACE		DISPLAY A SPACE
2633  5A                   810  	DECB			REDUCE COUNT
2634  2A FA                811  	BPL	FILSP		CONTINUE
2636  20 09                812  	BRA	OADR		OUTPUT ADDRESS
2638  6D 80                813  SKRST	TST	,X+		SKIP REMAINING CHARACTERS
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 15

263A  2A FC                814  	BPL	SKRST		TILL WE HIT END
263C  86 2B                815  	LDA	#'+'		INDICATE THERE IS MORE
263E  17 04 4E             816  	LBSR	WRICHR		OUTPUT
2641  A6 80                817  OADR	LDA	,X+		GET FIRST BYTE
2643  17 04 35             818  	LBSR	WRIBYT		OUTPUT
2646  A6 80                819  	LDA	,X+		GET NEXT BYTE
2648  17 04 30             820  	LBSR	WRIBYT		OUTPUT
264B  17 04 1C             821  	LBSR	SPACE		DISPLAY SPACE
264E  17 04 19             822  	LBSR	SPACE		AND ANOTHER
2651  0A 06                823  	DEC	TEMP		REDUCE COUNT
2653  26 C7                824  	BNE	DSPSY		GET NEXT
2655  20 B5                825  	BRA	NEWL		TRY A NEW LINE
2657  86 0D                826  ENDSY	LDA	#$0D		GET CARRIAGE RETURN
2659  17 04 33             827  	LBSR	WRICHR		OUTPUT
265C                       828  * CLOSE LISTING FILE
265C  7D 31 84             829  CLLST	TST	TERM		ARE WE LISTING?
265F  27 05                830  	BEQ	CLOBJ		NO NEED TO CLOSE
2661  CE 43 63             831  	LDU	#LSTFIL
2664  3F                   832  	SWI			SOFTWARE INTERRUPT TO DOS
2665  39                   833  	FCB	57		SYSTEM REQUEST NUMBER
2666                       834  * CLOSE OBJECT FILE
2666  86 CF                835  CLOBJ	LDA	#$CF		GET FLAG CHARACTER
2668  17 04 7D             836  	LBSR	WRIOBJ		OUTPUT
266B  4F                   837  	CLRA			GET EOF MARKER
266C  17 04 79             838  	LBSR	WRIOBJ		OUTPUT TO FILE
266F  CE 45 6D             839  	LDU	#OBJFIL
2672  3F                   840  	SWI			SOFTWARE INTERRUPT TO DOS
2673  39                   841  	FCB	57		SYSTEM REQUEST NUMBER
2674  DC 02                842  	LDD	ERRORS		WERE THERE ANY ERRORS?
2676  27 02                843  	BEQ	ABORT		NO, WE WERE OK
2678  86 64                844  	LDA	#100		SET RETURN CODE
267A                       845  *
267A                       846  * ABORT ASSEMBLER, RETURN TO OS
267A                       847  *
267A  3F                   848  ABORT	SWI			SOFTWARE INTERRUPT TO DOS
267B  00                   849  	FCB	0		SYSTEM REQUEST NUMBER
267C                       850  *
267C                       851  * LOOK UP INSTRUCTIONS POINTED TO BY THE Y REGISTER IN THE INSTRUCTION TABLE
267C                       852  * ON EXIT, ACCA CONTAINS TYPE OF INSTRUCTION, AND X POINTS TO FOUR BYTE OPCODE
267C                       853  * TABLE IN RAM
267C                       854  *
267C  8E 2C 59             855  LOCINS	LDX	#INSTAB		POINT TO INSTRUCTON TABLE
267F  17 00 2B             856  	LBSR	SKIP		SKIP TO INSTRUCTION
2682  34 20                857  LOC1	PSHS	Y		SAVE POINTER TO INSTRUCTION
2684  17 03 90             858  LOC2	LBSR	TSTERM		GET CHARACTER FROM LINE
2687  27 1A                859  	BEQ	IMATCH		WE MAY HAVE FOUND IT
2689  A1 80                860  	CMPA	,X+		IS THIS IT?
268B  27 F7                861  	BEQ	LOC2		LOOKS LIKE IT
268D  30 1F                862  LOC4	LEAX	-1,X		BACKUP INCASE WE ARE AT END
268F  A6 80                863  LOC3	LDA	,X+		GET VALUE
2691  2A FC                864  	BPL	LOC3		SKIP TO NEXT
2693  30 04                865  	LEAX	4,X		SKIP TO NEXT INSTRUNCTION
2695  35 20                866  	PULS	Y		RESTORE REGISTER POINTER
2697  6D 84                867  	TST	,X		ARE WE AT END OF TABLE?
2699  26 E7                868  	BNE	LOC1		TRY THIS ENTRY
269B  86 01                869  	LDA	#1		'UNKNOWN OPCODE'
269D  17 03 8E             870  	LBSR	SETERR		INDICATE WE HAVE AN ERROR
26A0  C6 01                871  	LDB	#1		INDICATE TYPE ONE
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 16

26A2  39                   872  	RTS
26A3  E6 80                873  IMATCH	LDB	,X+		IS THIS IT
26A5  2A E6                874  	BPL	LOC4		NO, KEEP GOING
26A7  32 62                875  	LEAS	2,S		REMOVE Y REGISTER FROM STACK
26A9  C4 7F                876  	ANDB	#$7F		REMOVE HIGH BIT FLAG
26AB  D7 18                877  	STB	ITYPE		SAVE INSTRUCTION TYPE
26AD                       878  *
26AD                       879  * SKIPS TO NEXT OPERAND
26AD                       880  *
26AD  A6 A0                881  SKIP	LDA	,Y+		GET CHARACTER FROM LINE
26AF  81 20                882  	CMPA	#' '		SPACE?
26B1  27 FA                883  	BEQ	SKIP		IF SO, KEEP GOING
26B3  31 3F                884  	LEAY	-1,Y		BACKUP TO OPERAND
26B5  39                   885  	RTS
26B6                       886  *
26B6                       887  * LOOK UP SYMBOL VALUE
26B6                       888  *
26B6  8E 47 77             889  LOCSYM	LDX	#SYMTAB		POINT TO INSTRUCTON TABLE
26B9  34 20                890  LOCSY1	PSHS	Y		SAVE POINTER TO INSTRUCTION
26BB  17 03 24             891  SYM2	LBSR	TSTEXP		GET CHARACTER FROM LINE
26BE  A1 80                892  	CMPA	,X+		IS THIS IT?
26C0  27 F9                893  	BEQ	SYM2		LOOKS LIKE IT
26C2  8A 80                894  	ORA	#$80		SET HIGH BIT
26C4  A1 1F                895  	CMPA	-1,X		IS THIS IT?
26C6  27 23                896  	BEQ	SMATCH		SKIP TO END
26C8  30 1F                897  	LEAX	-1,X		BACKUP TO START
26CA  6D 84                898  	TST	,X		ARE WE AT END?
26CC  27 12                899  	BEQ	NOSY1		IF SO, WE DIDN'T FIND IT
26CE  A6 80                900  SYM3	LDA	,X+		GET VALUE
26D0  2A FC                901  	BPL	SYM3		SKIP TO NEXT
26D2  30 02                902  SYOFF	LEAX	2,X		SKIP TO NEXT LABLE
26D4  10 AE E4             903  	LDY	,S		RESTORE REGISTER POINTER
26D7  6D 84                904  	TST	,X		ARE WE AT END OF TABLE?
26D9  26 E0                905  	BNE	SYM2		TRY THIS ENTRY
26DB  17 03 04             906  NS	LBSR	TSTEXP		FIND TERMINATOR
26DE  26 FB                907  	BNE	NS		KEEP LOOKING
26E0  86 05                908  NOSY1	LDA	#5		'UNDEFINED SYMBOL'
26E2  17 03 49             909  	LBSR	SETERR		INDICATE ERROR MESSAGE
26E5  8E 7F FF             910  	LDX	#$7FFF		INSURE MAX. OFFSET
26E8  32 62                911  	LEAS	2,S		CLEANUP SYACK
26EA  39                   912  	RTS
26EB  17 02 F4             913  SMATCH	LBSR	TSTEXP		GET TERMINATION CHARACTER
26EE  26 E2                914  	BNE	SYOFF		INDICATE SYMBOL NOT FOUND
26F0  9F 06                915  	STX	TEMP		SAVE SO WE CAN UPDATE
26F2  AE 84                916  	LDX	,X		GET SYMBOL VALUE
26F4  32 62                917  	LEAS	2,S		REMOVE Y REGISTER VALUE FROM STACK
26F6  39                   918  	RTS			KEEP GOING
26F7                       919  *
26F7                       920  * PROCESS MEMORY OPERANDS AND DETERMINE REQUIRED POSTBYTE, OPERAND BYTES,
26F7                       921  * AND LENGTH OF OPERAND
26F7                       922  *
26F7                       923  * ON EXIT, ACC A = THE TYPE OF OPERAND: 0= IMMEDIATE VALUE
26F7                       924  *                                       1= DIRECT PAGE ADDRESSING
26F7                       925  *                                       2= POSTBYTE MEMORY REFERENCE
26F7                       926  *                                       3= EXTENDED ADDRESSING
26F7                       927  *
26F7                       928  * ACC B CONTAINS THE LENGTH (NUMBER OF BYTES) OF ALL OPERAND BYTES TO
26F7                       929  * THE INSTRUCTION
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 17

26F7                       930  *
26F7                       931  * THE SIXTEEN BIT MEMORY LOCATION 'VALUE' CONTAINS THE OFFSET OR ADDRESS
26F7                       932  * VALUE TO BE USED FOR INSTRUCTIONS REQUIRING DATA BYTES. FOR INSTRUCTIONS
26F7                       933  * REQUIRING ONLY AN EIGHT BIT OFFSET OR DATA BYTE, USE THE LOWER EIGHT BITS
26F7                       934  *
26F7                       935  * THE EIGHT BIT MEMORY LOCATION 'POST' CONTAINS THE POSTBYTE TO BE USED
26F7                       936  * FOR INSTRUCTIONS REQUIRING IT
26F7                       937  *
26F7  A6 A0                938  MEMOP	LDA	,Y+		GET OPERAND TYPE
26F9                       939  * IMMEDIATE ADDRESSING
26F9  81 23                940  	CMPA	#'#'		TEST FOR IMMEDIATE
26FB  26 09                941  	BNE	NOIMM		NOT IMMEDIATE
26FD  17 02 5E             942  	LBSR	EVAL		EVALUATE OPERAND
2700  DD 13                943  	STD	VALUE		SAVE FOR LATER
2702  CC 00 02             944  	LDD	#$0002		LENGTH OF POSTBYTE
2705  39                   945  	RTS
2706                       946  * EXTENDED ADDRESSING
2706  81 3E                947  NOIMM	CMPA	#'>'		EXTENDED ADDRESSING?
2708  26 09                948  	BNE	NOEXT		NOT EXTENDED
270A  17 02 51             949  	LBSR	EVAL		EVALUATE OPERAND
270D  DD 13                950  	STD	VALUE		SAVE IT
270F  CC 03 02             951  	LDD	#$0302		INDICATE THREE BYTE OPERAND, + TYPE 1
2712  39                   952  	RTS
2713                       953  * DIRECT PAGE ADDRESSING
2713  81 3C                954  NOEXT	CMPA	#'<'		DIRECT PAGE ADDRESSING?
2715  26 09                955  	BNE	NODIR		NOT DIRECT PAGE ADDRESSING
2717  17 02 44             956  	LBSR	EVAL		EVALUATE OPERAND
271A  DD 13                957  	STD	VALUE		SAVE VALUE
271C  CC 01 01             958  	LDD	#$0101		INDICATE DIRECT PAGE LENGTH AND TYPE
271F  39                   959  	RTS
2720                       960  * INDIRECT ADDRESSING
2720  81 5B                961  NODIR	CMPA	#'['		INDIRECT?
2722  26 10                962  	BNE	NOTIND		NOT INDIRECT
2724  0A 17                963  	DEC	INDFLG		INDICATE WE ARE ON SECOND ITERATION
2726  8D 0E                964  	BSR	EVLIND		EVALUATE INDEXED OPERANDS
2728  0F 17                965  	CLR	INDFLG		RESET FLAG
272A  34 02                966  	PSHS	A		SAVE TYPE
272C  96 16                967  	LDA	POST		GET POSTBYTE
272E  8A 10                968  	ORA	#$10		SET INDIRECT BIT
2730  97 16                969  	STA	POST		RESAVE POSTBYTE
2732  35 82                970  	PULS	A,PC		RESTORE TYPE AND RETURN
2734                       971  * ACCUMULATOR OFFSET FROM REGISTER
2734  31 3F                972  NOTIND	LEAY	-1,Y		BACKUP TO OPERAND
2736  EC A4                973  EVLIND	LDD	,Y		GET FIRST TWO CHARACTERS?
2738  10 83 41 2C          974  	CMPD	#'A,'		A ACCUMULATOR OFFSET?
273C  27 12                975  	BEQ	ACCAOF		YES?
273E  10 83 42 2C          976  	CMPD	#'B,'		B ACCUMULATOR OFFSET?
2742  27 10                977  	BEQ	ACCBOF		YES
2744  10 83 44 2C          978  	CMPD	#'D,'		D ACCUMULATOR OFFSET?
2748  10 26 00 B4          979  	LBNE	NOACC		NOT AN ACCUMULATOR OFFSET
274C  86 8B                980  	LDA	#$8B		POSTBYTE
274E  20 06                981  	BRA	PRCACC		PROCESS
2750  86 86                982  ACCAOF	LDA	#$86		POSTBYTE OPERAND
2752  20 02                983  	BRA	PRCACC		PROCESS FOR ACCUMULATOR OFFSET
2754  86 85                984  ACCBOF	LDA	#$85		POSTBYTE CODE
2756  97 16                985  PRCACC	STA	POST		SAVE POSTBYTE
2758  31 22                986  	LEAY	2,Y		SKIP ACC AND COMMA
275A  8D 04                987  INSREG	BSR	ADDREG		ADD IN REGISTER BITS
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 18

275C  CC 02 01             988  	LDD	#$0201		INDICATE TYPE AND LENGTH
275F  39                   989  	RTS
2760  17 02 B4             990  ADDREG	LBSR	TSTERM		GET CHARACTER FROM SOURCE
2763  81 2D                991  	CMPA	#'-'		NOT AUTO DECREMENT
2765  26 10                992  	BNE	NOAUT		NO AUTO INC/DEC
2767  C6 82                993  	LDB	#$82		AUTO DEC POSTBYTE
2769  17 02 AB             994  	LBSR	TSTERM		TRY AGAIN
276C  81 2D                995  	CMPA	#'-'		IS IT AUTO DEC?
276E  26 05                996  	BNE	SETRGB		NO, WE ARE OK
2770  C6 83                997  	LDB	#$83		CHANGE OPCODE
2772  17 02 A2             998  	LBSR	TSTERM		GET REGISTER BYTE
2775  D7 16                999  SETRGB	STB	POST		SET NEW POSTBYTE
2777  5F                  1000  NOAUT	CLRB			INDICATE X REGISTER
2778  81 58               1001  	CMPA	#'X'		IS IT X?
277A  27 0F               1002  	BEQ	ADDOUT		IF SO, WE ARE THERE
277C  5C                  1003  	INCB			INDICATE Y REGISTER
277D  81 59               1004  	CMPA	#'Y'		ARE WE THERE?
277F  27 0A               1005  	BEQ	ADDOUT		IF SO, SKIP IT
2781  5C                  1006  	INCB			ADVANCE
2782  81 55               1007  	CMPA	#'U'		USER STACK?
2784  27 05               1008  	BEQ	ADDOUT		INDICATE WE ARE THERE
2786  5C                  1009  	INCB			ADVANCE
2787  81 53               1010  	CMPA	#'S'		SYSTEM STACK POINTER?
2789  26 24               1011  	BNE	PCREL		COULD BE PC RELATIVE
278B  86 20               1012  ADDOUT	LDA	#32		OFFSET FIVE BITS
278D  3D                  1013  	MUL			MOVE IT OVER
278E  DA 16               1014  	ORB	POST		ADD IN POSTBYTE BITS
2790  D7 16               1015  	STB	POST		RESAVE
2792  17 02 82            1016  	LBSR	TSTERM		GET FOLLOWING CHARACTER
2795  81 2B               1017  	CMPA	#'+'		AUTOINC?
2797  26 15               1018  	BNE	NOAINC		NO, TRY AUTODEC
2799  96 16               1019  	LDA	POST		GET POST BYTE BACK
279B  84 60               1020  	ANDA	#$60		REMOVE BITS WE JUST SET
279D  34 02               1021  	PSHS	A		SAVE BITS
279F  C6 80               1022  	LDB	#$80		INC BY ONE
27A1  17 02 73            1023  	LBSR	TSTERM		GET NEXT CHARACTER
27A4  81 2B               1024  	CMPA	#'+'		TRY FOR AUTO TWICE
27A6  26 02               1025  	BNE	SAVPOS		SET BITS
27A8  C6 81               1026  	LDB	#$81		NEW POSTBYTE
27AA  EA E0               1027  SAVPOS	ORB	,S+		SET REGISTER BITS
27AC  D7 16               1028  	STB	POST		SAVE NEW POSTBYTE
27AE  39                  1029  NOAINC	RTS
27AF                      1030  * TEST FOR PC RELATIVE OFFSETS
27AF  81 50               1031  PCREL	CMPA	#'P'		TEST FOR 'PCR'
27B1  26 48               1032  	BNE	REGERR		NO, INDICATE ERROR
27B3  DC 13               1033  	LDD	VALUE		GET VALUE
27B5  93 08               1034  	SUBD	CURPC		SUBTRACT CURRENT PROGRAM COUNTER
27B7  83 00 03            1035  	SUBD	#3		CONVERT TO OFFSET FOR EIGHT BIT
27BA  34 02               1036  	PSHS	A		SAVE VALUE
27BC  96 18               1037  	LDA	ITYPE		GET INSTRUCTION TYPE
27BE  81 04               1038  	CMPA	#4		IS IT SPECIAL CASE
27C0  25 0B               1039  	BLO	CALOFF		NO, ITS OK
27C2  81 05               1040  	CMPA	#5		HOW ABOUT OTHER SPECIAL CASE
27C4  22 07               1041  	BHI	CALOFF		NO, IT'S ALSO OK
27C6  A6 E4               1042  	LDA	,S		GET VALUE BACK
27C8  83 00 01            1043  	SUBD	#1		CONVERT TO EXTRA BYTE OF OFFSET
27CB  A7 E4               1044  	STA	,S		RESAVE
27CD  35 02               1045  CALOFF	PULS	A		RESTORE VALUE
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 19

27CF  7D 31 85            1046  	TST	DEBUG		IS THIS DEBUG MODE?
27D2  27 0C               1047  	BEQ	OFF16		IF SO, USE 16 BIT OFFSET
27D4  10 83 00 80         1048  	CMPD	#128		TEST FOR 8 BIT OFFSET
27D8  25 15               1049  	BLO	OFF8		YES, USE EIGHT BIT OFFSET
27DA  10 83 FF 80         1050  	CMPD	#-128		TEST FOR UNDER 8 BIT OFFSET
27DE  24 0F               1051  	BHS	OFF8		YES, USE EIGHT BIT
27E0  83 00 01            1052  OFF16	SUBD	#1		CONVERT FOR 16 BIT OFFSET
27E3  DD 13               1053  	STD	VALUE		SET OFFSET VALUE
27E5  86 8D               1054  	LDA	#$8D		POSTBYTE
27E7  97 16               1055  	STA	POST		SAVE POSTBYTE
27E9  32 62               1056  	LEAS	2,S		SKIP SAVE PROGRAM COUNTER
27EB  CC 02 03            1057  	LDD	#$0203		THREE BYTES OF OPERAND
27EE  39                  1058  	RTS
27EF  DD 13               1059  OFF8	STD	VALUE		SET OFFSET VALUE
27F1  86 8C               1060  	LDA	#$8C		POSTBYTE
27F3  97 16               1061  	STA	POST		SAVE POSTBYTE VALUE
27F5  32 62               1062  	LEAS	2,S		SKIP SAVED PROGRAM COUNTER
27F7  CC 02 02            1063  	LDD	#$0202		TWO BYTES OF OPERANDS
27FA  39                  1064  	RTS
27FB  86 04               1065  REGERR	LDA	#4		'INVALID REGISTER SPECIFICATION'
27FD  16 02 2E            1066  	LBRA	SETERR		INDICATE AN ERROR
2800                      1067  * CONSTANT OFFSET FROM REGISTER
2800  81 2C               1068  NOACC	CMPA	#','		NO OFFSET?
2802  26 09               1069  	BNE	OFFVAL		NO, THERE IS AN OFFSET
2804  86 84               1070  	LDA	#$84		POSTBYTE FOR NO OFFSET
2806  97 16               1071  	STA	POST		SAVE
2808  31 21               1072  	LEAY	1,Y		GET REGISTER VALUE
280A  16 FF 4D            1073  	LBRA	INSREG		INSERT REGISTER VALUE
280D  17 01 4E            1074  OFFVAL	LBSR	EVAL		EVALUATE OPERAND VALUE
2810  DD 13               1075  	STD	VALUE		SAVE VALUE FOR LATER
2812  A6 3F               1076  	LDA	-1,Y		GET TERMINATING CHARACTER
2814  81 2C               1077  	CMPA	#','		ARE WE OFF REGISTER?
2816  27 1F               1078  	BEQ	BIT5		YES, USE REGISTER DISPLACEMENT
2818  86 8F               1079  	LDA	#$8F		GENERATE EXTENDED INDIRECT POSTBYTE
281A  97 16               1080  	STA	POST		SET POSTBYTE
281C  0D 17               1081  	TST	INDFLG		ARE WE INDIRECT?
281E  26 53               1082  	BNE	BITEXT		YES, SAVE EXTENDED POSTBYTE
2820                      1083  * NO REGISTER, AND NO INDIRECT... USE EXTENDED OR DP
2820  7D 31 85            1084  	TST	DEBUG		ARE WE IN DEBUG MODE?
2823  27 0E               1085  	BEQ	USEXT		IF SO, USE EXTENDED
2825  0D 0A               1086  	TST	CURDP		IS DIRECT PAGE SET?
2827  26 0A               1087  	BNE	USEXT		NO, USE EXTENDED
2829  96 13               1088  	LDA	VALUE		GET HIGH BYTE
282B  91 0B               1089  	CMPA	CURDP+1		IS ADDRESS IN DP SEGMENT?
282D  26 04               1090  	BNE	USEXT		NO, USE EXTENDED
282F  CC 01 01            1091  	LDD	#$0101		INDICATE DIRECT PAGE ADDRESSING
2832  39                  1092  	RTS
2833  CC 03 02            1093  USEXT	LDD	#$0302		INDICATE EXTENDED ADDRESSING
2836  39                  1094  	RTS
2837  DC 13               1095  BIT5	LDD	VALUE		RESTORE VALUE
2839  7D 31 85            1096  	TST	DEBUG		ARE WE DEBUGGING?
283C  27 2E               1097  	BEQ	BIT16		IF SO, USE 16 BIT OFFSET
283E  0D 17               1098  	TST	INDFLG		ARE WE INDIRECT?
2840  26 13               1099  	BNE	BIT8		IF SO, DON'T USE 5 BIT INDEX
2842  10 83 00 10         1100  	CMPD	#16		ARE WE OVER FIVE BITS
2846  2C 0D               1101  	BGE	BIT8		YES, TRY EIGHTBIT
2848  10 83 FF F0         1102  	CMPD	#-16		ARE WE UNDER FIVE BITS?
284C  2D 07               1103  	BLT	BIT8		IF SO, TRY FOR EIGHT BIT OFFSET
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 20

284E  C4 1F               1104  	ANDB	#$1F		GET FIVE BIT VALUE FOR POSTBYTE
2850  D7 16               1105  	STB	POST		SET UP POSTBYTE
2852  16 FF 05            1106  	LBRA	INSREG
2855  10 83 00 80         1107  BIT8	CMPD	#128		ARE WE OVER 8 BITS?
2859  2C 11               1108  	BGE	BIT16		IF SO, GO WITH 16 BITS
285B  10 83 FF 80         1109  	CMPD	#-128		ARE WE UNDER 8 BITS
285F  2D 0B               1110  	BLT	BIT16		IF SO, GO WITH 16 BITS
2861  86 88               1111  	LDA	#$88		GET POSTBYTE FOR EIGHT BITS
2863  97 16               1112  	STA	POST		SAVE IN MEMORY
2865  17 FE F8            1113  	LBSR	ADDREG		INSERT REGISTER VALUE
2868  CC 02 02            1114  	LDD	#$0202		INDICATE MEMORY REFERENCE
286B  39                  1115  	RTS
286C  86 89               1116  BIT16	LDA	#$89		POSTBYTE FOR 16 BIT OFFSET
286E  97 16               1117  	STA	POST		SAVE FOR LATER
2870  17 FE ED            1118  	LBSR	ADDREG		INSERT REGISTER BITS
2873  CC 02 03            1119  BITEXT	LDD	#$0203		INDICATE TYPE AND LENGTH
2876  39                  1120  	RTS			SAVE FOR LATER
2877                      1121  *
2877                      1122  * GET A VALUE FROM THE COMMAND LINE, RETURN IN 'D'
2877                      1123  *
2877  A6 A0               1124  GETVAL	LDA	,Y+		GET PRECEDING SYMBOL?
2879                      1125  * TEST FOR '=' SWAP HIGH AND LOW BYTES
2879  81 3D               1126  	CMPA	#'='		IS IT A REVERSE CHARACTER?
287B  26 06               1127  	BNE	GETV1		IF NO, NOTHING SPECIAL TO DO
287D  8D F8               1128  	BSR	GETVAL		EVALUATE NEXT VALUE ELEMENT
287F  1E 89               1129  	EXG	A,B		SWAP HIGH AND LOW
2881  20 14               1130  	BRA	GETEN1		AND CONTINUE
2883                      1131  * TEST FOR '-' NEGATE VALUE
2883  81 2D               1132  GETV1	CMPA	#'-'		IS IT NEGATE?
2885  26 08               1133  	BNE	GETV2		NO, ITS OK
2887  8D EE               1134  	BSR	GETVAL		EVALUATE NEXT
2889  4F                  1135  	CLRA
288A  5F                  1136  	CLRB
288B  93 04               1137  	SUBD	VAL1		CALCULATE NEGATE
288D  20 08               1138  	BRA	GETEN1		AND CONTINUE
288F                      1139  * TEST FOR '~' ONE'S COMPLEMENT
288F  81 7E               1140  GETV2	CMPA	#'~'		COMPLEMENT?
2891  26 07               1141  	BNE	GETHEX		NO, ITS OK
2893  8D E2               1142  	BSR	GETVAL		EVALUATE NEXT
2895  43                  1143  	COMA			COMPLEMENT HIGH
2896  53                  1144  	COMB			COMPLEMENT LOW
2897  DD 04               1145  GETEN1	STD	VAL1		SAVE RESULT
2899  39                  1146  	RTS
289A                      1147  * TEST FOR HEXIDECIMAL NUMBER
289A  34 10               1148  GETHEX	PSHS	X		SAVE 'X'
289C  8E 00 00            1149  	LDX	#0		START WITH ZERO
289F  81 24               1150  	CMPA	#'$'		IS IT A HEX NUMBER?
28A1  26 22               1151  	BNE	GETBIN		NOT A HEX NUMBER, TRY BINARY
28A3  17 01 3C            1152  GETH1	LBSR	TSTEXP		TEST FOR TERMINATOR
28A6  27 5A               1153  	BEQ	GETEND		IF SO, LAST CHARACTER
28A8  80 30               1154  	SUBA	#'0'		CONVERT TO BINARY
28AA  81 0A               1155  	CMPA	#10		0-9?
28AC  25 0A               1156  	BLO	GETH2		IF SO, IT'S OK
28AE  81 11               1157  	CMPA	#$11		< 'A'?
28B0  2D 4B               1158  	BLT	BADHEX		IF SO, IT'S BAD
28B2  80 07               1159  	SUBA	#7		CONVERT TO HEX
28B4  81 10               1160  	CMPA	#$10		IS IT 0-F?
28B6  24 45               1161  	BHS	BADHEX		IF SO, IT'S BAD
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 21

28B8  97 06               1162  GETH2	STA	TEMP		SAVE FOR TEMPORARY VALUE
28BA  CC 00 10            1163  	LDD	#16		MULTIPLY BY 16 (SHIFT FOUR BITS)
28BD  3F                  1164  	SWI			SOFTWARE INTERRUPT TO DOS
28BE  6B                  1165  	FCB	107		SYSTEM REQUEST NUMBER
28BF  DA 06               1166  	ORB	TEMP		INCLUDE EXTRA DIGIT
28C1  1F 01               1167  	TFR	D,X		REPLACE IN 'X'
28C3  20 DE               1168  	BRA	GETH1		DO NEXT
28C5                      1169  * TEST FOR BINARY NUMBER
28C5  81 25               1170  GETBIN	CMPA	#'%'		IS IT BINARY?
28C7  26 16               1171  	BNE	GETOCT		NO, TRY OCTAL
28C9  17 01 16            1172  GETB1	LBSR	TSTEXP		TEST FOR A TERMINATOR
28CC  27 34               1173  	BEQ	GETEND		IF END, CONTINUE WITH EXPRESSION
28CE  80 30               1174  	SUBA	#'0'		CONVERT TO BINARY
28D0  81 01               1175  	CMPA	#1		TEST FOR IN RANGE
28D2  22 29               1176  	BHI	BADHEX		IF INVALID, SAY SO
28D4  34 02               1177  	PSHS	A		SAVE THIS VALUE
28D6  1F 10               1178  	TFR	X,D		COPY TO ACCUMULATOR
28D8  30 8B               1179  	LEAX	D,X		SHIFT BY ONE BIT
28DA  35 04               1180  	PULS	B		RESTORE VALUE
28DC  3A                  1181  	ABX			INSERT THIS BIT
28DD  20 EA               1182  	BRA	GETB1		CONTINUE LOOKING
28DF                      1183  * TEST FOR OCTAL NUMBER
28DF  81 40               1184  GETOCT	CMPA	#'@'		IS IT OCTAL?
28E1  26 25               1185  	BNE	GETCHR		NO, TRY CHARACTER
28E3  17 00 FC            1186  GETO1	LBSR	TSTEXP		TEST FOR TERMINATOR
28E6  10 27 00 18         1187  	LBEQ	GETEND		IF END, CONTINUE
28EA  80 30               1188  	SUBA	#'0'		CONVERT TO BINARY
28EC  81 07               1189  	CMPA	#7		IN RANGE?
28EE  22 0D               1190  	BHI	BADHEX		INVALID
28F0  97 06               1191  	STA	TEMP		SAVE TEMP
28F2  CC 00 08            1192  	LDD	#8		MUL BY 8
28F5  3F                  1193  	SWI			SOFTWARE INTERRUPT TO DOS
28F6  6B                  1194  	FCB	107		SYSTEM REQUEST NUMBER
28F7  DA 06               1195  	ORB	TEMP		INCLUDE
28F9  1F 01               1196  	TFR	D,X		COPY BACK
28FB  20 E6               1197  	BRA	GETO1		CONTINUE
28FD                      1198  * INVALID HEX DIGIT
28FD  86 06               1199  BADHEX	LDA	#6		'INVALID OPERATOR IN EXPRESSION'
28FF  17 01 2C            1200  	LBSR	SETERR		DISPLAY
2902                      1201  * END OF GETVAL, EXIT
2902  1F 10               1202  GETEND	TFR	X,D		D = VALUE
2904  DD 04               1203  	STD	VAL1		SET VALUE
2906  35 90               1204  	PULS	X,PC		RESTORE & RETURN
2908                      1205  * TEST FOR QUOTED STRING
2908  81 27               1206  GETCHR	CMPA	#$27		IS IT A QUOTE?
290A  26 1F               1207  	BNE	GETDEC		NO, TRY DECIMAL NUMBER
290C  A6 A0               1208  GETC1	LDA	,Y+		GET CHAR
290E  81 0D               1209  	CMPA	#$0D		END OF LINE MEANS SCREWUP
2910  27 10               1210  	BEQ	BADSTR		INVALID STRING
2912  81 27               1211  	CMPA	#$27		CLOSING QUOTE
2914  27 EC               1212  	BEQ	GETEND		OF SO, THATS IT
2916  97 06               1213  	STA	TEMP		SAVE CHAR
2918  1F 10               1214  	TFR	X,D		COPY TO ACCUMULATOR
291A  1F 98               1215  	TFR	B,A		SHIFT UP
291C  D6 06               1216  	LDB	TEMP		INCLUDE LOWER CHAR
291E  1F 01               1217  	TFR	D,X		REPLACE OLD VALUE
2920  20 EA               1218  	BRA	GETC1		GET NEXT CHARACTER
2922                      1219  * STRING OPERAND WAS INVALID
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 22

2922  31 3F               1220  BADSTR	LEAY	-1,Y		BACKUP
2924  86 08               1221  	LDA	#8		'IMPROPERLY DELIMITED STRING'
2926  17 01 05            1222  	LBSR	SETERR		SET ERROR MESSAGE
2929  20 D7               1223  	BRA	GETEND		CONTINUE
292B                      1224  * TEST FOR DECIMAL NUMBER
292B  81 30               1225  GETDEC	CMPA	#'0'		IS IT < '0'?
292D  25 20               1226  	BLO	GETPC		NO, IT'S NOT DECIMAL
292F  81 39               1227  	CMPA	#'9'		IS IT > '9'
2931  22 1C               1228  	BHI	GETPC		NO, NOT DECIMAL
2933  31 3F               1229  	LEAY	-1,Y		BACKUP TO START OF LINE
2935  17 00 AA            1230  GETD1	LBSR	TSTEXP		TEST FOR END OF DIGIT STRING
2938  27 C8               1231  	BEQ	GETEND		IF SO, QUIT
293A  80 30               1232  	SUBA	#'0'		CONVERT TO BINARY
293C  81 09               1233  	CMPA	#9		ARE WE DECIMAL?
293E  22 BD               1234  	BHI	BADHEX		IF NOT, GET UPSET
2940  97 06               1235  	STA	TEMP		SAVE DIGIT
2942  CC 00 0A            1236  	LDD	#10		MULTIPLY BY 10
2945  3F                  1237  	SWI			SOFTWARE INTERRUPT TO DOS
2946  6B                  1238  	FCB	107		SYSTEM REQUEST NUMBER
2947  DB 06               1239  	ADDB	TEMP		ADD IN DIGIT
2949  89 00               1240  	ADCA	#0		INSURE HIGH INCS
294B  1F 01               1241  	TFR	D,X		SAVE IN X FOR NEXT ITERATION
294D  20 E6               1242  	BRA	GETD1		KEEP GOING
294F                      1243  * TEST FOR CURRENT PROGRAM COUNTER
294F  81 2A               1244  GETPC	CMPA	#'*'		CURRENT PROGRAM COUNTER?
2951  26 04               1245  	BNE	GETSYM		NOT THE CURRENT PROGRAM COUNTER
2953  9E 08               1246  	LDX	CURPC		GET CURRENT PROGRAM COUNTER
2955  20 AB               1247  	BRA	GETEND		CONTINUE
2957                      1248  * LOOK UP SYMBOL IN SYMBOL TABLE
2957  31 3F               1249  GETSYM	LEAY	-1,Y		BACKUP TO SYMBOL
2959  17 FD 5A            1250  	LBSR	LOCSYM		LOOK UP SYMBOL VALUE
295C  20 A4               1251  	BRA	GETEND
295E                      1252  *
295E                      1253  * EVALUATE ANY OPERANDS
295E                      1254  *
295E  34 10               1255  EVAL	PSHS	X		SAVE 'X'
2960  17 FF 14            1256  	LBSR	GETVAL		GET VALUE
2963  1F 01               1257  EVAL1	TFR	D,X		SAVE OLD VALUE
2965  17 00 AF            1258  EVAL2	LBSR	TSTERM		GET TERMINATOR
2968  26 06               1259  	BNE	TRYADD		TRY ADD
296A  1F 10               1260  	TFR	X,D		GET VALUE
296C  DD 04               1261  EVEXIT	STD	VAL1		SET VALUE
296E  35 90               1262  	PULS	X,PC		RESTORE & RETURN
2970                      1263  * TEST FOR ADDITION
2970  81 2B               1264  TRYADD	CMPA	#'+'		IS THIS ADDITION?
2972  26 09               1265  	BNE	TRYSUB		NO, TRY SUBTRACTION
2974  17 FF 00            1266  	LBSR	GETVAL		GET NEW OPERAND VALUE
2977  1F 10               1267  	TFR	X,D		COPY TO ACCUMULATOR
2979  D3 04               1268  	ADDD	VAL1		ADD TO OLD VALUE
297B  20 E6               1269  	BRA	EVAL1		BACK TO CALLER
297D                      1270  * TRY SUBTRACTION
297D  81 2D               1271  TRYSUB	CMPA	#'-'		SUBTRACT?
297F  26 09               1272  	BNE	TRYMUL		NO, TRY MULTIPLICATION
2981  17 FE F3            1273  	LBSR	GETVAL		EVALUATE NEXT EXPRESSION
2984  1F 10               1274  	TFR	X,D		COPY TO ACCUMULATOR FOR ARITHMITIC
2986  93 04               1275  	SUBD	VAL1		SUBTRACT NEW VALUE
2988  20 D9               1276  	BRA	EVAL1		ALL DONE
298A                      1277  * MULTIPLY OPERANDS
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 23

298A  81 2A               1278  TRYMUL	CMPA	#'*'		IS IT A MULTIPLY?
298C  26 07               1279  	BNE	TRYDIV		NO, TRY LOGICAL OR
298E  17 FE E6            1280  	LBSR	GETVAL		EVALUATE SECOND OPERAND
2991  3F                  1281  	SWI			SOFTWARE INTERRUPT TO DOS
2992  6B                  1282  	FCB	107		SYSTEM REQUEST NUMBER
2993  20 CE               1283  	BRA	EVAL1		ALL DONE
2995                      1284  * DIVIDE OPERATION
2995  81 2F               1285  TRYDIV	CMPA	#'/'		DIVISION?
2997  26 07               1286  	BNE	TRYMOD		NO, TRY MODULUS
2999  17 FE DB            1287  	LBSR	GETVAL		GET OPERAND
299C  3F                  1288  	SWI			SOFTWARE INTERRUPT TO DOS
299D  6C                  1289  	FCB	108		SYSTEM REQUEST NUMBER
299E  20 C5               1290  	BRA	EVAL2		AND KEEP RESULT
29A0                      1291  * MODULUS OPERATION
29A0  81 5C               1292  TRYMOD	CMPA	#'\'		MODULUS?
29A2  26 07               1293  	BNE	TRYOR		NO, TRY OR
29A4  17 FE D0            1294  	LBSR	GETVAL		GET OPERAND
29A7  3F                  1295  	SWI			SOFTWARE INTERRUPT TO DOS
29A8  6C                  1296  	FCB	108		SYSTEM REQUEST NUMBER
29A9  20 B8               1297  	BRA	EVAL1		RETURN REMAINDER
29AB                      1298  * LOGICAL OR OF OPERANDS
29AB  81 7C               1299  TRYOR	CMPA	#'|'		IS IT OR?
29AD  26 0B               1300  	BNE	TRYAND		NO, TRY LOGICAL AND
29AF  17 FE C5            1301  	LBSR	GETVAL		CALCULATE OPERAND VALUE
29B2  1F 10               1302  	TFR	X,D		GET OLD VALUE
29B4  9A 04               1303  	ORA	VAL1		PERFORM OR
29B6  DA 05               1304  	ORB	VAL1+1		ON BOTH BYTES
29B8  20 A9               1305  	BRA	EVAL1		CONTINUE
29BA                      1306  * LOGICAL AND OF OPERANDS
29BA  81 26               1307  TRYAND	CMPA	#'&'		IS IT AND?
29BC  26 0B               1308  	BNE	TRYXOR		NO, TRY XOR
29BE  17 FE B6            1309  	LBSR	GETVAL		EVALUATE OPERANDS
29C1  1F 10               1310  	TFR	X,D		GET OLD VALUE
29C3  94 04               1311  	ANDA	VAL1		AND WITH OLD
29C5  D4 05               1312  	ANDB	VAL1+1		AND SECOND BYTE
29C7  20 9A               1313  	BRA	EVAL1		CONTINUE
29C9                      1314  * EXCLUSIVE OR OPERATION
29C9  81 5E               1315  TRYXOR	CMPA	#'^'		IS IT XOR?
29CB  26 0B               1316  	BNE	EVAERR		NO, ERROR
29CD  17 FE A7            1317  	LBSR	GETVAL		EVALUATE OPERANDS
29D0  1F 10               1318  	TFR	X,D		GET OLD VALUE
29D2  98 04               1319  	EORA	VAL1		XOR WITH OLD
29D4  D8 05               1320  	EORB	VAL1+1		XOR SECOND BYTE
29D6  20 8B               1321  	BRA	EVAL1		CONTINUE
29D8  86 06               1322  EVAERR	LDA	#6		'INVALID OPERATOR IN EXPRESSION'
29DA  17 00 51            1323  	LBSR	SETERR		SET ERROR FLAG
29DD  CC 00 00            1324  	LDD	#0		ZERO VALUE
29E0  20 8A               1325  	BRA	EVEXIT		END EXIT
29E2                      1326  *
29E2                      1327  * TEST FOR VALID EXPRESSION ELEMENT TERMINATOR
29E2                      1328  *
29E2  A6 A4               1329  TSTEXP	LDA	,Y		GET CHARACTER
29E4  81 2B               1330  	CMPA	#'+'		PLUS SIGN
29E6  27 2E               1331  	BEQ	TSTEND		OK
29E8  81 2D               1332  	CMPA	#'-'		MINUS SIGN
29EA  27 2A               1333  	BEQ	TSTEND		IS ALSO OK
29EC  81 26               1334  	CMPA	#'&'		LOCAIAL AND?
29EE  27 26               1335  	BEQ	TSTEND		IF SO, IT'S OK
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 24

29F0  81 7C               1336  	CMPA	#'|'		LOGICAL OR?
29F2  27 22               1337  	BEQ	TSTEND		IF SO, IT'S OK
29F4  81 5E               1338  	CMPA	#'^'		EXCLUSIVE OR?
29F6  27 1E               1339  	BEQ	TSTEND		YES, ITS OK
29F8  81 2A               1340  	CMPA	#'*'		MULTIPLY?
29FA  27 1A               1341  	BEQ	TSTEND		YES, ITS OK
29FC  81 2F               1342  	CMPA	#'/'		DIVIDE?
29FE  27 16               1343  	BEQ	TSTEND		YES, ITS OK
2A00  81 5C               1344  	CMPA	#'\'		MODULUS?
2A02  27 12               1345  	BEQ	TSTEND		YES, ITS OK
2A04  81 20               1346  	CMPA	#' '		SPACE IS VALID
2A06  27 0E               1347  	BEQ	TSTEND		IF SO, QUIT
2A08  81 2C               1348  	CMPA	#','		SO IS COMMA
2A0A  27 0A               1349  	BEQ	TSTEND		INDICATE SO
2A0C  81 5D               1350  	CMPA	#']'		AND CLOSING BRACE
2A0E  27 06               1351  	BEQ	TSTEND		INDICATE SO
2A10  81 0D               1352  	CMPA	#$0D		CARRIAGE RETURN IS LAST
2A12  27 02               1353  	BEQ	TSTEND		IF NOT, SAY SO
2A14  31 21               1354  	LEAY	1,Y		DON'T SKIP END OF LINE
2A16  39                  1355  TSTEND	RTS
2A17                      1356  * GET CHARACTER (Y) AND ADVANCE Y IF NOT A CR, SET 'Z' IF TERMINATOR
2A17  A6 A0               1357  TSTERM	LDA	,Y+		GET CHARACTER
2A19  81 20               1358  	CMPA	#' '		SPACE?
2A1B  27 F9               1359  	BEQ	TSTEND		YES, ITS OK
2A1D  81 2C               1360  	CMPA	#','		COMMA?
2A1F  27 F5               1361  	BEQ	TSTEND		YES, ITS OK
2A21  81 5D               1362  	CMPA	#']'		CLOSEING BRACE?
2A23  27 F1               1363  	BEQ	TSTEND		YES, ITS OK
2A25  81 0D               1364  	CMPA	#$0D		CARRIAGE RETURN
2A27  26 ED               1365  	BNE	TSTEND		NO, ITS OK
2A29  31 3F               1366  	LEAY	-1,Y		BACKUP
2A2B  1A 04               1367  	ORCC	#%00000100	SET 'Z' FLAG
2A2D  39                  1368  	RTS
2A2E                      1369  * INDICATE AN ERROR HAS OCCURED
2A2E  0D 15               1370  SETERR	TST	EMSG		ALREADY OCCURED?
2A30  26 02               1371  	BNE	NOSET		DON'T SET IF ALREADY IN
2A32  97 15               1372  	STA	EMSG		SET ERROR FLAG
2A34  39                  1373  NOSET	RTS
2A35                      1374  *
2A35                      1375  * DISPLAY ERROR MESSAGE
2A35                      1376  *
2A35  34 16               1377  DSPERR	PSHS	A,B,X		SAVE X REGISTER
2A37  96 15               1378  	LDA	EMSG		GETERROR MESSAGE
2A39  27 2D               1379  	BEQ	NOERR		NOT AN ERROR
2A3B  0A 12               1380  	DEC	PAGLIN		REDUCE LINES/PAGE
2A3D  8E 2B 33            1381  	LDX	#EMSG1		POINT TO FIRST MESSAGE
2A40  8D 30               1382  	BSR	WRIMSG		OUTPUT MESSAGE
2A42  D6 15               1383  	LDB	EMSG		GET ERROR NUMBER BACK
2A44  4F                  1384  	CLRA			ZERO HIGH BYTE
2A45  17 00 6E            1385  	LBSR	WRIDEC		OUTPUT NUMBER IN DECIMAL
2A48  DC 02               1386  	LDD	ERRORS		GET TOTAL ERRORS
2A4A  C3 00 01            1387  	ADDD	#1		ADVANCE TO NEXT
2A4D  DD 02               1388  	STD	ERRORS		SAVE BACK
2A4F  8E 2B 55            1389  	LDX	#EMSG2		SECOND PART
2A52  8D 1E               1390  	BSR	WRIMSG		OUTPUT MESSAGE
2A54  D6 15               1391  	LDB	EMSG		GET MESSAGE NUMBER BACK
2A56  8E 2B 91            1392  	LDX	#ERRMSG		POINT TO ERROR MESSAGE TABLE
2A59  A6 80               1393  LKMSG	LDA	,X+		GET CHARACTER FROM MESSAGE
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 25

2A5B  26 FC               1394  	BNE	LKMSG		KEEP GOING TILL WE FIND END OF MESSAGE
2A5D  5A                  1395  	DECB			REDUCE COUNT
2A5E  26 F9               1396  	BNE	LKMSG		OUTPUT
2A60  8D 10               1397  	BSR	WRIMSG		OUTPUT
2A62  86 0D               1398  	LDA	#$0D		GET CARRIAGE RETURN
2A64  8D 29               1399  	BSR	WRICHR		OUTPUT
2A66  0F 15               1400  	CLR	EMSG		CLEAR ERROR MESSAGE FLAG
2A68  35 96               1401  NOERR	PULS	A,B,X,PC	RESTORE REGISTERS
2A6A                      1402  *
2A6A                      1403  * DISPLAY A SPACE ON OUTPUT FILE
2A6A                      1404  *
2A6A  34 02               1405  SPACE	PSHS	A		SAVE ACCUMULTOR
2A6C  86 20               1406  	LDA	#' '		GET SPACE
2A6E  8D 1F               1407  	BSR	WRICHR		OUTPUT
2A70  35 82               1408  	PULS	A,PC		RESTORE AND RETURN
2A72                      1409  *
2A72                      1410  * DISPLAY MESSAGE UP TO A ZERO
2A72                      1411  *
2A72  A6 80               1412  WRIMSG	LDA	,X+		GET CHARACTER FROM MESSAGE
2A74  27 04               1413  	BEQ	ENDMSG		IF SO, QUIT
2A76  8D 17               1414  	BSR	WRICHR		OUTPUT
2A78  20 F8               1415  	BRA	WRIMSG		KEEP GOING
2A7A  39                  1416  ENDMSG	RTS
2A7B                      1417  *
2A7B                      1418  * DISPLAY NUMBER IN ACCA IN HEX
2A7B                      1419  *
2A7B  34 02               1420  WRIBYT	PSHS	A		SAVE CURRENT VALUE
2A7D  44                  1421  	LSRA			NIBBLE INTO LOW
2A7E  44                  1422  	LSRA			SO WE
2A7F  44                  1423  	LSRA			CAN CONVERT TO
2A80  44                  1424  	LSRA			ASCII HEX
2A81  8D 02               1425  	BSR	OUTASC		OUTPUT
2A83  35 02               1426  	PULS	A		RESTORE A VALUE
2A85  84 0F               1427  OUTASC	ANDA	#$0F		REMOVE ANY GARBAGE
2A87  8B 30               1428  	ADDA	#$30		CONVERT TO ASCII
2A89  81 39               1429  	CMPA	#$39		IS IT MORE?
2A8B  23 02               1430  	BLS	WRICHR		IF NOT, WRITE OUT CHARACTER
2A8D  8B 07               1431  	ADDA	#$7		CONVERT TO ASCII
2A8F                      1432  *
2A8F                      1433  * WRITE A CHARACTER TO THE OUTPUT FILE
2A8F                      1434  *
2A8F  34 42               1435  WRICHR	PSHS	A,U		SAVE REGISTERS
2A91  7D 31 86            1436  	TST	ERR		ARE WE OUTPUTING ERROR MSGS ONLY?
2A94  26 04               1437  	BNE	NOROUT		NORMAL OUTPUT
2A96  0D 15               1438  	TST	EMSG		HAS THERE BEEN AN ERROR?
2A98  27 0F               1439  	BEQ	STLST		IF NOT, QUIT
2A9A  7D 31 84            1440  NOROUT	TST	TERM		IS IT TERMINAL OUTPUT
2A9D  26 0C               1441  	BNE	LSTOUT		NO, OUTPUT TO LISTING
2A9F  3F                  1442  	SWI			SOFTWARE INTERRUPT TO DOS
2AA0  21                  1443  	FCB	33		SYSTEM REQUEST NUMBER
2AA1  81 0D               1444  	CMPA	#$0D		CARRIAGE RETURN?
2AA3  26 04               1445  	BNE	STLST		OUTPUT
2AA5  86 0A               1446  	LDA	#$0A		GET LINE FEED
2AA7  3F                  1447  	SWI			SOFTWARE INTERRUPT TO DOS
2AA8  21                  1448  	FCB	33		SYSTEM REQUEST NUMBER
2AA9  35 C2               1449  STLST	PULS	A,U,PC		RESTORE REGISTERS
2AAB  CE 43 63            1450  LSTOUT	LDU	#LSTFIL
2AAE  3F                  1451  	SWI			SOFTWARE INTERRUPT TO DOS
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 26

2AAF  3D                  1452  	FCB	61		SYSTEM REQUEST NUMBER
2AB0  10 26 FB C6         1453  	LBNE	ABORT		ERROR
2AB4  35 C2               1454  	PULS	A,U,PC		RESTORE X AND PC
2AB6                      1455  *
2AB6                      1456  * WRITE DECIMAL VALUE OF D TO OUTPUT FILE
2AB6                      1457  *
2AB6  34 36               1458  WRIDEC	PSHS	A,B,X,Y		SAVE X-Y REGISTERS
2AB8  10 8E 00 00         1459  	LDY	#0		START WITH ZERO CHARACTERS
2ABC  1F 01               1460  	TFR	D,X		SET UP STARTING VALUE
2ABE  CC 00 0A            1461  WRDE1	LDD	#10		DIVIDE BY 10
2AC1  3F                  1462  	SWI			SOFTWARE INTERRUPT TO DOS
2AC2  6C                  1463  	FCB	108		SYSTEM REQUEST NUMBER
2AC3  34 04               1464  	PSHS	B		SAVE REMAINDER
2AC5  31 21               1465  	LEAY	1,Y		INDICATE ANOTHER ON STACK
2AC7  8C 00 00            1466  	CMPX	#0		ANY MORE?
2ACA  26 F2               1467  	BNE	WRDE1		NO, CONTINUE
2ACC  35 02               1468  WRDE2	PULS	A		GET DIGIT BACK
2ACE  8B 30               1469  	ADDA	#'0'		CONVERT TO PRINTABLE FORM
2AD0  17 FF BC            1470  	LBSR	WRICHR		DISPLAY DECIMAL DIGIT
2AD3  31 3F               1471  	LEAY	-1,Y		REDUCE COUNT
2AD5  26 F5               1472  	BNE	WRDE2		IF NOT END, CONTINUE DISPLAYING
2AD7  35 B6               1473  	PULS	A,B,X,Y,PC	RESTORE INDEX REG'S
2AD9                      1474  *
2AD9                      1475  * READS A CHARACTER FROM THE INPUT FILE
2AD9                      1476  *
2AD9  34 40               1477  RDINP	PSHS	U		SAVE REGISTERS
2ADB  CE 41 59            1478  	LDU	#INFIL
2ADE  3F                  1479  	SWI			SOFTWARE INTERRUPT TO DOS
2ADF  3B                  1480  	FCB	59		SYSTEM REQUEST NUMBER
2AE0  35 C0               1481  	PULS	U,PC		GO HOME
2AE2                      1482  *
2AE2                      1483  * WRITES A BYTE TO THE OBJECT FILE
2AE2                      1484  *
2AE2  81 CF               1485  WRIOBB	CMPA	#$CF		SPECIAL CASE?
2AE4  26 02               1486  	BNE	WRIOBJ		NO, OUTPUT IT
2AE6  8D 00               1487  	BSR	WRIOBJ		IF SPECIAL CASE, WRITE IT TWICE
2AE8                      1488  *
2AE8                      1489  * WRITE A CHARACTER TO THE OBJECT FILE
2AE8                      1490  *
2AE8  34 42               1491  WRIOBJ	PSHS	A,U		SAVE REGISTERS
2AEA  CE 45 6D            1492  	LDU	#OBJFIL
2AED  3F                  1493  	SWI			SOFTWARE INTERRUPT TO DOS
2AEE  3D                  1494  	FCB	61		SYSTEM REQUEST NUMBER
2AEF  10 26 FB 87         1495  	LBNE	ABORT		ERROR
2AF3  35 C2               1496  	PULS	A,U,PC		RESTORE X AND PC
2AF5                      1497  *
2AF5                      1498  * DISPLAY TITLE IF NESSARY
2AF5                      1499  *
2AF5  0A 12               1500  DSPTTL	DEC	PAGLIN		ARE WE BELOW?
2AF7  2A 39               1501  	BPL	NTTL		DON'T DISPLAY TITLE
2AF9  86 37               1502  	LDA	#55		LINES/PAGE
2AFB  97 12               1503  	STA	PAGLIN		SO WE WON'T FORGET
2AFD  8E 2B 77            1504  	LDX	#PAGM1		POINT TO FIRST MESSAGE
2B00  17 FF 6F            1505  	LBSR	WRIMSG		OUTPUT TO FILE
2B03  8E 40 19            1506  	LDX	#TITLE		POINT TO TITLE SPACE
2B06  C6 3C               1507  	LDB	#60		NUMBER OF SPACES REMAINING
2B08  A6 80               1508  WRTTL	LDA	,X+		GET CHARACTER FROM LINE
2B0A  81 0D               1509  	CMPA	#$0D		END OF TITLE?
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 27

2B0C  27 06               1510  	BEQ	ENTTL		IF SO, QUIT
2B0E  17 FF 7E            1511  	LBSR	WRICHR		OUTPUT
2B11  5A                  1512  	DECB			REDUCE COUNT
2B12  26 F4               1513  	BNE	WRTTL		KEEP DISPLAYING
2B14  17 FF 53            1514  ENTTL	LBSR	SPACE		DISPLAY A SPACE
2B17  5A                  1515  	DECB			REDUCE COUNT
2B18  2A FA               1516  	BPL	ENTTL		AND KEEP DISPLAYING
2B1A  8E 2B 8A            1517  	LDX	#PAGM2		NEXT MESSAGE
2B1D  17 FF 52            1518  	LBSR	WRIMSG		OUTPUT
2B20  DC 10               1519  	LDD	PAGE		GET CURRENT PAGE NUMBER
2B22  C3 00 01            1520  	ADDD	#1		ADD ONE
2B25  DD 10               1521  	STD	PAGE		RESAVE
2B27  17 FF 8C            1522  	LBSR	WRIDEC		OUTPUT
2B2A  86 0D               1523  	LDA	#$0D		NEW LINE
2B2C  17 FF 60            1524  	LBSR	WRICHR		OUTPUT
2B2F  17 FF 5D            1525  	LBSR	WRICHR		AND A BLANK LINE
2B32  39                  1526  NTTL	RTS
2B33                      1527  * INFORMATIONAL MESSAGES
2B33  20 2A 45 52 52 4F + 1528  EMSG1	FCCZ	' *ERROR* #'
2B3E  30 20 2D 20 44 55 + 1529  DUPSYM	FCCZ	'0 - DUPLICATE SYMBOL: '
2B55  20 2D 20 00         1530  EMSG2	FCCZ	' - '
2B59  54 4F 54 41 4C 20 + 1531  ERRSUM	FCCZ	'TOTAL ERRORS: '
2B68  53 59 4D 42 4F 4C + 1532  SYMMSG	FCC	'SYMBOL TABLE:'
2B75  0D 00               1533  	FCB	$0D,0
2B77  0C                  1534  PAGM1	FCB	$0C		FORM FEED CHARACTER
2B78  36 38 30 39 20 41 + 1535  	FCCZ	'6809 ASSEMBLER : '
2B8A  50 41 47 45 3A 20 + 1536  PAGM2	FCCZ	'PAGE: '
2B91                      1537  * ERROR MESSAGES
2B91  00                  1538  ERRMSG	FCB	0		DUMMY BYTE TO START OFF SEARCH
2B92  55 6E 6B 6E 6F 77 + 1539  	FCCZ	'Unknown opcode or directive''
2BAE  41 64 64 72 65 73 + 1540  	FCCZ	'Address out of range'
2BC3  49 6E 76 61 6C 69 + 1541  	FCCZ	'Invalid addressing mode'
2BDB  49 6E 76 61 6C 69 + 1542  	FCCZ	'Invalid register specification'
2BFA  55 6E 64 65 66 69 + 1543  	FCCZ	'Undefined symbol'
2C0B  49 6E 76 61 6C 69 + 1544  	FCCZ	'Invalid expression syntax'
2C25  49 6E 76 61 6C 69 + 1545  	FCCZ	'Invalid argument format'
2C3D  49 6D 70 72 6F 70 + 1546  	FCCZ	'Improperly delimited string'
2C59                      1547  *
2C59                      1548  * 6809 INSTRUCTIONS
2C59                      1549  *
2C59  4C 42 53 52         1550  INSTAB	FCC	'LBSR'
2C5D  88 17 CF CF CF      1551  	FCB	$88,$17,$CF,$CF,$CF
2C62  4C 44 41            1552  	FCC	'LDA'
2C65  82 86 96 A6 B6      1553  	FCB	$82,$86,$96,$A6,$B6
2C6A  43 4D 50 41         1554  	FCC	'CMPA'
2C6E  82 81 91 A1 B1      1555  	FCB	$82,$81,$91,$A1,$B1
2C73  42 4E 45            1556  	FCC	'BNE'
2C76  86 26 CF CF CF      1557  	FCB	$86,$26,$CF,$CF,$CF
2C7B  42 45 51            1558  	FCC	'BEQ'
2C7E  86 27 CF CF CF      1559  	FCB	$86,$27,$CF,$CF,$CF
2C83  42 52 41            1560  	FCC	'BRA'
2C86  86 20 CF CF CF      1561  	FCB	$86,$20,$CF,$CF,$CF
2C8B  4C 44 58            1562  	FCC	'LDX'
2C8E  83 8E 9E AE BE      1563  	FCB	$83,$8E,$9E,$AE,$BE
2C93  4C 44 42            1564  	FCC	'LDB'
2C96  82 C6 D6 E6 F6      1565  	FCB	$82,$C6,$D6,$E6,$F6
2C9B  4C 44 44            1566  	FCC	'LDD'
2C9E  83 CC DC EC FC      1567  	FCB	$83,$CC,$DC,$EC,$FC
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 28

2CA3  53 54 41            1568  	FCC	'STA'
2CA6  82 CF 97 A7 B7      1569  	FCB	$82,$CF,$97,$A7,$B7
2CAB  53 54 42            1570  	FCC	'STB'
2CAE  82 CF D7 E7 F7      1571  	FCB	$82,$CF,$D7,$E7,$F7
2CB3  53 54 44            1572  	FCC	'STD'
2CB6  83 CF DD ED FD      1573  	FCB	$83,$CF,$DD,$ED,$FD
2CBB  53 54 58            1574  	FCC	'STX'
2CBE  83 CF 9F AF BF      1575  	FCB	$83,$CF,$9F,$AF,$BF
2CC3  44 45 43 41         1576  	FCC	'DECA'
2CC7  81 4A 00 00 00      1577  	FCB	$81,$4A,0,0,0
2CCC  44 45 43 42         1578  	FCC	'DECB'
2CD0  81 5A 00 00 00      1579  	FCB	$81,$5A,0,0,0
2CD5  49 4E 43 41         1580  	FCC	'INCA'
2CD9  81 4C 00 00 00      1581  	FCB	$81,$4C,0,0,0
2CDE  49 4E 43 42         1582  	FCC	'INCB'
2CE2  81 5C 00 00 00      1583  	FCB	$81,$5C,0,0,0
2CE7  4C 44 59            1584  	FCC	'LDY'
2CEA  84 8E 9E AE BE      1585  	FCB	$84,$8E,$9E,$AE,$BE
2CEF  4C 42 52 41         1586  	FCC	'LBRA'
2CF3  88 16 CF CF CF      1587  	FCB	$88,$16,$CF,$CF,$CF
2CF8  50 55 4C 53         1588  	FCC	'PULS'
2CFC  89 35 CF CF CF      1589  	FCB	$89,$35,$CF,$CF,$CF
2D01  50 55 4C 55         1590  	FCC	'PULU'
2D05  89 37 CF CF CF      1591  	FCB	$89,$37,$CF,$CF,$CF
2D0A  50 53 48 53         1592  	FCC	'PSHS'
2D0E  89 34 CF CF CF      1593  	FCB	$89,$34,$CF,$CF,$CF
2D13  50 53 48 55         1594  	FCC	'PSHU'
2D17  89 36 CF CF CF      1595  	FCB	$89,$36,$CF,$CF,$CF
2D1C  52 54 53            1596  	FCC	'RTS'
2D1F  81 39 00 00 00      1597  	FCB	$81,$39,0,0,0
2D24  54 46 52            1598  	FCC	'TFR'
2D27  8A 1F CF CF CF      1599  	FCB	$8A,$1F,$CF,$CF,$CF
2D2C  53 53 52            1600  	FCC	'SSR'
2D2F  92 3F 00 00 00      1601  	FCB	$92,$3F,0,0,0
2D34  46 43 42            1602  	FCC	'FCB'
2D37  8E 00 00 00 00      1603  	FCB	$8E,0,0,0,0
2D3C  46 44 42            1604  	FCC	'FDB'
2D3F  8F 00 00 00 00      1605  	FCB	$8F,0,0,0,0
2D44  46 43 43            1606  	FCC	'FCC'
2D47  90 00 00 00 00      1607  	FCB	$90,0,0,0,0
2D4C  46 43 43 5A         1608  	FCC	'FCCZ'
2D50  91 00 00 00 00      1609  	FCB	$91,0,0,0,0
2D55  41 53 4C 41         1610  	FCC	'ASLA'
2D59  81 48 00 00 00      1611  	FCB	$81,$48,0,0,0
2D5E  41 53 4C 42         1612  	FCC	'ASLB'
2D62  81 58 00 00 00      1613  	FCB	$81,$58,0,0,0
2D67  41 53 52 41         1614  	FCC	'ASRA'
2D6B  81 47 00 00 00      1615  	FCB	$81,$47,0,0,0
2D70  41 53 52 42         1616  	FCC	'ASRB'
2D74  81 57 00 00 00      1617  	FCB	$81,$57,0,0,0
2D79  43 4C 52 41         1618  	FCC	'CLRA'
2D7D  81 4F 00 00 00      1619  	FCB	$81,$4F,0,0,0
2D82  43 4C 52 42         1620  	FCC	'CLRB'
2D86  81 5F 00 00 00      1621  	FCB	$81,$5F,0,0,0
2D8B  43 4F 4D 41         1622  	FCC	'COMA'
2D8F  81 43 00 00 00      1623  	FCB	$81,$43,0,0,0
2D94  43 4F 4D 42         1624  	FCC	'COMB'
2D98  81 53 00 00 00      1625  	FCB	$81,$53,0,0,0
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 29

2D9D  44 41 41            1626  	FCC	'DAA'
2DA0  81 19 00 00 00      1627  	FCB	$81,$19,0,0,0
2DA5  4C 53 4C 41         1628  	FCC	'LSLA'
2DA9  81 48 00 00 00      1629  	FCB	$81,$48,0,0,0
2DAE  4C 53 4C 42         1630  	FCC	'LSLB'
2DB2  81 58 00 00 00      1631  	FCB	$81,$58,0,0,0
2DB7  4C 53 52 41         1632  	FCC	'LSRA'
2DBB  81 44 00 00 00      1633  	FCB	$81,$44,0,0,0
2DC0  4C 53 52 42         1634  	FCC	'LSRB'
2DC4  81 54 00 00 00      1635  	FCB	$81,$54,0,0,0
2DC9  4D 55 4C            1636  	FCC	'MUL'
2DCC  81 3D 00 00 00      1637  	FCB	$81,$3D,0,0,0
2DD1  4E 45 47 41         1638  	FCC	'NEGA'
2DD5  81 40 00 00 00      1639  	FCB	$81,$40,0,0,0
2DDA  4E 45 47 42         1640  	FCC	'NEGB'
2DDE  81 50 00 00 00      1641  	FCB	$81,$50,0,0,0
2DE3  52 4F 4C 41         1642  	FCC	'ROLA'
2DE7  81 49 00 00 00      1643  	FCB	$81,$49,0,0,0
2DEC  52 4F 4C 42         1644  	FCC	'ROLB'
2DF0  81 59 00 00 00      1645  	FCB	$81,$59,0,0,0
2DF5  52 4F 52 41         1646  	FCC	'RORA'
2DF9  81 46 00 00 00      1647  	FCB	$81,$46,0,0,0
2DFE  52 4F 52 42         1648  	FCC	'RORB'
2E02  81 56 00 00 00      1649  	FCB	$81,$56,0,0,0
2E07  52 54 49            1650  	FCC	'RTI'
2E0A  81 3B 00 00 00      1651  	FCB	$81,$3B,0,0,0
2E0F  53 45 58            1652  	FCC	'SEX'
2E12  81 1D 00 00 00      1653  	FCB	$81,$1D,0,0,0
2E17  53 57 49            1654  	FCC	'SWI'
2E1A  81 3F 00 00 00      1655  	FCB	$81,$3F,0,0,0
2E1F  53 57 49 32         1656  	FCC	'SWI2'
2E23  81 10 3F 00 00      1657  	FCB	$81,$10,$3F,0,0
2E28  53 57 49 33         1658  	FCC	'SWI3'
2E2C  81 11 3F 00 00      1659  	FCB	$81,$11,$3F,0,0
2E31  53 59 4E 43         1660  	FCC	'SYNC'
2E35  81 13 00 00 00      1661  	FCB	$81,$13,0,0,0
2E3A  54 53 54 41         1662  	FCC	'TSTA'
2E3E  81 4D 00 00 00      1663  	FCB	$81,$4D,0,0,0
2E43  54 53 54 42         1664  	FCC	'TSTB'
2E47  81 5D 00 00 00      1665  	FCB	$81,$5D,0,0,0
2E4C  41 44 43 41         1666  	FCC	'ADCA'
2E50  82 89 99 A9 B9      1667  	FCB	$82,$89,$99,$A9,$B9
2E55  41 44 43 42         1668  	FCC	'ADCB'
2E59  82 C9 D9 E9 F9      1669  	FCB	$82,$C9,$D9,$E9,$F9
2E5E  41 44 44 41         1670  	FCC	'ADDA'
2E62  82 8B 9B AB BB      1671  	FCB	$82,$8B,$9B,$AB,$BB
2E67  41 44 44 42         1672  	FCC	'ADDB'
2E6B  82 CB DB EB FB      1673  	FCB	$82,$CB,$DB,$EB,$FB
2E70  41 44 44 44         1674  	FCC	'ADDD'
2E74  83 C3 D3 E3 F3      1675  	FCB	$83,$C3,$D3,$E3,$F3
2E79  41 4E 44 41         1676  	FCC	'ANDA'
2E7D  82 84 94 A4 B4      1677  	FCB	$82,$84,$94,$A4,$B4
2E82  41 4E 44 42         1678  	FCC	'ANDB'
2E86  82 C4 D4 E4 F4      1679  	FCB	$82,$C4,$D4,$E4,$F4
2E8B  41 4E 44 43 43      1680  	FCC	'ANDCC'
2E90  82 1C CF CF CF      1681  	FCB	$82,$1C,$CF,$CF,$CF
2E95  41 53 4C            1682  	FCC	'ASL'
2E98  82 CF 08 68 78      1683  	FCB	$82,$CF,$08,$68,$78
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 30

2E9D  41 53 52            1684  	FCC	'ASR'
2EA0  82 CF 07 67 77      1685  	FCB	$82,$CF,$07,$67,$77
2EA5  42 49 54 41         1686  	FCC	'BITA'
2EA9  82 85 95 A5 B5      1687  	FCB	$82,$85,$95,$A5,$B5
2EAE  42 49 54 42         1688  	FCC	'BITB'
2EB2  82 C5 D5 E5 F5      1689  	FCB	$82,$C5,$D5,$E5,$F5
2EB7  43 4C 52            1690  	FCC	'CLR'
2EBA  82 CF 0F 6F 7F      1691  	FCB	$82,$CF,$0F,$6F,$7F
2EBF  43 4D 50 42         1692  	FCC	'CMPB'
2EC3  82 C1 D1 E1 F1      1693  	FCB	$82,$C1,$D1,$E1,$F1
2EC8  43 4D 50 58         1694  	FCC	'CMPX'
2ECC  83 8C 9C AC BC      1695  	FCB	$83,$8C,$9C,$AC,$BC
2ED1  43 4F 4D            1696  	FCC	'COM'
2ED4  82 CF 03 63 73      1697  	FCB	$82,$CF,$03,$63,$73
2ED9  43 57 41 49         1698  	FCC	'CWAI'
2EDD  82 3C CF CF CF      1699  	FCB	$82,$3C,$CF,$CF,$CF
2EE2  44 45 43            1700  	FCC	'DEC'
2EE5  82 CF 0A 6A 7A      1701  	FCB	$82,$CF,$0A,$6A,$7A
2EEA  45 4F 52 41         1702  	FCC	'EORA'
2EEE  82 88 98 A8 B8      1703  	FCB	$82,$88,$98,$A8,$B8
2EF3  45 4F 52 42         1704  	FCC	'EORB'
2EF7  82 C8 D8 E8 F8      1705  	FCB	$82,$C8,$D8,$E8,$F8
2EFC  49 4E 43            1706  	FCC	'INC'
2EFF  82 CF 0C 6C 7C      1707  	FCB	$82,$CF,$0C,$6C,$7C
2F04  4A 4D 50            1708  	FCC	'JMP'
2F07  83 CF 0E 6E 7E      1709  	FCB	$83,$CF,$0E,$6E,$7E
2F0C  4A 53 52            1710  	FCC	'JSR'
2F0F  83 CF 9D AD BD      1711  	FCB	$83,$CF,$9D,$AD,$BD
2F14  4C 44 55            1712  	FCC	'LDU'
2F17  83 CE DE EE FE      1713  	FCB	$83,$CE,$DE,$EE,$FE
2F1C  4C 45 41 53         1714  	FCC	'LEAS'
2F20  82 CF CF 32 CF      1715  	FCB	$82,$CF,$CF,$32,$CF
2F25  4C 45 41 55         1716  	FCC	'LEAU'
2F29  82 CF CF 33 CF      1717  	FCB	$82,$CF,$CF,$33,$CF
2F2E  4C 45 41 58         1718  	FCC	'LEAX'
2F32  82 CF CF 30 CF      1719  	FCB	$82,$CF,$CF,$30,$CF
2F37  4C 45 41 59         1720  	FCC	'LEAY'
2F3B  82 CF CF 31 CF      1721  	FCB	$82,$CF,$CF,$31,$CF
2F40  4C 53 4C            1722  	FCC	'LSL'
2F43  82 CF 08 68 78      1723  	FCB	$82,$CF,$08,$68,$78
2F48  4C 53 52            1724  	FCC	'LSR'
2F4B  82 CF 04 64 74      1725  	FCB	$82,$CF,$04,$64,$74
2F50  4E 45 47            1726  	FCC	'NEG'
2F53  82 CF 00 60 70      1727  	FCB	$82,$CF,$00,$60,$70
2F58  4F 52 41            1728  	FCC	'ORA'
2F5B  82 8A 9A AA BA      1729  	FCB	$82,$8A,$9A,$AA,$BA
2F60  4F 52 42            1730  	FCC	'ORB'
2F63  82 CA DA EA FA      1731  	FCB	$82,$CA,$DA,$EA,$FA
2F68  4F 52 43 43         1732  	FCC	'ORCC'
2F6C  82 1A CF CF CF      1733  	FCB	$82,$1A,$CF,$CF,$CF
2F71  52 4F 4C            1734  	FCC	'ROL'
2F74  82 CF 09 69 79      1735  	FCB	$82,$CF,$09,$69,$79
2F79  52 4F 52            1736  	FCC	'ROR'
2F7C  82 CF 06 66 76      1737  	FCB	$82,$CF,$06,$66,$76
2F81  53 42 43 41         1738  	FCC	'SBCA'
2F85  82 82 92 A2 B2      1739  	FCB	$82,$82,$92,$A2,$B2
2F8A  53 42 43 42         1740  	FCC	'SBCB'
2F8E  82 C2 D2 E2 F2      1741  	FCB	$82,$C2,$D2,$E2,$F2
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 31

2F93  53 54 55            1742  	FCC	'STU'
2F96  83 CF DF EF FF      1743  	FCB	$83,$CF,$DF,$EF,$FF
2F9B  53 55 42 41         1744  	FCC	'SUBA'
2F9F  82 80 90 A0 B0      1745  	FCB	$82,$80,$90,$A0,$B0
2FA4  53 55 42 42         1746  	FCC	'SUBB'
2FA8  82 C0 D0 E0 F0      1747  	FCB	$82,$C0,$D0,$E0,$F0
2FAD  53 55 42 44         1748  	FCC	'SUBD'
2FB1  83 83 93 A3 B3      1749  	FCB	$83,$83,$93,$A3,$B3
2FB6  54 53 54            1750  	FCC	'TST'
2FB9  82 CF 0D 6D 7D      1751  	FCB	$82,$CF,$0D,$6D,$7D
2FBE  43 4D 50 44         1752  	FCC	'CMPD'
2FC2  84 83 93 A3 B3      1753  	FCB	$84,$83,$93,$A3,$B3
2FC7  43 4D 50 59         1754  	FCC	'CMPY'
2FCB  84 8C 9C AC BC      1755  	FCB	$84,$8C,$9C,$AC,$BC
2FD0  43 4D 50 53         1756  	FCC	'CMPS'
2FD4  85 8C 9C AC BC      1757  	FCB	$85,$8C,$9C,$AC,$BC
2FD9  43 4D 50 55         1758  	FCC	'CMPU'
2FDD  85 83 93 A3 B3      1759  	FCB	$85,$83,$93,$A3,$B3
2FE2  4C 44 53            1760  	FCC	'LDS'
2FE5  84 CE DE EE FE      1761  	FCB	$84,$CE,$DE,$EE,$FE
2FEA  53 54 53            1762  	FCC	'STS'
2FED  84 CF DF EF FF      1763  	FCB	$84,$CF,$DF,$EF,$FF
2FF2  53 54 59            1764  	FCC	'STY'
2FF5  84 CF 9F AF BF      1765  	FCB	$84,$CF,$9F,$AF,$BF
2FFA  42 52 4E            1766  	FCC	'BRN'
2FFD  86 21 CF CF CF      1767  	FCB	$86,$21,$CF,$CF,$CF
3002  42 48 49            1768  	FCC	'BHI'
3005  86 22 CF CF CF      1769  	FCB	$86,$22,$CF,$CF,$CF
300A  42 4C 53            1770  	FCC	'BLS'
300D  86 23 CF CF CF      1771  	FCB	$86,$23,$CF,$CF,$CF
3012  42 48 53            1772  	FCC	'BHS'
3015  86 24 CF CF CF      1773  	FCB	$86,$24,$CF,$CF,$CF
301A  42 43 43            1774  	FCC	'BCC'
301D  86 24 CF CF CF      1775  	FCB	$86,$24,$CF,$CF,$CF
3022  42 4C 4F            1776  	FCC	'BLO'
3025  86 25 CF CF CF      1777  	FCB	$86,$25,$CF,$CF,$CF
302A  42 43 53            1778  	FCC	'BCS'
302D  86 25 CF CF CF      1779  	FCB	$86,$25,$CF,$CF,$CF
3032  42 56 43            1780  	FCC	'BVC'
3035  86 28 CF CF CF      1781  	FCB	$86,$28,$CF,$CF,$CF
303A  42 56 53            1782  	FCC	'BVS'
303D  86 29 CF CF CF      1783  	FCB	$86,$29,$CF,$CF,$CF
3042  42 50 4C            1784  	FCC	'BPL'
3045  86 2A CF CF CF      1785  	FCB	$86,$2A,$CF,$CF,$CF
304A  42 4D 49            1786  	FCC	'BMI'
304D  86 2B CF CF CF      1787  	FCB	$86,$2B,$CF,$CF,$CF
3052  42 47 45            1788  	FCC	'BGE'
3055  86 2C CF CF CF      1789  	FCB	$86,$2C,$CF,$CF,$CF
305A  42 4C 54            1790  	FCC	'BLT'
305D  86 2D CF CF CF      1791  	FCB	$86,$2D,$CF,$CF,$CF
3062  42 47 54            1792  	FCC	'BGT'
3065  86 2E CF CF CF      1793  	FCB	$86,$2E,$CF,$CF,$CF
306A  42 4C 45            1794  	FCC	'BLE'
306D  86 2F CF CF CF      1795  	FCB	$86,$2F,$CF,$CF,$CF
3072  42 53 52            1796  	FCC	'BSR'
3075  86 8D CF CF CF      1797  	FCB	$86,$8D,$CF,$CF,$CF
307A  4C 42 52 4E         1798  	FCC	'LBRN'
307E  87 10 21 CF CF      1799  	FCB	$87,$10,$21,$CF,$CF
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 32

3083  4C 42 48 49         1800  	FCC	'LBHI'
3087  87 10 22 CF CF      1801  	FCB	$87,$10,$22,$CF,$CF
308C  4C 42 4C 53         1802  	FCC	'LBLS'
3090  87 10 23 CF CF      1803  	FCB	$87,$10,$23,$CF,$CF
3095  4C 42 48 53         1804  	FCC	'LBHS'
3099  87 10 24 CF CF      1805  	FCB	$87,$10,$24,$CF,$CF
309E  4C 42 43 43         1806  	FCC	'LBCC'
30A2  87 10 24 CF CF      1807  	FCB	$87,$10,$24,$CF,$CF
30A7  4C 42 4C 4F         1808  	FCC	'LBLO'
30AB  87 10 25 CF CF      1809  	FCB	$87,$10,$25,$CF,$CF
30B0  4C 42 43 53         1810  	FCC	'LBCS'
30B4  87 10 25 CF CF      1811  	FCB	$87,$10,$25,$CF,$CF
30B9  4C 42 4E 45         1812  	FCC	'LBNE'
30BD  87 10 26 CF CF      1813  	FCB	$87,$10,$26,$CF,$CF
30C2  4C 42 45 51         1814  	FCC	'LBEQ'
30C6  87 10 27 CF CF      1815  	FCB	$87,$10,$27,$CF,$CF
30CB  4C 42 56 43         1816  	FCC	'LBVC'
30CF  87 10 28 CF CF      1817  	FCB	$87,$10,$28,$CF,$CF
30D4  4C 42 56 53         1818  	FCC	'LBVS'
30D8  87 10 29 CF CF      1819  	FCB	$87,$10,$29,$CF,$CF
30DD  4C 42 50 4C         1820  	FCC	'LBPL'
30E1  87 10 2A CF CF      1821  	FCB	$87,$10,$2A,$CF,$CF
30E6  4C 42 4D 49         1822  	FCC	'LBMI'
30EA  87 10 2B CF CF      1823  	FCB	$87,$10,$2B,$CF,$CF
30EF  4C 42 47 45         1824  	FCC	'LBGE'
30F3  87 10 2C CF CF      1825  	FCB	$87,$10,$2C,$CF,$CF
30F8  4C 42 4C 54         1826  	FCC	'LBLT'
30FC  87 10 2D CF CF      1827  	FCB	$87,$10,$2D,$CF,$CF
3101  4C 42 47 54         1828  	FCC	'LBGT'
3105  87 10 2E CF CF      1829  	FCB	$87,$10,$2E,$CF,$CF
310A  4C 42 4C 45         1830  	FCC	'LBLE'
310E  87 10 2F CF CF      1831  	FCB	$87,$10,$2F,$CF,$CF
3113  45 58 47            1832  	FCC	'EXG'
3116  8A 1E CF CF CF      1833  	FCB	$8A,$1E,$CF,$CF,$CF
311B  45 51 55            1834  	FCC	'EQU'
311E  8B 00 00 00 00      1835  	FCB	$8B,0,0,0,0
3123  4F 52 47            1836  	FCC	'ORG'
3126  8C 00 00 00 00      1837  	FCB	$8C,0,0,0,0
312B  52 4D 42            1838  	FCC	'RMB'
312E  8D 00 00 00 00      1839  	FCB	$8D,0,0,0,0
3133  53 45 54 44 50      1840  	FCC	'SETDP'
3138  93 00 00 00 00      1841  	FCB	$93,0,0,0,0
313D  41 42 58            1842  	FCC	'ABX'
3140  81 3A 00 00 00      1843  	FCB	$81,$3A,0,0,0
3145  4E 4F 50            1844  	FCC	'NOP'
3148  81 12 00 00 00      1845  	FCB	$81,$12,0,0,0
314D  50 41 47 45         1846  	FCC	'PAGE'
3151  94 00 00 00 00      1847  	FCB	$94,0,0,0,0
3156  54 49 54 4C 45      1848  	FCC	'TITLE'
315B  95 00 00 00 00      1849  	FCB	$95,0,0,0,0
3160  00                  1850  	FCB	0		END OF TABLE
3161                      1851  *
3161                      1852  * QUALIFIER TABLE
3161                      1853  *
3161  82                  1854  QTABLE	FCB	$82
3162  2F 54 45 52 4D      1855  	FCC	'/TERM'
3167  82                  1856  	FCB	$82
3168  2F 46 41 53 54      1857  	FCC	'/FAST'
DUNFIELD 6809 ASSEMBLER: RESIDENT 6809 ASSEMBLER                      PAGE: 33

316D  82                  1858  	FCB	$82
316E  2F 45 52 52 4F 52   1859  	FCC	'/ERROR'
3174  82                  1860  	FCB	$82
3175  2F 53 59 4D 42 4F + 1861  	FCC	'/SYMBOL'
317C  82                  1862  	FCB	$82
317D  2F 51 55 49 45 54   1863  	FCC	'/QUIET'
3183  80                  1864  	FCB	$80
0005                      1865  QMAX	EQU	5		NUMBER OF QUALIFIERS
3184                      1866  * QUALIFIER FLAG TABLE
3184  FF                  1867  TERM	FCB	$FF		FLAG FOR NO LISTING
3185  FF                  1868  DEBUG	FCB	$FF		DEBUGGING FLAG
3186  FF                  1869  ERR	FCB	$FF		ERROR ONLY OUTPUT FLAG
3187  FF                  1870  SYM	FCB	$FF		SYMBOL TABLE OUTPUT
3188  FF                  1871  QUIET	FCB	$FF
