DUNFIELD 6809 ASSEMBLER: D:PED                                        PAGE: 1

0000                         1  *
0000                         2  * SYSTEM MEMORY LOCATIONS FOR USE BY APPLICATION PROGRAMS
0000                         3  *
2000                         4  OSRAM	EQU	$2000		USER APPLICATION RAM STARTS HEDE
DBFF                         5  OSEND	EQU	$DBFF		LAST LOCATION OF USER (NON-SYSTEM) RAM
D000                         6  OSUTIL	EQU	$D000		RAM FOR UTILITY PROGRAM USAGE
0000                         7  *
0000                         9  *
0000                        10  * PED: Version of 'ED' for my homebrew portable
0000                        11  *
0000                        12  * Copyright 1983-2005 Dave Dunfield
0000                        13  * All rights reserved.
0000                        14  *
3F00                        15  TEXT	EQU	OSRAM+$1F00	START OF TEXT BUFFER
3EFF                        16  STACK	EQU	TEXT-1		EDITOR STACK
0017                        17  NLINES	EQU	23		# LINES - 1
0000                        18  *
0000                        19  * TEMPORARY STORAGE
0000                        20  *
2800                        21  	ORG	OSRAM+$800
2800                        22  XPOS	RMB	1		CURSOR X POSITION
2801                        23  YPOS	RMB	1		CURSOR Y POSITION
2802                        24  TXTPOS	RMB	2		SCREEN TOP POSITION
2804                        25  OLDPOS	RMB	1		OLD CURSOR POSITION
2805                        26  CURFLG	RMB	1		CURSOR FLAG
2806                        27  INSFLG	RMB	1		INSERT CHARACTER FLAG
2807                        28  TEMP	RMB	2		TEMPORARY STORAGE
2809                        29  SNRPOS	RMB	2		POSITION IN SNARF BUFFER
280B                        30  NAMBUF	RMB	25		SAVED FILENAME
2824                        31  INPBUF	RMB	64		LOTSA SPACE FOR SEARCH
2864                        32  DLBUF	EQU	*		LINE DELETE BUFFER
2900                        33  	ORG	XPOS+256
2900                        34  SNARF	EQU	*		BUFFER FOR DELETE TO BUFFER
2000                        35  	ORG	OSRAM
2000                        36  *
2000                        37  * INITIALIZATION AND STARTUP CODE
2000                        38  *
2000  10 CE 3E FF           39  EDIT	LDS	#STACK		SET UP STACK
2004  81 3F                 40  	CMPA	#'?'		QUERY OPERATION?
2006  26 13                 41  	BNE	EDIT1		NO, ITS OK
2008  3F                    42  	SWI			SOFTWARE INTERRUPT TO DOS
2009  19                    43  	FCB	25		SYSTEM REQUEST NUMBER
200A  55 73 65 3A 20 45 +   44  	FCCZ	'Use: ED <file>'
2019  3F                    45  	SWI			SOFTWARE INTERRUPT TO DOS
201A  00                    46  	FCB	0		SYSTEM REQUEST NUMBER
201B  86 28                 47  EDIT1	LDA	#=XPOS		POSITION
201D  1F 8B                 48  	TFR	A,DP		SET DIRECT PAGE
201F                        49  	SETDP	=XPOS		INFORM ASSEMBLER
201F                        50  * SAVE FILENAME
201F  8E 28 0B              51  	LDX	#NAMBUF		POINT TO NAME BUFFER
2022  A6 A0                 52  SAVNAM	LDA	,Y+		GET CHARACTER FROM INPUT LINE
2024  A7 80                 53  	STA	,X+		SAVE IN FILE BUFFER
2026  81 0D                 54  	CMPA	#$0D		TEST FOR END OF LINE
2028  26 F8                 55  	BNE	SAVNAM		KEEP GOING TILL NAME SAVED
202A  10 8E 28 0B           56  	LDY	#NAMBUF		POINT AT FILENAME
202E  3F                    57  	SWI			SOFTWARE INTERRUPT TO DOS
202F  0A                    58  	FCB	10		SYSTEM REQUEST NUMBER
2030  10 26 01 31           59  	LBNE	ABORT		GIVE UP
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 2

2034  8E 3F 00              60  	LDX	#TEXT		POINT TO TEXT POSITION
2037  9F 02                 61  	STX	TXTPOS		INITIAL POSITION
2039  3F                    62  	SWI			SOFTWARE INTERRUPT TO DOS
203A  44                    63  	FCB	68		SYSTEM REQUEST NUMBER
203B  26 11                 64  	BNE	NEWFIL		NO, IT'S A NEW FILE
203D  8E 3F 00              65  	LDX	#TEXT		POINT TO TEXT AREA
2040  3F                    66  	SWI			SOFTWARE INTERRUPT TO DOS
2041  35                    67  	FCB	53		SYSTEM REQUEST NUMBER
2042  10 26 01 1F           68  	LBNE	ABORT		IF ERROR, GET UPSET
2046  17 06 22              69  	LBSR	CLS		CLEAR SCREEN
2049  17 05 8D              70  	LBSR	REFSCR		REFRESH THE SCREE
204C  20 11                 71  	BRA	NOTNEW		NOT A NEW FILE
204E  17 06 1A              72  NEWFIL	LBSR	CLS		CLEAR SCREEN
2051  86 FF                 73  	LDA	#$FF		END OF FILE MARKER
2053  B7 3F 00              74  	STA	TEXT		INITIALIZE NEW FILE TO ZIP
2056  17 05 80              75  	LBSR	REFSCR		SET UP SCREEN
2059  8E 27 0C              76  	LDX	#NEWMSG		MESSAGE TO DISPLAY
205C  17 02 0F              77  	LBSR	ERRMSG		DISPLAY
205F  86 0D                 78  NOTNEW	LDA	#$0D		GET CARRIAGE RETURN
2061  97 64                 79  	STA	DLBUF		CLEAR DELETED LINE
2063  86 FF                 80  	LDA	#$FF		GET END CHARACTER
2065  B7 29 00              81  	STA	SNARF		SAVE IN SNARF BUFFER
2068  97 06                 82  	STA	INSFLG		SET INSERT MODE
206A  CC 29 00              83  	LDD	#SNARF		POINT TO SNARF BUFFER
206D  DD 09                 84  	STD	SNRPOS		SAVE SNARF POSITION
206F  0F 05                 85  	CLR	CURFLG		CLEAR CURSOR FLAG
2071                        86  *
2071                        87  * COMMAND HANDLER
2071                        88  *
2071  0D 05                 89  EDTCMD	TST	CURFLG		WAS LAST COMMAND MOVE CURSOR
2073  26 04                 90  	BNE	NORES		IF SO, DON'T RESET POSITION
2075  96 00                 91  	LDA	XPOS		GET POSITION
2077  97 04                 92  	STA	OLDPOS		RESET POSITION
2079  17 05 FB              93  NORES	LBSR	CURPOS		POSITION CURSOR
207C  17 06 0C              94  	LBSR	GETKEY		GET ONE CHARACTER
207F  0F 05                 95  	CLR	CURFLG		INDICATE NO SPECIAL OPERATION
2081  8D 02                 96  	BSR	EXECMD		EXECUTE COMMAND
2083  20 EC                 97  	BRA	EDTCMD		KEEP PROCESSING
2085                        98  *
2085                        99  * EXECUTES AN EDIT COMMAND
2085                       100  *
2085  4D                   101  EXECMD	TSTA			TEST FOR CHARACTER TO INSERT
2086  2B 30                102  	BMI	CURUP		NO, IT'S A COMMAND
2088                       103  *
2088                       104  * NORMAL CHARACTER, INSERT IT INTO TEXT
2088                       105  *
2088  81 0D                106  	CMPA	#$0D		IS IT A CARRIAGE RETURN
208A  27 1C                107  	BEQ	CRSPEC		IF SO, SPECIAL CASE
208C  34 02                108  	PSHS	A		SAVE CHARACTER
208E  17 05 30             109  	LBSR	LOCADR		FIND OUR ADDRESS
2091  2B 08                110  	BMI	GINSCH		IF EOF, INSERT
2093  81 0D                111  	CMPA	#$0D		CARRIAGE RETURN?
2095  27 04                112  	BEQ	GINSCH		DEFINATELY INSERT
2097  0D 06                113  	TST	INSFLG		ARE WE INSERTING
2099  2A 03                114  	BPL	NOINST		IF NOT, DON'T INSERT
209B  17 03 E4             115  GINSCH	LBSR	INSCHR		INSERT CHARACTER
209E  35 02                116  NOINST	PULS	A		RESTORE CHARACTER
20A0  A7 84                117  	STA	,X		INSERT INTO TEXT
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 3

20A2  17 04 26             118  	LBSR	REFLIN		REFRESH THIS LINE
20A5  16 04 44             119  	LBRA	ADVCHR		AND ADVANCE ONE CHARACTER
20A8                       120  * INSERTING CARRIAGE RETURN
20A8  17 05 16             121  CRSPEC	LBSR	LOCADR		GET OUR ADDRESS
20AB  17 03 D4             122  	LBSR	INSCHR		INSERT CHARACTER
20AE  86 0D                123  	LDA	#$0D		GET CARRIAGE RETURN
20B0  A7 84                124  	STA	,X		SAVE IN TEXT
20B2  17 04 04             125  	LBSR	REFBOT		REFRESH BOTTOM OF SCREEN
20B5  16 04 34             126  	LBRA	ADVCHR		AND ADVANCE TO NEXT POSITION
20B8                       127  *
20B8                       128  * PROCESS EDIT COMMAND
20B8                       129  *
20B8                       130  * CURSOR UP COMMAND
20B8                       131  *
20B8  0A 05                132  CURUP	DEC	CURFLG		INDICATE SPECIAL CURSOR MOVE
20BA  84 7F                133  	ANDA	#$7F		CONVERT TO NORMAL CHARACTER
20BC  10 27 04 CE          134  	LBEQ	BAKLIN		IF SO, GO BACK A LINE
20C0                       135  *
20C0                       136  * CURSOR DOWN COMMAND
20C0                       137  *
20C0  4A                   138  	DECA			TEST FOR CURSOR DOWN
20C1  10 27 04 36          139  	LBEQ	ADVLIN		IF SO, GO DOWN
20C5                       140  *
20C5                       141  * CURSOR FORWARD COMMAND
20C5                       142  *
20C5  0F 05                143  	CLR	CURFLG		CLEAR SPECIAL FLAG
20C7  4A                   144  	DECA			TEST FOR CURSOR FORWARD
20C8  10 27 04 20          145  	LBEQ	ADVCHR		IF SO, ADVANCE A CHARACTER
20CC                       146  *
20CC                       147  * CURSOR BACKWARD COMMAND
20CC                       148  *
20CC  4A                   149  	DECA			TEST FOR CURSOR BACKUP
20CD  10 27 04 A5          150  	LBEQ	BAKCHR		IF SO, BACKUP
20D1                       151  *
20D1                       152  * ADVANCE LINE COMMAND
20D1                       153  *
20D1  4A                   154  	DECA			TEST FOR LINE
20D2  26 05                155  	BNE	CMD0		NO, TRY NEXT
20D4  0F 00                156  ALINE	CLR	XPOS		SET POSITION TO ZERO
20D6  16 04 22             157  	LBRA	ADVLIN		ADVANCE A LINE
20D9                       158  *
20D9                       159  * BACK LINE COMMAND
20D9                       160  *
20D9  4A                   161  CMD0	DECA			TEST FOR BACK LINE
20DA  26 09                162  	BNE	CMD1		NO, TRY NEXT COMMAND
20DC  96 00                163  	LDA	XPOS		GET OLD POSITION
20DE  10 27 04 AC          164  	LBEQ	BAKLIN		IF ALREADY AT ZERO, GO BACK A LINE
20E2  0F 00                165  	CLR	XPOS		INDICATE ZERO POSITION
20E4  39                   166  	RTS
20E5                       167  *
20E5                       168  * TOGGLE INSERT COMMAND
20E5                       169  *
20E5  4A                   170  CMD1	DECA			TEST FOR REFRESH COMMAND
20E6  26 0D                171  	BNE	CMD2		NO, TRY NEXT COMMAND
20E8  8E 27 71             172  	LDX	#INSON		GET INSERT ON MESSAGE
20EB  03 06                173  	COM	INSFLG		CHANGE INSERT FLAG
20ED  2B 03                174  	BMI	INMSG		ISSUE MESSAGE
20EF  8E 27 7B             175  	LDX	#INSOFF		GET INSERT OFF MESSAGE
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 4

20F2  16 01 79             176  INMSG	LBRA	ERRMSG		ISSUE MESSAGE
20F5                       177  *
20F5                       178  * DELETE CHARACTER COMMAND
20F5                       179  *
20F5  4A                   180  CMD2	DECA			TEST FOR DELETE
20F6  26 2A                181  	BNE	CMD3		NO, TRY NEXT COMMAND
20F8  17 04 C6             182  DELGO	LBSR	LOCADR		GET OUR ADDRESS
20FB  17 03 AD             183  	LBSR	DELCHR		DELETE THE CHARACTER
20FE  81 0D                184  	CMPA	#$0D		DID WE DELETE A CARRIAGE RETURN
2100  27 06                185  	BEQ	DELCR		IF SO, SPECIAL CASE
2102  4D                   186  	TSTA			TEST FOR NO DELETE
2103  2B 1C                187  	BMI	DELRTS		IF SO, NO ACTION
2105  16 03 C3             188  	LBRA	REFLIN		REFRESH THIS LINE
2108  1F 10                189  DELCR	TFR	X,D		GET OUR POSITION
210A  10 83 3F 00          190  	CMPD	#TEXT		ARE WE HOME
210E  27 0E                191  	BEQ	NODEOF		IF SO, NO NEED TO DELETE
2110  A6 84                192  	LDA	,X		GET NEXT CHARACTER
2112  2A 0A                193  	BPL	NODEOF		DIDN'T TRY TO DELETE END OF FILE
2114  A7 01                194  	STA	1,X		RESET END OF FILE
2116  86 0D                195  	LDA	#$0D		GET CARRIAGE RETURN
2118  A1 1F                196  	CMPA	-1,X		DO WE ALREADY HAVE A CARRIAGE RETURN THERE?
211A  27 02                197  	BEQ	NODEOF		IF SO, WE ARE OK
211C  A7 84                198  	STA	,X		RESAVE INTO TEXT
211E  16 03 98             199  NODEOF	LBRA	REFBOT		REFRESH SCREEN BOTTOM
2121  39                   200  DELRTS	RTS			QUIT WHILE WE ARE AHEAD
2122                       201  *
2122                       202  * DELETE PREVIOUS COMMAND
2122                       203  *
2122  4A                   204  CMD3	DECA			TEST FOR DELETE PREV
2123  26 08                205  	BNE	CMD4		NO, TRY NEXT
2125  17 04 4E             206  	LBSR	BAKCHR		BACKUP A CHARACTER
2128  17 05 4C             207  	LBSR	CURPOS		POSITION CURSOR
212B  20 CB                208  	BRA	DELGO		CONTINUE WITH DELETE
212D                       209  *
212D                       210  * COMMAND COMMAND, PROMPT FOR EDITOR COMMAND
212D                       211  *
212D  4A                   212  CMD4	DECA			TEST FOR QUIT
212E  10 26 01 53          213  	LBNE	CMD5		NO, TRY NEXT COMMAND
2132  17 05 10             214  	LBSR	CLRCMD		BOTTOM LINE, CLEARED
2135  3F                   215  	SWI			SOFTWARE INTERRUPT TO DOS
2136  18                   216  	FCB	24		SYSTEM REQUEST NUMBER
2137  43 6F 6D 6D 61 6E +  217  	FCCZ	'Command: '
2141  17 04 DF             218  	LBSR	GETCMD		GET COMMAND INPUT
2144  17 05 09             219  	LBSR	CNVBUF		CONVERT TO UPPERCASE
2147  8E 26 E5             220  	LDX	#CMDTAB		POINT TO COMMAND TABLE
214A  3F                   221  	SWI			SOFTWARE INTERRUPT TO DOS
214B  04                   222  	FCB	4		SYSTEM REQUEST NUMBER
214C  27 44                223  	BEQ	REFR1		IF NULL LINE, REFRESH SCREEN
214E  3F                   224  	SWI			SOFTWARE INTERRUPT TO DOS
214F  12                   225  	FCB	18		SYSTEM REQUEST NUMBER
2150  5A                   226  	DECB			TEST FOR EXIT OR QUIT
2151  2B 0E                227  	BMI	QUIT		IF QUIT, GO AWAY
2153  26 25                228  	BNE	APPEND		NO, TRY APPEND FILE COMMAND
2155                       229  * SAVING FILE, FIND OUT HOW MANY BLOCKS TO SAVE
2155  10 8E 28 0B          230  SAVFIL	LDY	#NAMBUF		POINT AT FILENAME
2159  3F                   231  	SWI			SOFTWARE INTERRUPT TO DOS
215A  0A                   232  	FCB	10		SYSTEM REQUEST NUMBER
215B  8D 0A                233  	BSR	SAVOUT		SAVEOUT FILE
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 5

215D  10 26 00 29          234  	LBNE	WAIKEY		ERROR, DON'T EXIT
2161  17 05 07             235  QUIT	LBSR	CLS		CLEAR SCREEN
2164  4F                   236  	CLRA			SET RC=0
2165                       237  * RETURN TO DOS
2165  3F                   238  ABORT	SWI			SOFTWARE INTERRUPT TO DOS
2166  00                   239  	FCB	0		SYSTEM REQUEST NUMBER
2167                       240  *
2167                       241  * SAVES FILE ON DISK
2167                       242  *
2167  17 01 ED             243  SAVOUT	LBSR	FNDEOF		LOCATE END OF FILE
216A  1F 10                244  	TFR	X,D		COPY TO ACC'S
216C  83 3F 01             245  	SUBD	#TEXT+1		CONVERT TO FILE LENGTH
216F  1F 89                246  	TFR	A,B		COPY HIGH TO LOW
2171  4F                   247  	CLRA			CLEAR CARRY
2172  56                   248  	RORB			SHIFT OUT LOW, =*512
2173  5C                   249  	INCB			ADD ONE FOR PARTIAL SECTOR
2174  8E 3F 00             250  	LDX	#TEXT		POINT TO FILE IN MEMORY
2177  3F                   251  	SWI			SOFTWARE INTERRUPT TO DOS
2178  36                   252  	FCB	54		SYSTEM REQUEST NUMBER
2179  39                   253  	RTS
217A                       254  *
217A                       255  * APPENDS A FILE TO THE CURRENT ONE
217A                       256  *
217A  5A                   257  APPEND	DECB			TEST FOR ABBEND
217B  26 1B                258  	BNE	SAVE		NO, TRY SAVE COMMAND
217D  3F                   259  	SWI			SOFTWARE INTERRUPT TO DOS
217E  0A                   260  	FCB	10		SYSTEM REQUEST NUMBER
217F  26 09                261  	BNE	WAIKEY		WAIT IF IT'S INVALID
2181  17 01 D3             262  	LBSR	FNDEOF		LOCATE END OF FILE
2184  30 1F                263  	LEAX	-1,X		BACKUP TO END OF FILE MARKER
2186  3F                   264  	SWI			SOFTWARE INTERRUPT TO DOS
2187  35                   265  	FCB	53		SYSTEM REQUEST NUMBER
2188  27 08                266  	BEQ	REFR1		ALLOW HIM TO SEE ERROR
218A  8E 27 29             267  WAIKEY	LDX	#WAIMSG		POINT AT KEY MESSAGE
218D  3F                   268  	SWI			SOFTWARE INTERRUPT TO DOS
218E  17                   269  	FCB	23		SYSTEM REQUEST NUMBER
218F  17 04 F9             270  	LBSR	GETKEY		WAIT FOR INPUT
2192  17 04 D6             271  REFR1	LBSR	CLS		CLEAR SCREEN
2195  16 04 41             272  	LBRA	REFSCR		AND PERFORM REFRESH
2198                       273  *
2198                       274  * SAVE IN OLD OR NEW FILE
2198                       275  *
2198  5A                   276  SAVE	DECB			TEST FOR SAVE
2199  26 16                277  	BNE	PACK		NO, TRY PACK
219B  3F                   278  	SWI			SOFTWARE INTERRUPT TO DOS
219C  04                   279  	FCB	4		SYSTEM REQUEST NUMBER
219D  26 04                280  	BNE	NEWNAM		IF SO, USE OLD NAME
219F  10 8E 28 0B          281  	LDY	#NAMBUF		POINT AT SAVED NAME
21A3  3F                   282  NEWNAM	SWI			SOFTWARE INTERRUPT TO DOS
21A4  0A                   283  	FCB	10		SYSTEM REQUEST NUMBER
21A5  26 E3                284  	BNE	WAIKEY		NAME IS OK, SAVE FILE
21A7  17 FF BD             285  	LBSR	SAVOUT		SAVE FILE ON DISK
21AA  10 26 FF DC          286  	LBNE	WAIKEY		ERROR, EXIT
21AE  16 04 4D             287  	LBRA	CURHOM		HOME CURSOR AND CONTINUE
21B1                       288  *
21B1                       289  * PACK FILE, REMOVE BLANKS AND INSERT TAB CHARACTERS IF POSSIBLE
21B1                       290  *
21B1  5A                   291  PACK	DECB			TEST FOR 'TABS'
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 6

21B2  26 43                292  	BNE	UNPACK		NO, TRY UNPACK
21B4  8E 3F 00             293  	LDX	#TEXT		POINT TO TOP OF FILE
21B7  9F 02                294  	STX	TXTPOS		RESET TEXT POSITION
21B9  1F 12                295  	TFR	X,Y		COPY TO NEXT POINTER
21BB  0F 07                296  GOLIN	CLR	TEMP		INDICATE ON LINE ZERO
21BD  0C 07                297  NOCOM	INC	TEMP		ADVANCE ONE IN LINE
21BF  A6 80                298  	LDA	,X+		GET CHARACTER FROM X
21C1  A7 A0                299  	STA	,Y+		SAVE IN DEST
21C3  2B 30                300  	BMI	ENPAK		END OF PACK
21C5  81 0D                301  	CMPA	#$0D		END OF LINE?
21C7  27 F2                302  	BEQ	GOLIN		IF SO, COULD BE COMMENT ON NEXT LINE
21C9  81 20                303  	CMPA	#' '		IS IT A SPACE?
21CB  26 F0                304  	BNE	NOCOM		NOT A SPACE
21CD  34 10                305  	PSHS	X		SAVE X POINTER
21CF  96 07                306  SKPSPC	LDA	TEMP		TEST FOR AT POSITION
21D1  84 07                307  	ANDA	#7		TEST FOR A TAB POSITION
21D3  27 18                308  	BEQ	TABOK		IF SO, TAB IS OK HERE
21D5  0C 07                309  	INC	TEMP		ADVANCE IN TEXT
21D7  A6 80                310  	LDA	,X+		GET CHARACTER FROM SOURCE
21D9  81 20                311  	CMPA	#' '		SPACE?
21DB  27 F2                312  	BEQ	SKPSPC		KEEP SKIPPING
21DD  35 10                313  	PULS	X		GET POSITION BACK
21DF  A6 80                314  SAVSPC	LDA	,X+		GET CHARACTER FROM LINE
21E1  A7 A0                315  	STA	,Y+		SAVE IN DEST
21E3  81 20                316  	CMPA	#' '		TEST FOR SPACE
21E5  27 F8                317  	BEQ	SAVSPC		FINISH SAVEING THE SPACES
21E7  81 0D                318  	CMPA	#$0D		CARRIAGE RETURN?
21E9  27 D0                319  	BEQ	GOLIN		IF SO, START NEW LINE
21EB  20 D0                320  	BRA	NOCOM		SAVE THIS SPACE
21ED  C6 09                321  TABOK	LDB	#9		GET A TAB CHARACTER
21EF  E7 3F                322  	STB	-1,Y		CHANGE SPACE TO TAB
21F1  35 06                323  	PULS	A,B		FIX UP STACK
21F3  2A C8                324  	BPL	NOCOM		KEEP MOVEING
21F5  20 52                325  ENPAK	BRA	UEOF		REFRESH SCREEN
21F7                       326  *
21F7                       327  * UNPACK TAB SPACES, REPLACING WITH BLANKS
21F7                       328  *
21F7  5A                   329  UNPACK	DECB			TEST FOR 'UNPACK'
21F8  26 57                330  	BNE	DOS		NO, TRY DOS ENTRY
21FA  8E 3F 00             331  	LDX	#TEXT		POINT TO START OF TEXT
21FD  9F 02                332  UGOLIN	STX	TXTPOS		REMEMBER WHERE WE ARE
21FF  0F 07                333  	CLR	TEMP		STARTING ON COLUMN ZERO
2201  10 8E 29 00          334  	LDY	#SNARF		POINT TO SNARF BUFFER
2205  0C 07                335  UMOVL	INC	TEMP		INDICATE ON NEXT POSITION
2207  A6 80                336  	LDA	,X+		GET CHARACTER FROM SOURCE
2209  A7 A0                337  	STA	,Y+		SAVE IN CREATED LINE
220B  2B 3C                338  	BMI	UEOF		END OF FILE
220D  81 09                339  	CMPA	#9		IS IT A TAB?
220F  27 06                340  	BEQ	UTAB		TAB IS SPECIAL CASE
2211  81 0D                341  	CMPA	#$0D		CARRIAGE RETURN?
2213  26 F0                342  	BNE	UMOVL		IF NOT, KEEP MOVEING
2215  20 10                343  	BRA	UCR		HANDLE CARRIAGE RETURN
2217                       344  * TAB, FILL WITH SPACES
2217  86 20                345  UTAB	LDA	#' '		GET SPACE
2219  A7 3F                346  	STA	-1,Y		REPLACE TAB WITH SPACE
221B  D6 07                347  UFILL	LDB	TEMP		GET HORZ POSITION
221D  C4 07                348  	ANDB	#7		TEST FOR TAB STOP
221F  27 E4                349  	BEQ	UMOVL		WE ARE AT A TAB STOP
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 7

2221  A7 A0                350  	STA	,Y+		ADD ONE SPACE TO THE LINE
2223  0C 07                351  	INC	TEMP		INDICATE WE ARE AT THE END
2225  20 F4                352  	BRA	UFILL		KEEP GOING
2227                       353  * CARRIAGE RETURN, END OF LINE
2227  1F 10                354  UCR	TFR	X,D		GET POINTER
2229  93 02                355  	SUBD	TXTPOS		CONVERT TO SIMPLE OFFSET
222B  DD 07                356  	STD	TEMP		SAVE FOR LATER
222D  9E 02                357  	LDX	TXTPOS		GET OUR POSITION
222F  1F 20                358  	TFR	Y,D		GET POSITION IN LINE
2231  83 29 00             359  	SUBD	#SNARF		CONVERT TO SIMPLE OFFSET
2234  93 07                360  	SUBD	TEMP		FIND OUT HOW MANY BYTES MORE
2236  27 03                361  	BEQ	UNOINS		DON'T INSERT IF NO EXTRA
2238  17 02 58             362  	LBSR	INSMUL		INSERT EXTRA SPACE
223B  10 8E 29 00          363  UNOINS	LDY	#SNARF		POINT TO SNARF BUFFER
223F  A6 A0                364  UMOV	LDA	,Y+		GET CHARACTER FROM LINE
2241  A7 80                365  	STA	,X+		SAVE IN DESTINATION LINE
2243  81 0D                366  	CMPA	#$0D		TEST FOR END OF LINE
2245  26 F8                367  	BNE	UMOV		KEEP GOING
2247  20 B4                368  	BRA	UGOLIN		KEEP LOOKING
2249                       369  * END OF FILE, RESET PARAMETERS
2249  86 FF                370  UEOF	LDA	#$FF		GET MARKER
224B  B7 29 00             371  	STA	SNARF		INDICATE NO SNARF BUFFER
224E  16 00 EE             372  	LBRA	TOPF		GO TO TOP OF FILE
2251                       373  *
2251                       374  * TEMPORARY DOS ENTRY
2251                       375  *
2251  5A                   376  DOS	DECB			TEST FOR 'DOS'
2252  26 17                377  	BNE	INVCMD		NO, COMMAND WAS INVALID
2254  17 04 14             378  	LBSR	CLS		CLEAR SCREEN
2257  34 08                379  	PSHS	DP		SAVE DIRECT PAGE REGISTER
2259  3F                   380  	SWI			SOFTWARE INTERRUPT TO DOS
225A  04                   381  	FCB	4		SYSTEM REQUEST NUMBER
225B  26 07                382  	BNE	DOCMD		DO DOS COMMAND
225D  3F                   383  	SWI			SOFTWARE INTERRUPT TO DOS
225E  65                   384  	FCB	101		SYSTEM REQUEST NUMBER
225F  35 08                385  	PULS	DP		RESTORE DIRECT PAGE
2261  16 FF 2E             386  	LBRA	REFR1		REFRESH AND CONTINUE
2264                       387  * COMMAND WAS SUPPLIED
2264  3F                   388  DOCMD	SWI			SOFTWARE INTERRUPT TO DOS
2265  64                   389  	FCB	100		SYSTEM REQUEST NUMBER
2266  35 08                390  	PULS	DP		RESTORE DP
2268  16 FF 1F             391  	LBRA	WAIKEY		WAIT FOR KEY BEFORE RESUMEING
226B                       392  * COMMAND WAS UNRECOGNISED
226B  8E 27 61             393  INVCMD	LDX	#ICMMSG		INDICATE INVALID COMMAND
226E                       394  *
226E                       395  * ISSUES ERROR MESSAGE ON LINE 23, IN INVERSE VIDEO
226E                       396  *
226E  34 10                397  ERRMSG	PSHS	X		SAVE POINTER TO MESSAGE
2270  17 03 D2             398  	LBSR	CLRCMD		COMMAND LINE & CLEAR
2273  7F 27 9C             399  	CLR	>INVCHR		INSURE WE STOP AT END
2276  8E 27 9B             400  	LDX	#INVON		SET INVERSE VIDEO
2279  3F                   401  	SWI			SOFTWARE INTERRUPT TO DOS
227A  17                   402  	FCB	23		SYSTEM REQUEST NUMBER
227B  35 10                403  	PULS	X		GET MSG POINTER BACK
227D  3F                   404  	SWI			SOFTWARE INTERRUPT TO DOS
227E  17                   405  	FCB	23		SYSTEM REQUEST NUMBER
227F  8E 27 9D             406  	LDX	#INVOFF		SET NORMAL VIDEO
2282  3F                   407  	SWI			SOFTWARE INTERRUPT TO DOS
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 8

2283  17                   408  	FCB	23		SYSTEM REQUEST NUMBER
2284  39                   409  	RTS
2285                       410  *
2285                       411  * PAGE FORWARD C0MMAND
2285                       412  *
2285  4A                   413  CMD5	DECA			TEST FOR PAGE FORWARD COMMAND
2286  26 27                414  	BNE	CMD6		NO, TRY PAGE BACKWARD
2288  9E 02                415  	LDX	TXTPOS		GET TEXT POSITION
228A  C6 16                416  	LDB	#NLINES-1	# LINES TO MOVE
228C  A6 80                417  PAGE	LDA	,X+		GET POSITION
228E  10 2B 02 DE          418  	LBMI	ADVEOF		GONE BEYOND END OF SCREEN
2292  81 0D                419  	CMPA	#$0D		TEST FOR CARRIAGE RETURN
2294  26 F6                420  	BNE	PAGE		KEEP LOOKING
2296  5A                   421  	DECB			REDUCE COUNT
2297  26 F3                422  	BNE	PAGE		KEEP LOOKING
2299  9F 02                423  	STX	TXTPOS		RESAVE TEXT POSITION
229B  A6 80                424  PAGCR	LDA	,X+		GET BYTE FROM TEXT
229D  2B 09                425  	BMI	PAGEOF		END OF FILE IS ON SCREEN
229F  81 0D                426  	CMPA	#$0D		TEST FOR NEW LINE
22A1  26 F8                427  	BNE	PAGCR		KEEP LOOKING
22A3  5C                   428  	INCB			INDICATE ANOTHER LINE
22A4  C1 16                429  	CMPB	#NLINES-1	TEST FOR BEYOND END
22A6  2D F3                430  	BLT	PAGCR		KEEP LOOKING
22A8  D7 01                431  PAGEOF	STB	YPOS		POINT AT EOF LINE
22AA  0F 00                432  	CLR	XPOS		ZERO 'X' POSITION
22AC  16 03 2A             433  	LBRA	REFSCR		REFERESH SCREEN
22AF                       434  *
22AF                       435  * BACK PAGE COMMAND
22AF                       436  *
22AF  4A                   437  CMD6	DECA			TEST FOR BACKUP COMMAND
22B0  26 2A                438  	BNE	CMD7		NO, TRY NEXT
22B2  0F 01                439  PGGO	CLR	YPOS		POSITION TO TOP OF SCREEN
22B4  0F 00                440  	CLR	XPOS		CLEAR 'X' POSITION
22B6  C6 17                441  	LDB	#NLINES		NUMBER OF LINES TO MOVE
22B8  86 FF                442  PGBAK	LDA	#-1		START WITH -1
22BA  97 07                443  	STA	TEMP		ZERO NUMBER OF LINES MOVED
22BC  9E 02                444  	LDX	TXTPOS		GET TOP OF SCREEN POSITION
22BE  8C 3F 00             445  	CMPX	#TEXT		ARE WE AT TOP?
22C1  10 27 02 AB          446  	LBEQ	ADVEOF		IF SO, STOP HERE
22C5  0C 07                447  PGB1	INC	TEMP		ADVANCE COUNT
22C7  8C 3F 00             448  PGB2	CMPX	#TEXT		AT TOP?
22CA  27 0B                449  	BEQ	TOPSCR		YES, STOP
22CC  A6 82                450  	LDA	,-X		BACKUP ONE CHARACTER
22CE  81 0D                451  	CMPA	#$0D		TEST FOR CARRIAGE RETURN
22D0  26 F5                452  	BNE	PGB2		IF NOT, KEEP LOOKING
22D2  5A                   453  	DECB			REDUCE COUNT
22D3  26 F0                454  	BNE	PGB1		KEEP GOING TILL WE FIND
22D5  30 01                455  	LEAX	1,X		ADVANCE TO START OF LINE
22D7  9F 02                456  TOPSCR	STX	TXTPOS		RESAVE POSITION
22D9  16 02 FD             457  	LBRA	REFSCR		REFRESH SCREEN
22DC                       458  *
22DC                       459  * DELETE TO END OF LINE
22DC                       460  *
22DC  4A                   461  CMD7	DECA			TEST FOR DELETE END OF LINE
22DD  26 25                462  	BNE	CMD8		NO, TRY NEXT COMMAND
22DF  17 02 DF             463  DELSN	LBSR	LOCADR		LOCATE ADDRESS
22E2  10 2B 02 8A          464  	LBMI	ADVEOF		IF SO, ABORT WITH ERROR
22E6  34 10                465  	PSHS	X		SAVE ADDRESS
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 9

22E8  1F 12                466  	TFR	X,Y		COPY FOR ADVANCE
22EA  34 10                467  	PSHS	X		SAVE X REG
22EC  8E 28 64             468  	LDX	#DLBUF		DELETE LINE BUFFER
22EF  A6 A0                469  FINCR	LDA	,Y+		GET CHARACTER
22F1  A7 80                470  	STA	,X+		SAVE IN BUFFER
22F3  81 0D                471  	CMPA	#$0D		TEST FOR END OF LINE
22F5  26 F8                472  	BNE	FINCR		KEEP LOOKING
22F7  35 10                473  	PULS	X		RESTORE X
22F9  A6 A0                474  MOVBAC	LDA	,Y+		GET CHARACTER
22FB  A7 80                475  	STA	,X+		COPY BACK TO LINE
22FD  2A FA                476  	BPL	MOVBAC		KEEP GOING TILL WE FIND
22FF  35 10                477  	PULS	X		GET X VALUE BACK
2301  16 FE 04             478  	LBRA	DELCR		REFRESH AND FIX IF END OF FILE
2304                       479  *
2304                       480  * HELP COMMAND, DISPLAY THE FILE [SYSTEM]ED.HLP
2304                       481  *
2304  4A                   482  CMD8	DECA			TEST FOR HELP
2305  26 35                483  	BNE	CMD9		NO, TRY NEXT COMMAND
2307  DC 00                484  	LDD	XPOS		GET CURSOR POSITIONS
2309  34 06                485  	PSHS	A,B		SAVE CURSOR ADDRESS
230B  10 8E 27 86          486  	LDY	#HLPFIL		HELP FILENAME
230F  3F                   487  	SWI			SOFTWARE INTERRUPT TO DOS
2310  0A                   488  	FCB	10		SYSTEM REQUEST NUMBER
2311  17 03 57             489  	LBSR	CLS		CLEAR SCREEN
2314  CE 29 00             490  	LDU	#SNARF
2317  3F                   491  	SWI			SOFTWARE INTERRUPT TO DOS
2318  37                   492  	FCB	55		SYSTEM REQUEST NUMBER
2319  26 0E                493  	BNE	WAIHLP		IF ERROR, GO BACK
231B  3F                   494  DISHLP	SWI			SOFTWARE INTERRUPT TO DOS
231C  3B                   495  	FCB	59		SYSTEM REQUEST NUMBER
231D  26 0A                496  	BNE	WAIHLP		END OF HELP DISPLAY
231F  3F                   497  HDISP	SWI			SOFTWARE INTERRUPT TO DOS
2320  21                   498  	FCB	33		SYSTEM REQUEST NUMBER
2321  81 0D                499  	CMPA	#$0D		TEST FOR NEW LINE
2323  26 F6                500  	BNE	DISHLP		DISPLAY NEXT CHARACTER
2325  86 0A                501  	LDA	#$0A		GET LINEFEED
2327  20 F6                502  	BRA	HDISP		DISPLAY WITH NEXT
2329                       503  * WAIT FOR A CHARACTER BEFORE PROCEDING
2329  8E 27 29             504  WAIHLP	LDX	#WAIMSG		MESSAGE
232C  17 FF 3F             505  	LBSR	ERRMSG		DISPLAY MESSAGE
232F  17 03 59             506  	LBSR	GETKEY		GET A CHARACTER
2332  17 03 36             507  	LBSR	CLS		NEW SCREEN
2335  35 06                508  	PULS	A,B		GET CURSOR POSITION BACK
2337  DD 00                509  	STD	XPOS		RESAVE POSITION
2339  16 02 9D             510  	LBRA	REFSCR		REFRESH SCREEN
233C                       511  *
233C                       512  * TOP OF FILE COMMAND
233C                       513  *
233C  4A                   514  CMD9	DECA			TEST FOR TOF COMMAND
233D  26 09                515  	BNE	CMD10		IF NOT, TRY NEXT
233F  8E 3F 00             516  TOPF	LDX	#TEXT		POINT TO TEXT
2342  0F 01                517  	CLR	YPOS		MOVE TO TOP OF SCREEN
2344  0F 00                518  	CLR	XPOS		ZERO 'X' POSITION
2346  20 8F                519  	BRA	TOPSCR		AND SAVE TOP ADDRESS
2348                       520  *
2348                       521  * BOTTOM OF FILE COMMAND
2348                       522  *
2348  4A                   523  CMD10	DECA			TEST FOR BOT OF FILE KEY
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 10

2349  26 13                524  	BNE	CMD11		NO, TRY NEXT COMMAND
234B  8D 0A                525  	BSR	FNDEOF		FINE END OF FILE
234D  9F 02                526  	STX	TXTPOS		SET SCREEN POSITION
234F  17 FF 60             527  	LBSR	PGGO		SKIP BACK UP SCREEN
2352  96 07                528  	LDA	TEMP		GET # LINES
2354  97 01                529  	STA	YPOS		SET 'Y' POSITION
2356  39                   530  	RTS
2357                       531  * LOCATES END OF FILE. (IN X)
2357  9E 02                532  FNDEOF	LDX	TXTPOS		START AT TOP
2359  A6 80                533  FNDBOT	LDA	,X+		GET POSITION
235B  2A FC                534  	BPL	FNDBOT		KEEP LOOKING
235D  39                   535  	RTS
235E                       536  *
235E                       537  * UNDELETE LINE
235E                       538  *
235E  4A                   539  CMD11	DECA			TEST FOR UNDELETE
235F  26 26                540  	BNE	CMD12		NO, TRY NEXT
2361  17 02 5D             541  	LBSR	LOCADR		FIND OUR ADDRESS
2364  10 8E 28 64          542  	LDY	#DLBUF		GET ADDRESS OF BUFFER
2368  5F                   543  	CLRB			START WITH ZERO CHARACTER
2369  5C                   544  INS1	INCB			+1 TO GO
236A  A6 A0                545  	LDA	,Y+		GET CHARACTER
236C  81 0D                546  	CMPA	#$0D		TEST FOR CARRIAGE RETURN
236E  26 F9                547  	BNE	INS1		IF NOT, KEEP LOOKING
2370  4F                   548  	CLRA			SET ZERO HIGH BYTE
2371  17 01 1F             549  	LBSR	INSMUL		GET MULTIPLE SPACES
2374  34 10                550  	PSHS	X		SAVE OUR POSITION
2376  10 8E 28 64          551  	LDY	#DLBUF		GET LINE BUFFER AGAIN
237A  A6 A0                552  INS2	LDA	,Y+		GET CHARACTER
237C  A7 80                553  	STA	,X+		SAVE IN MEMORY
237E  81 0D                554  	CMPA	#$0D		TEST FOR CARRIAGE RETURN
2380  26 F8                555  	BNE	INS2		IF NOT, KEEP LOOKING
2382  35 10                556  	PULS	X		RESTORE OUR POSITION
2384  16 01 32             557  	LBRA	REFBOT		NEW SCREEN
2387                       558  *
2387                       559  * DELETE TO BUFFER COMMAND
2387                       560  *
2387  4A                   561  CMD12	DECA			TEST FOR SNARF
2388  26 18                562  	BNE	CMD13		NO, TRY NEXT
238A  17 FF 52             563  	LBSR	DELSN		DELETE LINE
238D  10 8E 28 64          564  	LDY	#DLBUF		GET DELETE BUFFER
2391  9E 09                565  	LDX	SNRPOS		GET POSITION
2393  A6 A0                566  SAVL	LDA	,Y+		GET CHARACTER FROM DELETE BUFFER
2395  A7 80                567  	STA	,X+		SAVE IN POSITION
2397  81 0D                568  	CMPA	#$0D		TEST FOR END
2399  26 F8                569  	BNE	SAVL		SAVE WHOLE LINE
239B  86 FF                570  	LDA	#$FF		GET END OF FILE
239D  A7 84                571  	STA	,X		SAVE IN BUFFER
239F  9F 09                572  	STX	SNRPOS		RESAVE SNARF POSITION
23A1  39                   573  	RTS
23A2                       574  *
23A2                       575  * INSERT BUFFER COMMAND
23A2                       576  *
23A2  4A                   577  CMD13	DECA			TEST FOR UNSNARF
23A3  26 2F                578  	BNE	CMD14		NO, TRY ANOTHER
23A5  17 02 19             579  	LBSR	LOCADR		FIND OUR ADDRESS
23A8  10 8E 29 00          580  	LDY	#SNARF		GET ADDRESS OF BUFFER
23AC  34 10                581  	PSHS	X		SAVE OUR POSITION
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 11

23AE  8E FF FF             582  	LDX	#$FFFF		START WITH -1 CHARACTERS
23B1  30 01                583  SINS1	LEAX	1,X		+1 TO GO
23B3  A6 A0                584  	LDA	,Y+		GET CHARACTER
23B5  2A FA                585  	BPL	SINS1		IF NOT, KEEP LOOKING
23B7  1F 10                586  	TFR	X,D		SWAP TO D
23B9  AE E4                587  	LDX	,S		GET X  VALUE BACK
23BB  17 00 D5             588  	LBSR	INSMUL		GET MULTIPLE SPACES
23BE  10 8E 29 00          589  	LDY	#SNARF		GET LINE BUFFER AGAIN
23C2  A6 A0                590  SINS2	LDA	,Y+		GET CHARACTER
23C4  2B 04                591  	BMI	ENDSN		END OF SNARF
23C6  A7 80                592  	STA	,X+		SAVE IN MEMORY
23C8  20 F8                593  	BRA	SINS2		IF NOT, KEEP LOOKING
23CA  CC 29 00             594  ENDSN	LDD	#SNARF		SNARF BUFFER ADDRESS
23CD  DD 09                595  	STD	SNRPOS		RESET POINTER
23CF  35 10                596  	PULS	X		RESTORE OUR POSITION
23D1  16 00 E5             597  	LBRA	REFBOT		NEW SCREEN
23D4                       598  *
23D4                       599  * RESET BUFFER COMMAND
23D4                       600  *
23D4  4A                   601  CMD14	DECA			TEST FOR RESET
23D5  26 0B                602  	BNE	CMD15		NO, TRY NEXT
23D7  CC 29 00             603  	LDD	#SNARF		SNARF NUFFER ADDRESS
23DA  DD 09                604  	STD	SNRPOS		SAVE POSITION
23DC  8E 27 54             605  	LDX	#RESMSG		BUFFER RESET MESSAGE
23DF  16 FE 8C             606  	LBRA	ERRMSG		DISPLAY MESSAGE
23E2                       607  *
23E2                       608  * ADVANCE TO END OF LINE
23E2                       609  *
23E2  4A                   610  CMD15	DECA			TEST FOR 'DOS'
23E3  26 1A                611  	BNE	CMD16		NO, TRY NEXT
23E5  17 01 D9             612  	LBSR	LOCADR		GET OUR ADDRESS
23E8  81 0D                613  	CMPA	#$0D		ARE ALREADY AT END?
23EA  26 06                614  	BNE	FEOL		NO, SKIP IT
23EC  17 FC E5             615  	LBSR	ALINE		ADVANCE A LINE
23EF  17 01 CF             616  	LBSR	LOCADR		FIND OUR ADDRESS
23F2  A6 80                617  FEOL	LDA	,X+		GET ADDRESS
23F4  2B 08                618  	BMI	EOLFND		IF EOF, STOP
23F6  81 0D                619  	CMPA	#$0D		TEST FOR CARRIAGE RETURN
23F8  27 04                620  	BEQ	EOLFND		IF SO, GO BACK
23FA  0C 00                621  	INC	XPOS		ADVANCE ONE POSITION
23FC  20 F4                622  	BRA	FEOL		KEEP LOOKING
23FE  39                   623  EOLFND	RTS
23FF                       624  *
23FF                       625  * FIND COMMAND
23FF                       626  *
23FF  4A                   627  CMD16	DECA			TEST FOR FIND
2400  26 5A                628  	BNE	CMD17		NO, TRY NEXT COMMAND
2402  17 02 40             629  	LBSR	CLRCMD		BOTTOM LINE, CLEARED
2405  3F                   630  	SWI			SOFTWARE INTERRUPT TO DOS
2406  18                   631  	FCB	24		SYSTEM REQUEST NUMBER
2407  53 65 61 72 63 68 +  632  	FCCZ	'Search for: '
2414  17 02 0C             633  	LBSR	GETCMD		GET INPUT LINE
2417  17 01 A7             634  GOLOOK	LBSR	LOCADR		FIND OUT WHERE WE ARE
241A  10 8E 28 24          635  LOOK	LDY	#INPBUF		POINT TO SEARCH BUFFER
241E  A6 80                636  	LDA	,X+		GET CHARACTER AND ADVANCE
2420  2B 34                637  	BMI	NOFIND		DIDN'T FIND IT
2422  34 10                638  	PSHS	X		SAVE OUR POSITION
2424  A6 A0                639  TST2	LDA	,Y+		GET CHARACTER FROM BUFFER
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 12

2426  2B 08                640  	BMI	FOUND		IF SO, WE FOUND
2428  A1 80                641  	CMPA	,X+		TEST AGAINST SOURCE
242A  27 F8                642  	BEQ	TST2		LOOKS LIKE THIS IS IT
242C  35 10                643  	PULS	X		RESTORE POINTER
242E  20 EA                644  	BRA	LOOK		TRY THIS LOCATION
2430  35 10                645  FOUND	PULS	X		RESTORE POSITION
2432  0F 00                646  	CLR	XPOS		CLEAR CURSOR POSITION
2434  0F 01                647  	CLR	YPOS		TO TOP OF SCREEN
2436  1F 10                648  BAKL	TFR	X,D		SWAP TO US
2438  10 83 3F 00          649  	CMPD	#TEXT		ARE WE THERE
243C  27 0C                650  	BEQ	OKGO		OK
243E  0C 00                651  	INC	XPOS		MOVE OVER ONE
2440  A6 82                652  	LDA	,-X		GET CHARACTER
2442  81 0D                653  	CMPA	#$0D		TEST FOR AT START
2444  26 F0                654  	BNE	BAKL		NO, SAY SO
2446  30 01                655  	LEAX	1,X		ADVANCE AGAIN
2448  0A 00                656  	DEC	XPOS		FIX BECAUSE WE WERE OVER
244A  1F 10                657  OKGO	TFR	X,D		COPY TO D
244C  10 93 02             658  	CMPD	TXTPOS		ARE WE ALREADY THERE?
244F  27 30                659  	BEQ	UNCMD		NO NEED TO UPDATE SCREEN
2451  9F 02                660  	STX	TXTPOS		SAVE TEXT POSITION
2453  16 01 83             661  	LBRA	REFSCR		REFRESH SCREEN
2456  8E 27 43             662  NOFIND	LDX	#SNFMSG		STRING NOT FOUND MESSAGE
2459  16 FE 12             663  	LBRA	ERRMSG		DISPLAT MESSAGE
245C                       664  *
245C                       665  * FIND NEXT COMMAND
245C                       666  *
245C  4A                   667  CMD17	DECA			IS IT FINDNEXT?
245D  27 B8                668  	BEQ	GOLOOK		IF SO, DO IT
245F                       669  *
245F                       670  * INSERT TAB AS SPACES
245F                       671  *
245F  4A                   672  CMD18	DECA			IS IT TAB?
2460  26 1F                673  	BNE	UNCMD		NO, SKIP IT
2462  17 01 5C             674  	LBSR	LOCADR		FIND CURRENT ADDRESS
2465  5F                   675  	CLRB			START WITH ZERO SPACES
2466  0C 00                676  FNTAB	INC	XPOS		ADVANCE TO NEXT POSITION
2468  5C                   677  	INCB			INDICATE ONE SPACE
2469  96 00                678  	LDA	XPOS		GET X POSITION
246B  84 07                679  	ANDA	#7		TEST FOR AT A TAB STOP
246D  26 F7                680  	BNE	FNTAB		IF NOT, KEEP GOING
246F  34 04                681  	PSHS	B		SAVE COUNT ON STACK
2471  8D 20                682  	BSR	INSMUL		INSERT CHARACTERS
2473  35 04                683  	PULS	B		RESTORE COUNT
2475  86 20                684  	LDA	#' '		GET SPACE
2477  A7 80                685  INSP	STA	,X+		SAVE IN MEMORY
2479  3F                   686  	SWI			SOFTWARE INTERRUPT TO DOS
247A  21                   687  	FCB	33		SYSTEM REQUEST NUMBER
247B  5A                   688  	DECB			REDUCE COUNT
247C  26 F9                689  	BNE	INSP		KEEP INSERTING
247E  16 00 4A             690  	LBRA	REFLIN		REFRESH LINE
2481                       691  * COMMAND WAS NOT RECOGNISED
2481  39                   692  UNCMD	RTS
2482                       693  *
2482                       694  * INSERTS ONE CHARACTER SPACE INTO THE TEXT POINTED TO BY X
2482                       695  *
2482  31 01                696  INSCHR	LEAY	1,X		+1 FOR SECOND INSERT POINTER
2484  E6 84                697  	LDB	,X		GET CHARACTER
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 13

2486  2B 08                698  	BMI	INSEOF		END OF FILE INSERT
2488  A6 A4                699  INSLP	LDA	,Y		GET CHARACTER FROM BEFORE
248A  E7 A0                700  	STB	,Y+		SAVE AGAIN
248C  1F 89                701  	TFR	A,B		COPY TO B FOR LATER
248E  2A F8                702  	BPL	INSLP		IF NOT, KEEP GOING
2490  E7 A4                703  INSEOF	STB	,Y		SET EOF IN TEXT
2492  39                   704  	RTS
2493                       705  *
2493                       706  * INSERTS NUMBERS OF CHARACTER IN B IN LINE POINTED TO BY X
2493                       707  *
2493  34 50                708  INSMUL	PSHS	X,U		SAVE X REGISTER
2495  6D 80                709  FINEF	TST	,X+		GET CHARACTER
2497  2A FC                710  	BPL	FINEF		KEEP LOOKING
2499  33 8B                711  	LEAU	D,X		POINT TO END PLUS NUMBER OF CHARS NEEDED
249B  1F 10                712  	TFR	X,D		COPY TO ACC
249D  A3 E4                713  	SUBD	,S		CONVERT TO SIMPLE NUMBER
249F  1F 02                714  	TFR	D,Y		SAVE IN Y FOR COUNT
24A1  A6 82                715  MOVL	LDA	,-X		GET CHARACTER
24A3  A7 C2                716  	STA	,-U		SAVE FARTHER IN LINE
24A5  31 3F                717  	LEAY	-1,Y		BACKUP COUNT
24A7  26 F8                718  	BNE	MOVL		AND KEEP GOING
24A9  35 D0                719  	PULS	X,U,PC		RESTORE ADDRESS AND RETURN
24AB                       720  *
24AB                       721  * DELETES ONE CHARACTER FROM TEXT POINTED TO BY X
24AB                       722  *
24AB  A6 84                723  DELCHR	LDA	,X		GET CHARACTER WE ARE DELETING
24AD  2B 1B                724  	BMI	DELEOF		SPECIAL CASE
24AF  34 12                725  	PSHS	A,X		SAVE FOR LATER REFERENCE
24B1  A6 01                726  DELLP	LDA	1,X		GET CHARACTER FROM SOURCE
24B3  A7 80                727  	STA	,X+		SAVE IN TEXT
24B5  2A FA                728  	BPL	DELLP		IF NOT, CONTINUE DELETING
24B7  35 92                729  	PULS	A,X,PC		RESTORE REGISTERS
24B9                       730  *
24B9                       731  * REFRESH BOTTOM OF SCREEN FROM CURRENT LOCATION
24B9                       732  *
24B9  DC 00                733  REFBOT	LDD	XPOS		GET POSITION
24BB  34 06                734  	PSHS	A,B		SAVE FOR LATER REFERENCE
24BD  1F 12                735  	TFR	X,Y		COPY OUR POSITION
24BF  C6 17                736  	LDB	#NLINES		LINES/SCREEN
24C1  D0 01                737  	SUBB	YPOS		FIGURE OUT HOW MANY WE HAVE LEFT
24C3  17 01 1C             738  	LBSR	DISTXT		REFRESH BOTTOM OF SCREEN
24C6  35 06                739  	PULS	A,B		RESTORE REGISTERS
24C8  DD 00                740  	STD	XPOS		RESTORE CURSOR POSITION
24CA  39                   741  DELEOF	RTS
24CB                       742  *
24CB                       743  * REFRESH CURRENT LINE
24CB                       744  *
24CB  A6 80                745  REFLIN	LDA	,X+		GET CHARACTER FROM SOURCE
24CD  2B 09                746  	BMI	REFL1		DISPLAY END OF FILE
24CF  81 0D                747  	CMPA	#$0D		TEST FOR END OF LINE
24D1  27 16                748  	BEQ	REFL2		OF SO, THATS IT
24D3  17 01 2D             749  	LBSR	OUTPRT		OUTPUT IF DISPLAYABLE
24D6  20 F3                750  	BRA	REFLIN		KEEP GOING TILL END OF LINE
24D8  86 0D                751  REFL1	LDA	#$0D		GET CR
24DA  A7 1F                752  	STA	-1,X		INSERT CR
24DC  86 FF                753  	LDA	#$FF		GET EOF MARKER
24DE  A7 84                754  	STA	,X		WRITE IN TEXT
24E0  8D 07                755  	BSR	REFL2		CLEAR END OF LINE
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 14

24E2  3F                   756  	SWI			SOFTWARE INTERRUPT TO DOS
24E3  16                   757  	FCB	22		SYSTEM REQUEST NUMBER
24E4  8E 27 95             758  	LDX	#EOFMSG		GET MESSAGE
24E7  3F                   759  	SWI			SOFTWARE INTERRUPT TO DOS
24E8  17                   760  	FCB	23		SYSTEM REQUEST NUMBER
24E9  16 01 5F             761  REFL2	LBRA	CLEOL		CLEAR REMAINDER
24EC                       762  *
24EC                       763  * ADVANCES ONE CHARACTER
24EC                       764  *
24EC  17 00 D2             765  ADVCHR	LBSR	LOCADR		FIND OUT POSITION
24EF  81 0D                766  	CMPA	#$0D		TEST FOR CARRIAGE RETURN
24F1  27 06                767  	BEQ	SKPLIN		SKIP TO NEXT LINE
24F3  4D                   768  	TSTA			TEST FOR END OF FILE
24F4  2B 23                769  	BMI	AEOFG		INDICATE ERROR
24F6  0C 00                770  	INC	XPOS		ADVANCE ONE POSITION
24F8  39                   771  	RTS
24F9  0F 00                772  SKPLIN	CLR	XPOS		INDICATE WE ARE AT BEGINNING OF LINE
24FB                       773  *
24FB                       774  * ROLLS SCREEN FORWARD ONE LINE
24FB                       775  *
24FB  17 00 CB             776  ADVLIN	LBSR	LOCLIN		FINDOUR LINE
24FE  A6 84                777  	LDA	,X		GET CHARACTER
2500  2B 17                778  	BMI	AEOFG		IF SO, DISPLAY MESSAGE
2502  96 01                779  	LDA	YPOS		GET Y POSITION
2504  81 16                780  	CMPA	#NLINES-1	TEST FOR AT END
2506  2C 0C                781  	BGE	SROLLD		IF SO, ROLL SCREEN
2508  A6 80                782  NXTL	LDA	,X+		GET CHARACTER
250A  2B 64                783  	BMI	ADVEOF		IF SO, GET UPSET
250C  81 0D                784  	CMPA	#$0D		TEST FOR CARRIAGE RETURN
250E  26 F8                785  	BNE	NXTL		IF NOT, THATS ALL
2510  0C 01                786  	INC	YPOS		SKIP TO NEXT LINE
2512  20 3D                787  	BRA	POSLIN		SKIP TO CHARACTER ON LINE
2514  10 9E 02             788  SROLLD	LDY	TXTPOS		GET POSITION
2517  A6 A0                789  LOKLIN	LDA	,Y+		GET CHARACTER FROM LINE
2519  2B 55                790  AEOFG	BMI	ADVEOF		ADVANCE BEYOND END OF FILE
251B  81 0D                791  	CMPA	#$0D		TEST FOR CARRIAGE RETURN
251D  26 F8                792  	BNE	LOKLIN		KEEP LOOKING
251F  10 9F 02             793  	STY	TXTPOS		RESAVE TEXT POSITION
2522  3F                   794  	SWI			SOFTWARE INTERRUPT TO DOS
2523  18                   795  	FCB	24		SYSTEM REQUEST NUMBER
2524  04                   796  	FCB	'D'-$40		SCROLL SCREEN
2525  10 36 20             797  	FCB	$10,$1F+NLINES,' ' MOVE TO SECOND LAST
2528  17 00                798  	FCB	'W'-$40,0	CLEAR TO END
252A  C6 16                799  	LDB	#NLINES-1	# LINES TO MOVE
252C  A6 A0                800  ADLN	LDA	,Y+		GET LINE
252E  2B 21                801  	BMI	POSLIN		NO END MESSAGE
2530  81 0D                802  	CMPA	#$0D		TEST FOR NEW LINE
2532  26 F8                803  	BNE	ADLN		KEEP LOOKING
2534  5A                   804  	DECB			REDUCE COUNT
2535  26 F5                805  	BNE	ADLN		KEEP LOOKING
2537  1F 21                806  	TFR	Y,X		POINT AT LINE TO DISPLAY
2539  A6 84                807  	LDA	,X		GET CHARACTER
253B  2A 0B                808  	BPL	NOAEOF		END OF FILE WHILE ADVANCEING
253D  86 0D                809  EOFERR	LDA	#$0D		BACK TO START OF LINE
253F  3F                   810  	SWI			SOFTWARE INTERRUPT TO DOS
2540  21                   811  	FCB	33		SYSTEM REQUEST NUMBER
2541  8E 27 95             812  	LDX	#EOFMSG		POINT TO END OF FILE MESSAGE
2544  3F                   813  	SWI			SOFTWARE INTERRUPT TO DOS
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 15

2545  17                   814  	FCB	23		SYSTEM REQUEST NUMBER
2546  20 09                815  	BRA	POSLIN		KEEP DISPLAYING
2548  A6 80                816  NOAEOF	LDA	,X+		GET CHARACTER FROM TEXT
254A  17 00 B6             817  	LBSR	OUTPRT		DISPLAY IF OK
254D  81 0D                818  	CMPA	#$0D		TEST FOR <CR>
254F  26 F7                819  	BNE	NOAEOF		IF NOT, KEEP GOING
2551                       820  * POSITION CURSOR ON LINE FOLLOWING
2551  8D 76                821  POSLIN	BSR	LOCLIN		FIND OUR LINE
2553  0D 05                822  	TST	CURFLG		TEST FOR SPECIAL CURSOR POSITION
2555  27 04                823  	BEQ	NORPOS		NORMAL MODE
2557  D6 04                824  	LDB	OLDPOS		GET OLD POSITION
2559  20 02                825  	BRA	SPCPOS		SPECIAL POSITION
255B  D6 00                826  NORPOS	LDB	XPOS		GET X POSITION
255D  27 10                827  SPCPOS	BEQ	THER1		ALREADY THERE
255F  0F 00                828  	CLR	XPOS		SET TO ZERO
2561  A6 80                829  OKMV	LDA	,X+		GET CHARACTER
2563  81 0D                830  	CMPA	#$0D		TEST FOR CARRIAGE RETURN
2565  27 08                831  	BEQ	THER1		ALREADY THERE
2567  4D                   832  	TSTA			TEST FOR $FF (EOF)
2568  2B 05                833  	BMI	THER1		THATS ALL FOLKS
256A  0C 00                834  	INC	XPOS		ADVANCE ONE LOCATION
256C  5A                   835  	DECB			REDUCE OUR COUNT
256D  26 F2                836  	BNE	OKMV		KEEP LOOKING
256F  39                   837  THER1	RTS
2570  8E 27 15             838  ADVEOF	LDX	#OUTERR		ERROR MESSAGE
2573  16 FC F8             839  	LBRA	ERRMSG		DISPLAY
2576                       840  *
2576                       841  * BACKS UP ONE CHARACTER
2576                       842  *
2576  17 00 50             843  BAKCHR	LBSR	LOCLIN		LOCATE OUR POSITION
2579  D6 00                844  	LDB	XPOS		GET X POSITION
257B  3A                   845  	ABX			OFFSET INTO LINE
257C  8C 3F 00             846  	CMPX	#TEXT		TEST FOR TEXT SPACE
257F  23 EF                847  	BLS	ADVEOF		ERROR
2581  A6 82                848  	LDA	,-X		GET CHARACTER FROM BEHIND
2583  81 0D                849  	CMPA	#$0D		TEST FOR CARRIAGE RETURN
2585  27 03                850  	BEQ	BKUPL		BACKUP A LINE
2587  0A 00                851  	DEC	XPOS		BACKUP IN SOURCE
2589  39                   852  	RTS
258A  86 7F                853  BKUPL	LDA	#127		X POSITION IS VERY HIGH
258C  97 00                854  	STA	XPOS		SET POSITION
258E                       855  *
258E                       856  * ROLLS SCREEN BACKWARD ONE LINE
258E                       857  *
258E  96 01                858  BAKLIN	LDA	YPOS		TEST Y POSITION
2590  27 04                859  	BEQ	SROLLU		ROLL SCREEN UP
2592  0A 01                860  	DEC	YPOS		BACKUP IN SCREEN
2594  20 BB                861  	BRA	POSLIN		POSITION IN LINE
2596                       862  * SCROLL SCREEN UPWARD
2596                       863  * USE THIS VERSION FOR TTYS WHICH SUPPORT BACKWARD SCROLLING
2596  10 9E 02             864  SROLLU	LDY	TXTPOS		GET OUR POSITION
2599  31 3F                865  	LEAY	-1,Y		BACKUP PAST END OF LAST LINE
259B  A6 A2                866  SROLU1	LDA	,-Y		GET CHARACTER FROM LINE
259D  81 0D                867  	CMPA	#$0D		TEST FOR PREVIOUS LINE
259F  27 0C                868  	BEQ	SROLU2		IF SO, WE HAVE IT
25A1  1F 20                869  	TFR	Y,D		COPY TO D
25A3  10 83 3E FF          870  	CMPD	#TEXT-1		TEST FOR AT LOCATION 1
25A7  27 04                871  	BEQ	SROLU2		AT TOP LINE
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 16

25A9  25 C5                872  	BLO	ADVEOF		INDICATE ERROR
25AB  20 EE                873  	BRA	SROLU1		KEEP LOOKING
25AD  31 21                874  SROLU2	LEAY	1,Y		ADVANCE TO PROPER PLACE
25AF  10 9F 02             875  	STY	TXTPOS		SAVE TEXT POSITION
25B2  86 05                876  	LDA	#'E'-$40	CODE TO SCROLL BACKWARDS
25B4  3F                   877  	SWI			SOFTWARE INTERRUPT TO DOS
25B5  21                   878  	FCB	33		SYSTEM REQUEST NUMBER
25B6  17 00 8C             879  	LBSR	CLRCMD		CLEAR COMMAND FIELD
25B9  86 19                880  	LDA	#'Y'-$40	CODE TO HOME CURSOR
25BB  3F                   881  	SWI			SOFTWARE INTERRUPT TO DOS
25BC  21                   882  	FCB	33		SYSTEM REQUEST NUMBER
25BD  1F 21                883  	TFR	Y,X		POINT AT LINE TO DISPLAY
25BF  20 87                884  	BRA	NOAEOF		DISPLAY LINE AND POSITION CURSOR
25C1                       885  * USE THIS VERSION FOR TTYS NOT SUPPORTING BACKWARD SCROLL
25C1                       886  *SROLLU	LDB	#NLINES/2	GET # LINES
25C1                       887  *	LBSR	PGBAK		PERFORM BACK PAGE
25C1                       888  *	LDA	TEMP		GET # LINES MOVED
25C1                       889  *	DECA			GOTO ONE HIGHER LINE
25C1                       890  *	BMI	POSLIN		NO LINES MOVED
25C1                       891  *	STA	YPOS		SET POSITION
25C1                       892  *	BRA	POSLIN		POSITION CURSOR
25C1                       893  *
25C1                       894  * LOCATES CURRENT ADDRESS
25C1                       895  *
25C1  8D 06                896  LOCADR	BSR	LOCLIN		GET LINE ADDRESS
25C3  D6 00                897  	LDB	XPOS		GET HORIZ
25C5  3A                   898  	ABX			ADD TO ADDRES
25C6  A6 84                899  	LDA	,X		GET CHARACTER FROM LINE
25C8  39                   900  	RTS
25C9                       901  *
25C9                       902  * LOCATES START OF LINE CURSOR IS ONE
25C9                       903  *
25C9  9E 02                904  LOCLIN	LDX	TXTPOS		START AT TOP OF SCREEN
25CB  D6 01                905  	LDB	YPOS		Y POSITION
25CD  27 09                906  	BEQ	THERE		ALREADY THERE
25CF  A6 80                907  LOCA1	LDA	,X+		GET CHARACTER
25D1  81 0D                908  	CMPA	#$0D		TEST FOR NEXT
25D3  26 FA                909  	BNE	LOCA1		KEEP LOOKING
25D5  5A                   910  	DECB			REDUCE LINE
25D6  26 F7                911  	BNE	LOCA1		KEEP LOOKING TILL WE GET THERE
25D8  39                   912  THERE	RTS
25D9                       913  *
25D9                       914  * REFERESHES THE TERMINAL SCREEN
25D9                       915  *
25D9  10 9E 02             916  REFSCR	LDY	TXTPOS		GET OUR POSITION
25DC  86 19                917  	LDA	#'Y'-$40	HOME CURSOR MESSAGE
25DE  3F                   918  	SWI			SOFTWARE INTERRUPT TO DOS
25DF  21                   919  	FCB	33		SYSTEM REQUEST NUMBER
25E0  C6 17                920  	LDB	#NLINES		# LINES TO DISPLAY
25E2  A6 A0                921  DISTXT	LDA	,Y+		GET CHARACTER FROM TEXT
25E4  2B 13                922  	BMI	DISEOF		IF SO, INDICATE END OF FILE
25E6  81 0D                923  	CMPA	#$0D		TEST FOR CARRIAGE RETURN
25E8  27 05                924  	BEQ	DISCR		DISPLAY CARRIAGE RETURN
25EA  17 00 16             925  	LBSR	OUTPRT		OUTPUT AS DISPLAYABLE CHARACTER
25ED  20 F3                926  	BRA	DISTXT		KEEP DISPLAYING
25EF  17 00 59             927  DISCR	LBSR	CLEOL		CLEAR END OF LINE
25F2  3F                   928  	SWI			SOFTWARE INTERRUPT TO DOS
25F3  16                   929  	FCB	22		SYSTEM REQUEST NUMBER
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 17

25F4  5A                   930  	DECB			REDUCE COUNT
25F5  26 EB                931  	BNE	DISTXT		KEEP DISPLAYING
25F7  20 05                932  	BRA	CURHOM		HOME CURSOR AND RETURN
25F9  8E 27 95             933  DISEOF	LDX	#EOFMSG		END OF FILE MESSAGE
25FC  3F                   934  	SWI			SOFTWARE INTERRUPT TO DOS
25FD  17                   935  	FCB	23		SYSTEM REQUEST NUMBER
25FE  86 17                936  CURHOM	LDA	#'W'-$40	CLEAR TO END OF SCREEN
2600  3F                   937  OUT4	SWI			SOFTWARE INTERRUPT TO DOS
2601  21                   938  	FCB	33		SYSTEM REQUEST NUMBER
2602  39                   939  	RTS
2603                       940  *
2603                       941  * DISPLAYS CHARACTER ON SCREEN IF IT IS PRINTABLE
2603                       942  *
2603  81 0D                943  OUTPRT	CMPA	#$0D		TEST FOR <CR>
2605  27 F9                944  	BEQ	OUT4		IF SO, ALLOW IT TO PRINT
2607  34 12                945  OUTDIF	PSHS	A,X		SAVE REGS
2609  81 7F                946  	CMPA	#$7F		TEST FOR DELETE
260B  27 08                947  	BEQ	OUT2		SPECIAL DELETE NOTATION
260D  81 20                948  	CMPA	#' '		TEST FOR NON-PRINT
260F  2D 06                949  	BLT	OUT3		OK TO DISPLAY
2611  3F                   950  OUT1	SWI			SOFTWARE INTERRUPT TO DOS
2612  21                   951  	FCB	33		SYSTEM REQUEST NUMBER
2613  35 92                952  	PULS	A,X,PC
2615  86 ED                953  OUT2	LDA	#'-'-'@'	GET '-' FOR INVERSE
2617  8B 40                954  OUT3	ADDA	#'@'		CHANGE TO INDICATOR
2619  B7 27 9C             955  	STA	>INVCHR		DISPLAY
261C  8E 27 9B             956  	LDX	#INVON		OUTPUT MESSAGE
261F  3F                   957  	SWI			SOFTWARE INTERRUPT TO DOS
2620  17                   958  	FCB	23		SYSTEM REQUEST NUMBER
2621  35 92                959  	PULS	A,X,PC		GET CHARACTER BACK
2623                       960  *
2623                       961  * GETS AN INPUT LINE FROM THE TERMINAL
2623                       962  *
2623  10 8E 28 24          963  GETCMD	LDY	#INPBUF		POINT TO SEARCH BUFFER
2627  5F                   964  	CLRB			CHARACTER COUNT
2628  17 00 60             965  GETC1	LBSR	GETKEY		GET A KEY
262B  A7 A0                966  	STA	,Y+		SAVE IN BUFFER
262D  2B 05                967  	BMI	GETC2		END OF LINE
262F  8D D6                968  	BSR	OUTDIF		OUTPUT CHARACTER
2631  5C                   969  	INCB			KEEP TRACK OF HOW MANY CHARACTERS WE HAVE
2632  20 F4                970  	BRA	GETC1		KEEP READING
2634  81 88                971  GETC2	CMPA	#$88		TEST FOR DELETE
2636  26 0D                972  	BNE	CLRCMD		END OF INPUT
2638  5A                   973  	DECB			REDUCE COUNT
2639  2B E8                974  	BMI	GETCMD		IF SO, START AGAIN
263B  31 3E                975  	LEAY	-2,Y		BACKUP ONE CHARACTER
263D  3F                   976  	SWI			SOFTWARE INTERRUPT TO DOS
263E  18                   977  	FCB	24		SYSTEM REQUEST NUMBER
263F  08 20 08 00          978  	FCB	8,' ',8,0	DELETE CHARACTER BY WRITING OVER IT
2643  20 E3                979  	BRA	GETC1		KEEP GETTING CHARACTERS
2645  3F                   980  CLRCMD	SWI			SOFTWARE INTERRUPT TO DOS
2646  18                   981  	FCB	24		SYSTEM REQUEST NUMBER
2647  10 37 20 00          982  	FCB	$10,' '+NLINES,' ',0
264B  3F                   983  CLEOL	SWI			SOFTWARE INTERRUPT TO DOS
264C  18                   984  	FCB	24		SYSTEM REQUEST NUMBER
264D  16 00                985  	FCB	'V'-$40,0
264F  39                   986  	RTS
2650                       987  *
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 18

2650                       988  * CONVERT BUFFER CONTENTS TO UPPERCASE, TERMINATED WITH CR
2650                       989  *
2650  10 8E 28 24          990  CNVBUF	LDY	#INPBUF		POINT AT BUFFER
2654  A6 A4                991  CNVBF1	LDA	,Y		GET CHARACTER FROM BUFFER
2656  2B 0A                992  	BMI	LSTBUF		LAST CHARACTER IN BUFFER
2658  81 61                993  	CMPA	#$61		TEST FOR LOWER CASE
265A  2D 02                994  	BLT	NOCHG		IF NOT, IT'S OK
265C  84 DF                995  	ANDA	#$DF		CONVERT TO UPPER
265E  A7 A0                996  NOCHG	STA	,Y+		SAVE AND INC
2660  20 F2                997  	BRA	CNVBF1		KEEP CONVERTING
2662  86 0D                998  LSTBUF	LDA	#$0D		GET CARRIAGE RETURN
2664  A7 A4                999  	STA	,Y		SAVE IN MEMORY
2666  10 8E 28 24         1000  	LDY	#INPBUF		POINT AT BUFFER
266A  39                  1001  	RTS
266B                      1002  *
266B                      1003  * CLEARS SCREEN
266B                      1004  *
266B  34 02               1005  CLS	PSHS	A		SAVE REGISTERS
266D  86 18               1006  	LDA	#'X'-$40	CLEAR SCREEN
266F  3F                  1007  	SWI			SOFTWARE INTERRUPT TO DOS
2670  21                  1008  	FCB	33		SYSTEM REQUEST NUMBER
2671  0F 00               1009  	CLR	XPOS		ZERO X POSITION
2673  0F 01               1010  	CLR	YPOS		ZERO Y POSITION
2675  35 82               1011  	PULS	A,PC		RESTORE REGISTERS AND RETURN
2677                      1012  *
2677                      1013  * POSITIONS CURSOR
2677                      1014  *
2677  34 06               1015  CURPOS	PSHS	A,B		SAVE REGISTERS
2679  86 10               1016  	LDA	#'P'-$40	GET ESCAPE CHARACTER
267B  3F                  1017  	SWI			SOFTWARE INTERRUPT TO DOS
267C  21                  1018  	FCB	33		SYSTEM REQUEST NUMBER
267D  96 01               1019  	LDA	YPOS		GET VERT VALUE
267F  8B 20               1020  	ADDA	#' '		OFFSET
2681  3F                  1021  	SWI			SOFTWARE INTERRUPT TO DOS
2682  21                  1022  	FCB	33		SYSTEM REQUEST NUMBER
2683  96 00               1023  	LDA	XPOS		HORZ. POSITION
2685  8B 20               1024  	ADDA	#' '
2687  3F                  1025  	SWI			SOFTWARE INTERRUPT TO DOS
2688  21                  1026  	FCB	33		SYSTEM REQUEST NUMBER
2689  35 86               1027  	PULS	A,B,PC		RESTORE REGISTERS AND RETURN
268B                      1028  *
268B                      1029  * KEYBOARD INPUT ROUTINE, EVALUATES INPUT CHARACTERS, LOOKING FOR ESCAPE
268B                      1030  * SEQUENCES, AND RETURNS A RESULT AS FOLLOWES:
268B                      1031  *
268B                      1032  *   $80 - CURSOR UP COMMAND.		$81 - CURSOR DOWN COMMAND
268B                      1033  *   $82 - CURSOR FORWARD COMMAND.	$83 - CURSOR BACKWARD COMMAND
268B                      1034  *   $84 - ADVANCE LINE COMMAND.		$85 - BACKUP LINE COMMAND
268B                      1035  *   $86 - TOGGLE INSERT MODE.		$87 - DELETE CHARACTER COMMAND
268B                      1036  *   $88 - DELETE CHARACTER BEFORE CURSOR
268B                      1037  *   $89 - EXIT EDITOR.			$8A - PAGE FORWARD
268B                      1038  *   $8B - PAGE BACKWARD.		$8C - DELETE TO END OF LINE
268B                      1039  *   $8D - KEYPAD HELP.			$8E - GO TO TOP OF FILE
268B                      1040  *   $8F - GO TO BOTTOM OF FILE.		$90 - UNDELETE LINE
268B                      1041  *   $91 - DELETE LINE TO BUFFER.	$92 - UNDELETE BUFFER
268B                      1042  *   $93 - RESET BUFFER POINTER.		$94 - ADVANCE TO END OF LINE
268B                      1043  *   $95 - FIND KEY.			$96 - FINDNEXT KEY
268B                      1044  *   $97 - INSERT SPACES TO NEXT TAB STOP
268B                      1045  *
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 19

268B                      1046  * CONTROL CODES OTHER THAT CARRIAGE-RETURN OR TAB ARE NOT PASSED BACK TO
268B                      1047  * THE CALLING ROUTINE UNLESS THEY ARE PRECEDED BY A <ESCAPE>
268B                      1048  *
268B  34 10               1049  GETKEY	PSHS	X		SAVE REGISTERS
268D  3F                  1050  KEYIN	SWI			SOFTWARE INTERRUPT TO DOS
268E  22                  1051  	FCB	34		SYSTEM REQUEST NUMBER
268F  81 20               1052  	CMPA	#' '		TEST FOR OTHER CHARACTERS
2691  25 06               1053  	BLO	SPCKEY		IF SO, FORGET ANY CONTROL CODES
2693  81 7F               1054  	CMPA	#$7F		SPECIAL?
2695  24 02               1055  	BHS	SPCKEY		YES
2697  35 90               1056  NORCHR	PULS	X,PC
2699  81 1B               1057  SPCKEY	CMPA	#$1B		ESCAPE?
269B  26 04               1058  	BNE	SPC0
269D  3F                  1059  	SWI			SOFTWARE INTERRUPT TO DOS
269E  22                  1060  	FCB	34		SYSTEM REQUEST NUMBER
269F  35 90               1061  	PULS	X,PC		GO HOME
26A1  8E 26 B0            1062  SPC0	LDX	#CURTAB
26A4  6D 84               1063  SPC1	TST	,X		END OF TABLE?
26A6  27 E5               1064  	BEQ	KEYIN		IGNORE
26A8  A1 81               1065  	CMPA	,X++		THIS ONE?
26AA  26 F8               1066  	BNE	SPC1		NO
26AC  A6 1F               1067  	LDA	-1,X
26AE  35 90               1068  	PULS	X,PC
26B0                      1069  *
26B0                      1070  * KEYCODE CONVERSION TABLE
26B0                      1071  *
26B0                      1072  * CURSOR MOVEMENT KEYS
26B0                      1073  *
26B0  1A 80               1074  CURTAB	FCB	'Z'-$40,$80	UP
26B2  0A 81               1075  	FCB	'J'-$40,$81	DOWN
26B4  15 82               1076  	FCB	'U'-$40,$82	RIGHT
26B6  08 83               1077  	FCB	'H'-$40,$83	LEFT
26B8  8A 84               1078  	FCB	'J'-$40+$80,$84	ADV LINE
26BA  9A 85               1079  	FCB	'Z'-$40+$80,$85	BAK LINE
26BC  88 85               1080  	FCB	'H'-$40+$80,$85	ANOTHER BAK LINE
26BE  B1 86               1081  	FCB	'1'+$80,$86	TOGGLE INS
26C0  FF 87               1082  	FCB	$FF,$87		DEL CHR
26C2  7F 88               1083  	FCB	$7F,$88		DELETE PREVIOUS
26C4  8D 89               1084  	FCB	$0D+$80,$89	COMMAND KEY
26C6  04 8A               1085  	FCB	$04,$8A		FORWARD
26C8  05 8B               1086  	FCB	$05,$8B		REVERSE
26CA  B2 8C               1087  	FCB	'2'+$80,$8C	DEL TO END OF LINE
26CC  B0 8D               1088  	FCB	'0'+$80,$8D	HELP (CTRL SPACE)
26CE  85 8E               1089  	FCB	$85,$8E		TOF
26D0  84 8F               1090  	FCB	$84,$8F		EOF
26D2  B3 90               1091  	FCB	'3'+$80,$90	UNDELETE
26D4  B4 91               1092  	FCB	'4'+$80,$91	DELETE TO BUFFER
26D6  B5 92               1093  	FCB	'5'+$80,$92	UNDELETE BUFFER
26D8  B6 93               1094  	FCB	'6'+$80,$93	RESET BUFFER
26DA  95 94               1095  	FCB	'U'-$40+$80,$94	ADVANCE TO EOL
26DC  B7 95               1096  	FCB	'7'+$80,$95	FIND
26DE  B8 96               1097  	FCB	'8'+$80,$96	FIND-NEXT
26E0  09 97               1098  	FCB	$09,$97		TAB-ADVANCE TO TAB STOP
26E2  0D 0D               1099  	FCB	$0D,$0D		ALLOW CR
26E4  00                  1100  	FCB	0
26E5                      1101  *
26E5                      1102  * COMMAND TABLE
26E5                      1103  *
DUNFIELD 6809 ASSEMBLER: CUBIX SCREEN EDITOR                          PAGE: 20

26E5  84                  1104  CMDTAB	FCB	$84		REQUIRE AT LEAST 'QUIT'
26E6  51 55 49 54         1105  	FCC	'QUIT'
26EA  82                  1106  	FCB	$82		REQUIRE AT LEAST 'EX'
26EB  45 58 49 54         1107  	FCC	'EXIT'
26EF  82                  1108  	FCB	$82		REQUIRE AT LEAST 'AP'
26F0  41 50 50 45 4E 44   1109  	FCC	'APPEND'
26F6  82                  1110  	FCB	$82		REQUIRE AT LEAST 'SA'
26F7  53 41 56 45         1111  	FCC	'SAVE'
26FB  83                  1112  	FCB	$83		REUQIRE AT LEAST 'TAB'
26FC  54 41 42 53         1113  	FCC	'TABS'
2700  83                  1114  	FCB	$83		REQUIRE AT LEAST 'SPA'
2701  53 50 41 43 45 53   1115  	FCC	'SPACES'
2707  82                  1116  	FCB	$82		REQUIRE AT LEAST 'DO'
2708  44 4F 53            1117  	FCC	'DOS'
270B  80                  1118  	FCB	$80		INDICATE END OF TABLE
270C                      1119  *
270C                      1120  * MESSAGES
270C                      1121  *
270C  4E 65 77 20 66 69 + 1122  NEWMSG	FCCZ	'New file'
2715  46 69 6C 65 20 6C + 1123  OUTERR	FCCZ	'File limit reached.'
2729  50 72 65 73 73 20 + 1124  WAIMSG	FCCZ	'Press any Key to Continue'
2743  53 74 72 69 6E 67 + 1125  SNFMSG	FCCZ	'String not found'
2754  42 75 66 66 65 72 + 1126  RESMSG	FCCZ	'Buffer reset'
2761  55 6E 6B 6E 6F 77 + 1127  ICMMSG	FCCZ	'Unknown Command'
2771  49 6E 73 65 72 74 + 1128  INSON	FCCZ	'Insert on'
277B  49 6E 73 65 72 74 + 1129  INSOFF	FCCZ	'Insert off'
2786  5B 53 59 53 54 45 + 1130  HLPFIL	FCCZ	'[SYSTEM]ED.HLP'	HELP FILE
2795  5B 45 4F 46 5D 00   1131  EOFMSG	FCCZ	'[EOF]'			END OF FILE MESSAGE
279B  0E                  1132  INVON	FCB	'N'-$40			TURN ON INVERSE VIDEO
279C  00                  1133  INVCHR	FCB	0			CHARACTER TO INVERSE
279D  0F 00               1134  INVOFF	FCB	'O'-$40,0		TURN OFF INVERSE VIDEO
