                      (       scream.asm):00001                 PRAGMA  CD
                      (       scream.asm):00002         
                      (       scream.asm):00003         ;__SCREAM_______________________________________________________
                      (       scream.asm):00004         ;
                      (       scream.asm):00005         ; This is a quick program that can be put on a ROM to test the
                      (       scream.asm):00006         ; 6809 board.
                      (       scream.asm):00007         ;
                      (       scream.asm):00008         ; It assumes that the 6809 board is set for IOPage 03.
                      (       scream.asm):00009         ; remember that bit A15 is inverted on the board so the dip switch is set to $83.
                      (       scream.asm):00010         ;
                      (       scream.asm):00011         ;
                      (       scream.asm):00012         ; If the SBC is the only CPU in the system, ensure that jumpers
                      (       scream.asm):00013         ; J1 and J2 are set for 1&2.   Then burn scrmrom.hex into EPROM.
                      (       scream.asm):00014         ;
                      (       scream.asm):00015         ; If the SBC is secondary to a Z80, the scrm.com file can be run from CP/M or the
                      (       scream.asm):00016         ; scream.hex file can be loaded from the monitor. Ensure that jumpers J1 and J4
                      (       scream.asm):00017         ; are set for 2&3, the 6502 toggle IO address is set for $FF and
                      (       scream.asm):00018         ; the 65C02 board is set for IOPage 03.
                      (       scream.asm):00019         ; remember that bit A15 is inverted on the board so the dip switch is set to $83.
                      (       scream.asm):00020         ;
                      (       scream.asm):00021         ; ** Note that this program will change the baud rate to 9600.
                      (       scream.asm):00022         ;
                      (       scream.asm):00023         ;
                      (       scream.asm):00024         ; to run from the MBC Z80 monitor
                      (       scream.asm):00025         ;
                      (       scream.asm):00026         ; first set the MPCL to allow RAM in the low bank
                      (       scream.asm):00027         ; >O 7C 80
                      (       scream.asm):00028         ; >O 78 80
                      (       scream.asm):00029         ;
                      (       scream.asm):00030         ; then load the .HEX file.
                      (       scream.asm):00031         ; >L
                      (       scream.asm):00032         ;
                      (       scream.asm):00033         ;
                      (       scream.asm):00034         ; Finally transfer control to the 6809 by reading the toggle register
                      (       scream.asm):00035         ; >I FF
                      (       scream.asm):00036         ;
                      (       scream.asm):00037         ; The '09 should reset and run this program
                      (       scream.asm):00038         ;
                      (       scream.asm):00039         ;_______________________________________________________________
                      (       scream.asm):00040         
                      (       scream.asm):00041         ; UART 16C550 SERIAL
     FE68             (       scream.asm):00042         UART0           EQU $FE68                         ; DATA IN/OUT
     FE69             (       scream.asm):00043         UART1           EQU $FE69                         ; CHECK RX
     FE6A             (       scream.asm):00044         UART2           EQU $FE6A                         ; INTERRUPTS
     FE6B             (       scream.asm):00045         UART3           EQU $FE6B                         ; LINE CONTROL
     FE6C             (       scream.asm):00046         UART4           EQU $FE6C                         ; MODEM CONTROL
     FE6D             (       scream.asm):00047         UART5           EQU $FE6D                         ; LINE STATUS
     FE6E             (       scream.asm):00048         UART6           EQU $FE6E                         ; MODEM STATUS
     FE6F             (       scream.asm):00049         UART7           EQU $FE6F                         ; SCRATCH REG.
                      (       scream.asm):00050         
                      (       scream.asm):00051         ; this is Z80 code that is used to be able to run this as a .COM file.  It is truncated
                      (       scream.asm):00052         ; when the various .HEX files are generated
                      (       scream.asm):00053         ;
                      (       scream.asm):00054                 ORG     $EFE0
EFE0 F3               (       scream.asm):00055                 FCB     $F3                               ;DI - DISABLE INTERRUPTS
EFE1 010010           (       scream.asm):00056                 FCB     $01,$00,$10                       ;LD   BC,$1000 -BYTES TO MOVE
EFE4 110070           (       scream.asm):00057                 FCB     $11,$00,$70                       ;LD   DE,$7000 -DESTINATION ADDRESS (6809 IS !A15)
EFE7 212001           (       scream.asm):00058                 FCB     $21,$20,$01                       ;LD   HL,$0120 -SOURCE ADDRESS
EFEA EDB0             (       scream.asm):00059                 FCB     $ED,$B0                           ;LDIR                  -COPY RAM
EFEC DBF0             (       scream.asm):00060                 FCB     $DB,$F0                           ;IN   A,$F0    -ENABLE 6809
EFEE 0E00             (       scream.asm):00061                 FCB     $0E,$00                           ;LD   C,00H    -CP/M SYSTEM RESET CALL
EFF0 CD0500           (       scream.asm):00062                 FCB     $CD,$05,$00                       ;CALL 0005H    -RETURN TO PROMPT
                      (       scream.asm):00063         ;
                      (       scream.asm):00064         ;
                      (       scream.asm):00065         ;
                      (       scream.asm):00066                 ORG     $F000
                      (       scream.asm):00067         
                      (       scream.asm):00068         ;__COLD_START___________________________________________________
                      (       scream.asm):00069         ;
                      (       scream.asm):00070         ; PERFORM SYSTEM COLD INIT
                      (       scream.asm):00071         ;
                      (       scream.asm):00072         ;_______________________________________________________________
F000                  (       scream.asm):00073         COLD_START:
F000                  (       scream.asm):00074         MAIN:
F000 10DE7F           (       scream.asm):00075 [6]             LDS     $007F                             ; RESET STACK POINTER
                      (       scream.asm):00076         ;       LDA             #$80            ;
                      (       scream.asm):00077         ;       STA             UART3           ; SET DLAB FLAG
                      (       scream.asm):00078         ;       LDA             #12                     ; SET TO 12 = 9600 BAUD
                      (       scream.asm):00079         ;       STA             UART0           ; save baud rate
                      (       scream.asm):00080         ;       LDA             #00                     ;
                      (       scream.asm):00081         ;       STA             UART1           ;
                      (       scream.asm):00082         ;       LDA             #03                     ;
                      (       scream.asm):00083         ;       STA             UART3           ; SET 8 BIT DATA, 1 STOPBIT
                      (       scream.asm):00084         ;       STA             UART4           ;
                      (       scream.asm):00085         
F003                  (       scream.asm):00086         SERIAL_OUTCH:
F003                  (       scream.asm):00087         TX_BUSYLP:
F003 B6FE6D           (       scream.asm):00088 [5]             LDA     UART5                             ; READ LINE STATUS REGISTER
F006 8420             (       scream.asm):00089 [2]             ANDA    #$20                              ; TEST IF UART IS READY TO SEND (BIT 5)
F008 8100             (       scream.asm):00090 [2]             CMPA    #$00
F00A 27F7             (       scream.asm):00091 [3]             BEQ     TX_BUSYLP                         ; IF NOT REPEAT
F00C 8641             (       scream.asm):00092 [2]             LDA     #'A
F00E B7FE68           (       scream.asm):00093 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F011 B7FE68           (       scream.asm):00094 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F014 B7FE68           (       scream.asm):00095 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F017 B7FE68           (       scream.asm):00096 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F01A B7FE68           (       scream.asm):00097 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F01D B7FE68           (       scream.asm):00098 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F020 B7FE68           (       scream.asm):00099 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F023 B7FE68           (       scream.asm):00100 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F026 B7FE68           (       scream.asm):00101 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F029 B7FE68           (       scream.asm):00102 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F02C B7FE68           (       scream.asm):00103 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F02F B7FE68           (       scream.asm):00104 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F032 B7FE68           (       scream.asm):00105 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F035 B7FE68           (       scream.asm):00106 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F038 B7FE68           (       scream.asm):00107 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F03B B7FE68           (       scream.asm):00108 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F03E B7FE68           (       scream.asm):00109 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F041 B7FE68           (       scream.asm):00110 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F044 B7FE68           (       scream.asm):00111 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F047 B7FE68           (       scream.asm):00112 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F04A B7FE68           (       scream.asm):00113 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F04D B7FE68           (       scream.asm):00114 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F050 B7FE68           (       scream.asm):00115 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F053 B7FE68           (       scream.asm):00116 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F056 B7FE68           (       scream.asm):00117 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F059 B7FE68           (       scream.asm):00118 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F05C B7FE68           (       scream.asm):00119 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F05F B7FE68           (       scream.asm):00120 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F062 B7FE68           (       scream.asm):00121 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F065 B7FE68           (       scream.asm):00122 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F068 B7FE68           (       scream.asm):00123 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F06B B7FE68           (       scream.asm):00124 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F06E B7FE68           (       scream.asm):00125 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F071 B7FE68           (       scream.asm):00126 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F074 B7FE68           (       scream.asm):00127 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F077 B7FE68           (       scream.asm):00128 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F07A B7FE68           (       scream.asm):00129 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F07D B7FE68           (       scream.asm):00130 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F080 B7FE68           (       scream.asm):00131 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F083 B7FE68           (       scream.asm):00132 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F086 B7FE68           (       scream.asm):00133 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F089 B7FE68           (       scream.asm):00134 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F08C B7FE68           (       scream.asm):00135 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F08F B7FE68           (       scream.asm):00136 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F092 B7FE68           (       scream.asm):00137 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F095 B7FE68           (       scream.asm):00138 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F098 B7FE68           (       scream.asm):00139 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F09B B7FE68           (       scream.asm):00140 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F09E B7FE68           (       scream.asm):00141 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F0A1 B7FE68           (       scream.asm):00142 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F0A4 B7FE68           (       scream.asm):00143 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F0A7 B7FE68           (       scream.asm):00144 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F0AA B7FE68           (       scream.asm):00145 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F0AD B7FE68           (       scream.asm):00146 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F0B0 B7FE68           (       scream.asm):00147 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F0B3 B7FE68           (       scream.asm):00148 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F0B6 B7FE68           (       scream.asm):00149 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F0B9 B7FE68           (       scream.asm):00150 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F0BC B7FE68           (       scream.asm):00151 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F0BF B7FE68           (       scream.asm):00152 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F0C2 B7FE68           (       scream.asm):00153 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F0C5 B7FE68           (       scream.asm):00154 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F0C8 B7FE68           (       scream.asm):00155 [5]             STA     UART0                             ; THEN WRITE THE CHAR TO UART
F0CB 7EF003           (       scream.asm):00156 [4]             JMP     SERIAL_OUTCH
                      (       scream.asm):00157         
                      (       scream.asm):00158                 ORG     $FFFE                             ; SET RESET VECTOR TO
                      (       scream.asm):00159         
                      (       scream.asm):00160         
FFFE                  (       scream.asm):00161         RESETV:
FFFE F000             (       scream.asm):00162                 FDB     $F000
                      (       scream.asm):00163         
                      (       scream.asm):00164                 END

Symbol Table:
[ G] COLD_START                       F000
[ G] MAIN                             F000
[ G] RESETV                           FFFE
[ G] SERIAL_OUTCH                     F003
[ G] TX_BUSYLP                        F003
[ G] UART0                            FE68
[ G] UART1                            FE69
[ G] UART2                            FE6A
[ G] UART3                            FE6B
[ G] UART4                            FE6C
[ G] UART5                            FE6D
[ G] UART6                            FE6E
[ G] UART7                            FE6F
